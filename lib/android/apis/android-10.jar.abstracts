public abstract class java.security.cert.Certificate extends java.lang.Object implements java.io.Serializable{
public abstract byte[] getEncoded()       throws java.security.cert.CertificateEncodingException;
public abstract void verify(java.security.PublicKey)       throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;
public abstract void verify(java.security.PublicKey, java.lang.String)       throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;
public abstract java.lang.String toString();
public abstract java.security.PublicKey getPublicKey();
public abstract boolean onPreferenceClick(android.preference.Preference);
public abstract class android.view.AbsSavedState extends java.lang.Object implements android.os.Parcelable{
public abstract java.lang.Object createFromParcel(android.os.Parcel);
public abstract java.lang.Object[] newArray(int);
public abstract javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL);
public abstract org.apache.http.util.CharArrayBuffer getBuffer();
public abstract int getValuePos();
public abstract class android.widget.ResourceCursorTreeAdapter extends android.widget.CursorTreeAdapter{
public abstract class javax.net.ssl.SSLSocket extends java.net.Socket{
public abstract java.lang.String[] getSupportedCipherSuites();
public abstract java.lang.String[] getEnabledCipherSuites();
public abstract void setEnabledCipherSuites(java.lang.String[]);
public abstract java.lang.String[] getSupportedProtocols();
public abstract java.lang.String[] getEnabledProtocols();
public abstract void setEnabledProtocols(java.lang.String[]);
public abstract javax.net.ssl.SSLSession getSession();
public abstract void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener);
public abstract void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener);
public abstract void startHandshake()       throws java.io.IOException;
public abstract void setUseClientMode(boolean);
public abstract boolean getUseClientMode();
public abstract void setNeedClientAuth(boolean);
public abstract boolean getNeedClientAuth();
public abstract void setWantClientAuth(boolean);
public abstract boolean getWantClientAuth();
public abstract void setEnableSessionCreation(boolean);
public abstract boolean getEnableSessionCreation();
public abstract class org.apache.http.impl.auth.RFC2617Scheme extends org.apache.http.impl.auth.AuthSchemeBase{
public abstract void processChallenge(org.apache.http.Header)       throws org.apache.http.auth.MalformedChallengeException;
public abstract java.lang.String getSchemeName();
public abstract java.lang.String getParameter(java.lang.String);
public abstract java.lang.String getRealm();
public abstract boolean isConnectionBased();
public abstract boolean isComplete();
public abstract org.apache.http.Header authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest)       throws org.apache.http.auth.AuthenticationException;
public abstract void onInit(int);
public abstract void onScrollStateChanged(android.widget.AbsListView, int);
public abstract void onScroll(android.widget.AbsListView, int, int, int);
public abstract void onKeyguardExitResult(boolean);
public abstract class java.lang.VirtualMachineError extends java.lang.Error{
public abstract void setOption(int, java.lang.Object)       throws java.net.SocketException;
public abstract java.lang.Object getOption(int)       throws java.net.SocketException;
public abstract void onCancel();
public abstract android.view.SubMenu setHeaderTitle(int);
public abstract android.view.SubMenu setHeaderTitle(java.lang.CharSequence);
public abstract android.view.SubMenu setHeaderIcon(int);
public abstract android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable);
public abstract android.view.SubMenu setHeaderView(android.view.View);
public abstract void clearHeader();
public abstract android.view.SubMenu setIcon(int);
public abstract android.view.SubMenu setIcon(android.graphics.drawable.Drawable);
public abstract android.view.MenuItem getItem();
public abstract org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String);
public abstract java.util.Map getAll();
public abstract java.lang.String getString(java.lang.String, java.lang.String);
public abstract int getInt(java.lang.String, int);
public abstract long getLong(java.lang.String, long);
public abstract float getFloat(java.lang.String, float);
public abstract boolean getBoolean(java.lang.String, boolean);
public abstract boolean contains(java.lang.String);
public abstract android.content.SharedPreferences$Editor edit();
public abstract void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener);
public abstract void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener);
public abstract void onGesturePerformed(android.gesture.GestureOverlayView, android.gesture.Gesture);
public abstract java.lang.String item(int);
public abstract int getLength();
public abstract boolean contains(java.lang.String);
public abstract java.lang.Object run()       throws java.lang.Exception;
public abstract void onSharedPreferenceChanged(android.content.SharedPreferences, java.lang.String);
public abstract class java.nio.channels.SocketChannel extends java.nio.channels.spi.AbstractSelectableChannel implements java.nio.channels.ByteChannel,java.nio.channels.ScatteringByteChannel,java.nio.channels.GatheringByteChannel{
public abstract java.net.Socket socket();
public abstract boolean isConnected();
public abstract boolean isConnectionPending();
public abstract boolean connect(java.net.SocketAddress)       throws java.io.IOException;
public abstract boolean finishConnect()       throws java.io.IOException;
public abstract int read(java.nio.ByteBuffer)       throws java.io.IOException;
public abstract long read(java.nio.ByteBuffer[], int, int)       throws java.io.IOException;
public abstract int write(java.nio.ByteBuffer)       throws java.io.IOException;
public abstract long write(java.nio.ByteBuffer[], int, int)       throws java.io.IOException;
public abstract class java.net.ProxySelector extends java.lang.Object{
public abstract java.util.List select(java.net.URI);
public abstract void connectFailed(java.net.URI, java.net.SocketAddress, java.io.IOException);
public abstract class android.telephony.CellLocation extends java.lang.Object{
public abstract void onCheckedChanged(android.widget.CompoundButton, boolean);
public abstract class android.accessibilityservice.AccessibilityService extends android.app.Service{
public abstract void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent);
public abstract void onInterrupt();
public abstract long write(java.nio.ByteBuffer[], int, int)       throws java.io.IOException;
public abstract long write(java.nio.ByteBuffer[])       throws java.io.IOException;
public abstract class android.text.Layout extends java.lang.Object{
public abstract int getLineCount();
public abstract int getLineTop(int);
public abstract int getLineDescent(int);
public abstract int getLineStart(int);
public abstract int getParagraphDirection(int);
public abstract boolean getLineContainsTab(int);
public abstract android.text.Layout$Directions getLineDirections(int);
public abstract int getTopPadding();
public abstract int getBottomPadding();
public abstract int getEllipsisStart(int);
public abstract int getEllipsisCount(int);
public abstract void onCheckedChanged(android.widget.RadioGroup, int);
public abstract class android.app.backup.RestoreObserver extends java.lang.Object{
public abstract class java.io.FilterWriter extends java.io.Writer{
public abstract class javax.xml.transform.TransformerFactory extends java.lang.Object{
public abstract javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)       throws javax.xml.transform.TransformerConfigurationException;
public abstract javax.xml.transform.Transformer newTransformer()       throws javax.xml.transform.TransformerConfigurationException;
public abstract javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)       throws javax.xml.transform.TransformerConfigurationException;
public abstract javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source, java.lang.String, java.lang.String, java.lang.String)       throws javax.xml.transform.TransformerConfigurationException;
public abstract void setURIResolver(javax.xml.transform.URIResolver);
public abstract javax.xml.transform.URIResolver getURIResolver();
public abstract void setFeature(java.lang.String, boolean)       throws javax.xml.transform.TransformerConfigurationException;
public abstract boolean getFeature(java.lang.String);
public abstract void setAttribute(java.lang.String, java.lang.Object);
public abstract java.lang.Object getAttribute(java.lang.String);
public abstract void setErrorListener(javax.xml.transform.ErrorListener);
public abstract javax.xml.transform.ErrorListener getErrorListener();
public abstract class java.util.AbstractSequentialList extends java.util.AbstractList{
public abstract java.util.ListIterator listIterator(int);
public abstract void handshakeCompleted(javax.net.ssl.HandshakeCompletedEvent);
public abstract class javax.crypto.KeyAgreementSpi extends java.lang.Object{
protected abstract void engineInit(java.security.Key, java.security.SecureRandom)       throws java.security.InvalidKeyException;
protected abstract void engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)       throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
protected abstract java.security.Key engineDoPhase(java.security.Key, boolean)       throws java.security.InvalidKeyException, java.lang.IllegalStateException;
protected abstract byte[] engineGenerateSecret()       throws java.lang.IllegalStateException;
protected abstract int engineGenerateSecret(byte[], int)       throws java.lang.IllegalStateException, javax.crypto.ShortBufferException;
protected abstract javax.crypto.SecretKey engineGenerateSecret(java.lang.String)       throws java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException;
public abstract android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet);
public abstract boolean setViewValue(android.view.View, android.database.Cursor, int);
public abstract void addCallback(android.view.SurfaceHolder$Callback);
public abstract void removeCallback(android.view.SurfaceHolder$Callback);
public abstract boolean isCreating();
public abstract void setType(int);
public abstract void setFixedSize(int, int);
public abstract void setSizeFromLayout();
public abstract void setFormat(int);
public abstract void setKeepScreenOn(boolean);
public abstract android.graphics.Canvas lockCanvas();
public abstract android.graphics.Canvas lockCanvas(android.graphics.Rect);
public abstract void unlockCanvasAndPost(android.graphics.Canvas);
public abstract android.graphics.Rect getSurfaceFrame();
public abstract android.view.Surface getSurface();
public abstract class android.view.OrientationEventListener extends java.lang.Object{
public abstract void onOrientationChanged(int);
public abstract org.apache.http.params.HttpParams getParams();
public abstract org.apache.http.conn.ClientConnectionManager getConnectionManager();
public abstract org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)       throws java.io.IOException, org.apache.http.client.ClientProtocolException;
public abstract org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest, org.apache.http.protocol.HttpContext)       throws java.io.IOException, org.apache.http.client.ClientProtocolException;
public abstract org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest)       throws java.io.IOException, org.apache.http.client.ClientProtocolException;
public abstract org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)       throws java.io.IOException, org.apache.http.client.ClientProtocolException;
public abstract java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest, org.apache.http.client.ResponseHandler)       throws java.io.IOException, org.apache.http.client.ClientProtocolException;
public abstract java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest, org.apache.http.client.ResponseHandler, org.apache.http.protocol.HttpContext)       throws java.io.IOException, org.apache.http.client.ClientProtocolException;
public abstract java.lang.Object execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.client.ResponseHandler)       throws java.io.IOException, org.apache.http.client.ClientProtocolException;
public abstract java.lang.Object execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.client.ResponseHandler, org.apache.http.protocol.HttpContext)       throws java.io.IOException, org.apache.http.client.ClientProtocolException;
public abstract boolean onInfo(android.media.MediaPlayer, int, int);
public abstract class android.view.LayoutInflater extends java.lang.Object{
public abstract android.view.LayoutInflater cloneInContext(android.content.Context);
public abstract class java.security.KeyStore$Builder extends java.lang.Object{
public abstract java.security.KeyStore getKeyStore()       throws java.security.KeyStoreException;
public abstract java.security.KeyStore$ProtectionParameter getProtectionParameter(java.lang.String)       throws java.security.KeyStoreException;
public abstract void writeTo(java.io.OutputStream)       throws java.io.IOException;
public abstract void onParameterChange(android.media.audiofx.PresetReverb, int, int, short);
public abstract int findTokenStart(java.lang.CharSequence, int);
public abstract int findTokenEnd(java.lang.CharSequence, int);
public abstract java.lang.CharSequence terminateToken(java.lang.CharSequence);
public abstract class org.apache.http.impl.io.AbstractSessionOutputBuffer extends java.lang.Object implements org.apache.http.io.SessionOutputBuffer{
public abstract org.w3c.dom.Text splitText(int)       throws org.w3c.dom.DOMException;
public abstract boolean isElementContentWhitespace();
public abstract java.lang.String getWholeText();
public abstract org.w3c.dom.Text replaceWholeText(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract class java.net.CacheResponse extends java.lang.Object{
public abstract java.util.Map getHeaders()       throws java.io.IOException;
public abstract java.io.InputStream getBody()       throws java.io.IOException;
public abstract class org.apache.http.impl.conn.AbstractPooledConnAdapter extends org.apache.http.impl.conn.AbstractClientConnAdapter{
public abstract int read(java.nio.CharBuffer)       throws java.io.IOException;
public abstract class java.security.Identity extends java.lang.Object implements java.security.Principal,java.io.Serializable{
public abstract java.math.BigInteger getY();
public abstract class org.apache.http.impl.cookie.AbstractCookieSpec extends java.lang.Object implements org.apache.http.cookie.CookieSpec{
public abstract boolean onTouch(android.view.View, android.view.MotionEvent);
public abstract int size();
public abstract boolean isEmpty();
public abstract boolean contains(java.lang.Object);
public abstract java.util.Iterator iterator();
public abstract java.lang.Object[] toArray();
public abstract java.lang.Object[] toArray(java.lang.Object[]);
public abstract boolean add(java.lang.Object);
public abstract boolean remove(java.lang.Object);
public abstract boolean containsAll(java.util.Collection);
public abstract boolean addAll(java.util.Collection);
public abstract boolean addAll(int, java.util.Collection);
public abstract boolean removeAll(java.util.Collection);
public abstract boolean retainAll(java.util.Collection);
public abstract void clear();
public abstract boolean equals(java.lang.Object);
public abstract int hashCode();
public abstract java.lang.Object get(int);
public abstract java.lang.Object set(int, java.lang.Object);
public abstract void add(int, java.lang.Object);
public abstract java.lang.Object remove(int);
public abstract int indexOf(java.lang.Object);
public abstract int lastIndexOf(java.lang.Object);
public abstract java.util.ListIterator listIterator();
public abstract java.util.ListIterator listIterator(int);
public abstract java.util.List subList(int, int);
public abstract void sessionCreated(android.view.inputmethod.InputMethodSession);
public abstract class android.preference.PreferenceActivity extends android.app.ListActivity{
public abstract void destroy()       throws javax.security.auth.DestroyFailedException;
public abstract boolean isDestroyed();
public abstract class java.util.AbstractCollection extends java.lang.Object implements java.util.Collection{
public abstract java.util.Iterator iterator();
public abstract int size();
public abstract java.math.BigInteger getP();
public abstract java.math.BigInteger getQ();
public abstract java.math.BigInteger getG();
public abstract void glTexParameterfv(int, int, float[], int);
public abstract void glCurrentPaletteMatrixOES(int);
public abstract void glDrawTexfOES(float, float, float, float, float);
public abstract void glDrawTexfvOES(float[], int);
public abstract void glDrawTexfvOES(java.nio.FloatBuffer);
public abstract void glDrawTexiOES(int, int, int, int, int);
public abstract void glDrawTexivOES(int[], int);
public abstract void glDrawTexivOES(java.nio.IntBuffer);
public abstract void glDrawTexsOES(short, short, short, short, short);
public abstract void glDrawTexsvOES(short[], int);
public abstract void glDrawTexsvOES(java.nio.ShortBuffer);
public abstract void glDrawTexxOES(int, int, int, int, int);
public abstract void glDrawTexxvOES(int[], int);
public abstract void glDrawTexxvOES(java.nio.IntBuffer);
public abstract void glEnable(int);
public abstract void glEnableClientState(int);
public abstract void glLoadPaletteFromModelViewMatrixOES();
public abstract void glMatrixIndexPointerOES(int, int, int, java.nio.Buffer);
public abstract void glMatrixIndexPointerOES(int, int, int, int);
public abstract void glWeightPointerOES(int, int, int, java.nio.Buffer);
public abstract void glWeightPointerOES(int, int, int, int);
public abstract class java.security.SignatureSpi extends java.lang.Object{
protected abstract void engineInitVerify(java.security.PublicKey)       throws java.security.InvalidKeyException;
protected abstract void engineInitSign(java.security.PrivateKey)       throws java.security.InvalidKeyException;
protected abstract void engineUpdate(byte)       throws java.security.SignatureException;
protected abstract void engineUpdate(byte[], int, int)       throws java.security.SignatureException;
protected abstract byte[] engineSign()       throws java.security.SignatureException;
protected abstract boolean engineVerify(byte[])       throws java.security.SignatureException;
protected abstract void engineSetParameter(java.lang.String, java.lang.Object)       throws java.security.InvalidParameterException;
protected abstract java.lang.Object engineGetParameter(java.lang.String)       throws java.security.InvalidParameterException;
public abstract class android.text.method.NumberKeyListener extends android.text.method.BaseKeyListener implements android.text.InputFilter{
protected abstract char[] getAcceptedChars();
public abstract void performBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor);
public abstract void restoreEntity(android.app.backup.BackupDataInputStream);
public abstract void writeNewStateDescription(android.os.ParcelFileDescriptor);
public abstract int getLeadingMargin(boolean);
public abstract void drawLeadingMargin(android.graphics.Canvas, android.graphics.Paint, int, int, int, int, int, java.lang.CharSequence, int, int, boolean, android.text.Layout);
public abstract boolean addOwner(java.security.Principal, java.security.Principal)       throws java.security.acl.NotOwnerException;
public abstract boolean deleteOwner(java.security.Principal, java.security.Principal)       throws java.security.acl.NotOwnerException, java.security.acl.LastOwnerException;
public abstract boolean isOwner(java.security.Principal);
public abstract java.util.List getLoggerNames();
public abstract java.lang.String getLoggerLevel(java.lang.String);
public abstract void setLoggerLevel(java.lang.String, java.lang.String);
public abstract java.lang.String getParentLoggerName(java.lang.String);
public abstract class android.test.ActivityUnitTestCase extends android.test.ActivityTestCase{
public abstract class org.apache.http.impl.client.AbstractHttpClient extends java.lang.Object implements org.apache.http.client.HttpClient{
protected abstract org.apache.http.params.HttpParams createHttpParams();
protected abstract org.apache.http.protocol.HttpContext createHttpContext();
protected abstract org.apache.http.protocol.HttpRequestExecutor createRequestExecutor();
protected abstract org.apache.http.conn.ClientConnectionManager createClientConnectionManager();
protected abstract org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry();
protected abstract org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry();
protected abstract org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy();
protected abstract org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy();
protected abstract org.apache.http.protocol.BasicHttpProcessor createHttpProcessor();
protected abstract org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler();
protected abstract org.apache.http.client.RedirectHandler createRedirectHandler();
protected abstract org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler();
protected abstract org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler();
protected abstract org.apache.http.client.CookieStore createCookieStore();
protected abstract org.apache.http.client.CredentialsProvider createCredentialsProvider();
protected abstract org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner();
protected abstract org.apache.http.client.UserTokenHandler createUserTokenHandler();
public abstract void shutdown();
public abstract java.util.List shutdownNow();
public abstract boolean isShutdown();
public abstract boolean isTerminated();
public abstract boolean awaitTermination(long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract java.util.concurrent.Future submit(java.util.concurrent.Callable);
public abstract java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object);
public abstract java.util.concurrent.Future submit(java.lang.Runnable);
public abstract java.util.List invokeAll(java.util.Collection)       throws java.lang.InterruptedException;
public abstract java.util.List invokeAll(java.util.Collection, long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract java.lang.Object invokeAny(java.util.Collection)       throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
public abstract java.lang.Object invokeAny(java.util.Collection, long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
public abstract class android.test.SingleLaunchActivityTestCase extends android.test.InstrumentationTestCase{
public abstract void onDismiss();
public abstract void update(java.util.Observable, java.lang.Object);
public abstract java.util.concurrent.locks.Lock readLock();
public abstract java.util.concurrent.locks.Lock writeLock();
public abstract java.sql.Connection getConnection()       throws java.sql.SQLException;
public abstract void close()       throws java.sql.SQLException;
public abstract void addConnectionEventListener(javax.sql.ConnectionEventListener);
public abstract void removeConnectionEventListener(javax.sql.ConnectionEventListener);
public abstract void addStatementEventListener(javax.sql.StatementEventListener);
public abstract void removeStatementEventListener(javax.sql.StatementEventListener);
public abstract void close()       throws java.io.IOException;
public abstract boolean isOpen();
public abstract boolean isStale();
public abstract void setSocketTimeout(int);
public abstract int getSocketTimeout();
public abstract void shutdown()       throws java.io.IOException;
public abstract org.apache.http.HttpConnectionMetrics getMetrics();
public abstract void start(org.xml.sax.Attributes);
public abstract class javax.net.ssl.KeyManagerFactorySpi extends java.lang.Object{
protected abstract void engineInit(java.security.KeyStore, char[])       throws java.security.KeyStoreException, java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException;
protected abstract void engineInit(javax.net.ssl.ManagerFactoryParameters)       throws java.security.InvalidAlgorithmParameterException;
protected abstract javax.net.ssl.KeyManager[] engineGetKeyManagers();
public abstract boolean onKey(android.view.View, int, android.view.KeyEvent);
public abstract class javax.xml.validation.SchemaFactory extends java.lang.Object{
public abstract boolean isSchemaLanguageSupported(java.lang.String);
public abstract void setErrorHandler(org.xml.sax.ErrorHandler);
public abstract org.xml.sax.ErrorHandler getErrorHandler();
public abstract void setResourceResolver(org.w3c.dom.ls.LSResourceResolver);
public abstract org.w3c.dom.ls.LSResourceResolver getResourceResolver();
public abstract javax.xml.validation.Schema newSchema(javax.xml.transform.Source[])       throws org.xml.sax.SAXException;
public abstract javax.xml.validation.Schema newSchema()       throws org.xml.sax.SAXException;
public abstract void writeString(java.lang.String)       throws java.sql.SQLException;
public abstract void writeBoolean(boolean)       throws java.sql.SQLException;
public abstract void writeByte(byte)       throws java.sql.SQLException;
public abstract void writeShort(short)       throws java.sql.SQLException;
public abstract void writeInt(int)       throws java.sql.SQLException;
public abstract void writeLong(long)       throws java.sql.SQLException;
public abstract void writeFloat(float)       throws java.sql.SQLException;
public abstract void writeDouble(double)       throws java.sql.SQLException;
public abstract void writeBigDecimal(java.math.BigDecimal)       throws java.sql.SQLException;
public abstract void writeBytes(byte[])       throws java.sql.SQLException;
public abstract void writeDate(java.sql.Date)       throws java.sql.SQLException;
public abstract void writeTime(java.sql.Time)       throws java.sql.SQLException;
public abstract void writeTimestamp(java.sql.Timestamp)       throws java.sql.SQLException;
public abstract void writeCharacterStream(java.io.Reader)       throws java.sql.SQLException;
public abstract void writeAsciiStream(java.io.InputStream)       throws java.sql.SQLException;
public abstract void writeBinaryStream(java.io.InputStream)       throws java.sql.SQLException;
public abstract void writeObject(java.sql.SQLData)       throws java.sql.SQLException;
public abstract void writeRef(java.sql.Ref)       throws java.sql.SQLException;
public abstract void writeBlob(java.sql.Blob)       throws java.sql.SQLException;
public abstract void writeClob(java.sql.Clob)       throws java.sql.SQLException;
public abstract void writeStruct(java.sql.Struct)       throws java.sql.SQLException;
public abstract void writeArray(java.sql.Array)       throws java.sql.SQLException;
public abstract void writeURL(java.net.URL)       throws java.sql.SQLException;
public abstract void writeNString(java.lang.String)       throws java.sql.SQLException;
public abstract void writeNClob(java.sql.NClob)       throws java.sql.SQLException;
public abstract void writeRowId(java.sql.RowId)       throws java.sql.SQLException;
public abstract void writeSQLXML(java.sql.SQLXML)       throws java.sql.SQLException;
public abstract void glGetPointerv(int, java.nio.Buffer[]);
public abstract void glBindBuffer(int, int);
public abstract void glBufferData(int, int, java.nio.Buffer, int);
public abstract void glBufferSubData(int, int, int, java.nio.Buffer);
public abstract void glClipPlanef(int, float[], int);
public abstract void glClipPlanef(int, java.nio.FloatBuffer);
public abstract void glClipPlanex(int, int[], int);
public abstract void glClipPlanex(int, java.nio.IntBuffer);
public abstract void glColor4ub(byte, byte, byte, byte);
public abstract void glColorPointer(int, int, int, int);
public abstract void glDeleteBuffers(int, int[], int);
public abstract void glDeleteBuffers(int, java.nio.IntBuffer);
public abstract void glDrawElements(int, int, int, int);
public abstract void glGenBuffers(int, int[], int);
public abstract void glGenBuffers(int, java.nio.IntBuffer);
public abstract void glGetBooleanv(int, boolean[], int);
public abstract void glGetBooleanv(int, java.nio.IntBuffer);
public abstract void glGetBufferParameteriv(int, int, int[], int);
public abstract void glGetBufferParameteriv(int, int, java.nio.IntBuffer);
public abstract void glGetClipPlanef(int, float[], int);
public abstract void glGetClipPlanef(int, java.nio.FloatBuffer);
public abstract void glGetClipPlanex(int, int[], int);
public abstract void glGetClipPlanex(int, java.nio.IntBuffer);
public abstract void glGetFixedv(int, int[], int);
public abstract void glGetFixedv(int, java.nio.IntBuffer);
public abstract void glGetFloatv(int, float[], int);
public abstract void glGetFloatv(int, java.nio.FloatBuffer);
public abstract void glGetLightfv(int, int, float[], int);
public abstract void glGetLightfv(int, int, java.nio.FloatBuffer);
public abstract void glGetLightxv(int, int, int[], int);
public abstract void glGetLightxv(int, int, java.nio.IntBuffer);
public abstract void glGetMaterialfv(int, int, float[], int);
public abstract void glGetMaterialfv(int, int, java.nio.FloatBuffer);
public abstract void glGetMaterialxv(int, int, int[], int);
public abstract void glGetMaterialxv(int, int, java.nio.IntBuffer);
public abstract void glGetTexEnviv(int, int, int[], int);
public abstract void glGetTexEnviv(int, int, java.nio.IntBuffer);
public abstract void glGetTexEnvxv(int, int, int[], int);
public abstract void glGetTexEnvxv(int, int, java.nio.IntBuffer);
public abstract void glGetTexParameterfv(int, int, float[], int);
public abstract void glGetTexParameterfv(int, int, java.nio.FloatBuffer);
public abstract void glGetTexParameteriv(int, int, int[], int);
public abstract void glGetTexParameteriv(int, int, java.nio.IntBuffer);
public abstract void glGetTexParameterxv(int, int, int[], int);
public abstract void glGetTexParameterxv(int, int, java.nio.IntBuffer);
public abstract boolean glIsBuffer(int);
public abstract boolean glIsEnabled(int);
public abstract boolean glIsTexture(int);
public abstract void glNormalPointer(int, int, int);
public abstract void glPointParameterf(int, float);
public abstract void glPointParameterfv(int, float[], int);
public abstract void glPointParameterfv(int, java.nio.FloatBuffer);
public abstract void glPointParameterx(int, int);
public abstract void glPointParameterxv(int, int[], int);
public abstract void glPointParameterxv(int, java.nio.IntBuffer);
public abstract void glPointSizePointerOES(int, int, java.nio.Buffer);
public abstract void glTexCoordPointer(int, int, int, int);
public abstract void glTexEnvi(int, int, int);
public abstract void glTexEnviv(int, int, int[], int);
public abstract void glTexEnviv(int, int, java.nio.IntBuffer);
public abstract void glTexParameterfv(int, int, float[], int);
public abstract void glTexParameterfv(int, int, java.nio.FloatBuffer);
public abstract void glTexParameteri(int, int, int);
public abstract void glTexParameteriv(int, int, int[], int);
public abstract void glTexParameteriv(int, int, java.nio.IntBuffer);
public abstract void glTexParameterxv(int, int, int[], int);
public abstract void glTexParameterxv(int, int, java.nio.IntBuffer);
public abstract void glVertexPointer(int, int, int, int);
public abstract void end(java.lang.String);
public abstract boolean getFeature(java.lang.String)       throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;
public abstract void setFeature(java.lang.String, boolean)       throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;
public abstract java.lang.Object getProperty(java.lang.String)       throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;
public abstract void setProperty(java.lang.String, java.lang.Object)       throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;
public abstract void setEntityResolver(org.xml.sax.EntityResolver);
public abstract org.xml.sax.EntityResolver getEntityResolver();
public abstract void setDTDHandler(org.xml.sax.DTDHandler);
public abstract org.xml.sax.DTDHandler getDTDHandler();
public abstract void setContentHandler(org.xml.sax.ContentHandler);
public abstract org.xml.sax.ContentHandler getContentHandler();
public abstract void setErrorHandler(org.xml.sax.ErrorHandler);
public abstract org.xml.sax.ErrorHandler getErrorHandler();
public abstract void parse(org.xml.sax.InputSource)       throws java.io.IOException, org.xml.sax.SAXException;
public abstract void parse(java.lang.String)       throws java.io.IOException, org.xml.sax.SAXException;
public abstract void setChecked(boolean);
public abstract boolean isChecked();
public abstract void toggle();
public abstract void onAccountsUpdated(android.accounts.Account[]);
public abstract boolean apply(java.lang.Object);
public abstract long getDelay(java.util.concurrent.TimeUnit);
public abstract int from();
public abstract java.lang.String to();
public abstract void onLoadComplete(android.media.SoundPool, int, int);
public abstract boolean match(java.security.cert.CRL);
public abstract java.lang.Object clone();
public abstract class android.view.InputEvent extends java.lang.Object implements android.os.Parcelable{
public abstract void onTimeChanged(android.widget.TimePicker, int, int);
public abstract class android.widget.AbsListView extends android.widget.AdapterView implements android.text.TextWatcher,android.view.ViewTreeObserver$OnGlobalLayoutListener,android.widget.Filter$FilterListener,android.view.ViewTreeObserver$OnTouchModeChangeListener{
public abstract boolean retryRequest(java.io.IOException, int, org.apache.http.protocol.HttpContext);
public abstract int countTestCases();
public abstract void run(junit.framework.TestResult);
public abstract void parse(org.apache.http.cookie.SetCookie, java.lang.String)       throws org.apache.http.cookie.MalformedCookieException;
public abstract void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)       throws org.apache.http.cookie.MalformedCookieException;
public abstract boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin);
public abstract class android.view.ViewGroup extends android.view.View implements android.view.ViewParent,android.view.ViewManager{
protected abstract void onLayout(boolean, int, int, int, int);
public abstract android.database.CursorWindow getWindow();
public abstract void fillWindow(int, android.database.CursorWindow);
public abstract boolean onMove(int, int);
public abstract void onAudioFocusChange(int);
public abstract void onSurfaceCreated(javax.microedition.khronos.opengles.GL10, javax.microedition.khronos.egl.EGLConfig);
public abstract void onSurfaceChanged(javax.microedition.khronos.opengles.GL10, int, int);
public abstract void onDrawFrame(javax.microedition.khronos.opengles.GL10);
public abstract int startPerformance(android.test.PerformanceTestCase$Intermediates);
public abstract boolean isPerformanceOnly();
public abstract class java.security.cert.CertStoreSpi extends java.lang.Object{
public abstract java.util.Collection engineGetCertificates(java.security.cert.CertSelector)       throws java.security.cert.CertStoreException;
public abstract java.util.Collection engineGetCRLs(java.security.cert.CRLSelector)       throws java.security.cert.CertStoreException;
public abstract void sendAccessibilityEvent(int);
public abstract void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent);
public abstract org.xml.sax.InputSource getExternalSubset(java.lang.String, java.lang.String)       throws org.xml.sax.SAXException, java.io.IOException;
public abstract org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String)       throws org.xml.sax.SAXException, java.io.IOException;
public abstract class java.nio.channels.Pipe$SourceChannel extends java.nio.channels.spi.AbstractSelectableChannel implements java.nio.channels.ReadableByteChannel,java.nio.channels.ScatteringByteChannel{
public abstract class javax.xml.parsers.DocumentBuilderFactory extends java.lang.Object{
public abstract javax.xml.parsers.DocumentBuilder newDocumentBuilder()       throws javax.xml.parsers.ParserConfigurationException;
public abstract void setAttribute(java.lang.String, java.lang.Object)       throws java.lang.IllegalArgumentException;
public abstract java.lang.Object getAttribute(java.lang.String)       throws java.lang.IllegalArgumentException;
public abstract void setFeature(java.lang.String, boolean)       throws javax.xml.parsers.ParserConfigurationException;
public abstract boolean getFeature(java.lang.String)       throws javax.xml.parsers.ParserConfigurationException;
public abstract boolean onMenuItemClick(android.view.MenuItem);
public abstract class android.location.LocationProvider extends java.lang.Object{
public abstract boolean requiresNetwork();
public abstract boolean requiresSatellite();
public abstract boolean requiresCell();
public abstract boolean hasMonetaryCost();
public abstract boolean supportsAltitude();
public abstract boolean supportsSpeed();
public abstract boolean supportsBearing();
public abstract int getPowerRequirement();
public abstract int getAccuracy();
public abstract class junit.runner.BaseTestRunner extends java.lang.Object implements junit.framework.TestListener{
public abstract void testStarted(java.lang.String);
public abstract void testEnded(java.lang.String);
public abstract void testFailed(int, junit.framework.Test, java.lang.Throwable);
protected abstract void runFailed(java.lang.String);
public abstract boolean handleMessage(android.os.Message);
public abstract void writeExternal(java.io.ObjectOutput)       throws java.io.IOException;
public abstract void readExternal(java.io.ObjectInput)       throws java.io.IOException, java.lang.ClassNotFoundException;
public abstract java.lang.String getData()       throws org.w3c.dom.DOMException;
public abstract void setData(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract int getLength();
public abstract java.lang.String substringData(int, int)       throws org.w3c.dom.DOMException;
public abstract void appendData(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract void insertData(int, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract void deleteData(int, int)       throws org.w3c.dom.DOMException;
public abstract void replaceData(int, int, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract java.io.Reader getCharacterStream();
public abstract void setCharacterStream(java.io.Reader);
public abstract java.io.InputStream getByteStream();
public abstract void setByteStream(java.io.InputStream);
public abstract java.lang.String getStringData();
public abstract void setStringData(java.lang.String);
public abstract java.lang.String getSystemId();
public abstract void setSystemId(java.lang.String);
public abstract java.lang.String getPublicId();
public abstract void setPublicId(java.lang.String);
public abstract java.lang.String getBaseURI();
public abstract void setBaseURI(java.lang.String);
public abstract java.lang.String getEncoding();
public abstract void setEncoding(java.lang.String);
public abstract boolean getCertifiedText();
public abstract void setCertifiedText(boolean);
public abstract class android.text.style.DynamicDrawableSpan extends android.text.style.ReplacementSpan{
public abstract android.graphics.drawable.Drawable getDrawable();
public abstract class java.security.KeyFactorySpi extends java.lang.Object{
protected abstract java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)       throws java.security.spec.InvalidKeySpecException;
protected abstract java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)       throws java.security.spec.InvalidKeySpecException;
protected abstract java.security.spec.KeySpec engineGetKeySpec(java.security.Key, java.lang.Class)       throws java.security.spec.InvalidKeySpecException;
protected abstract java.security.Key engineTranslateKey(java.security.Key)       throws java.security.InvalidKeyException;
public abstract void onParameterChange(android.media.audiofx.BassBoost, int, int, short);
public abstract float getInterpolation(float);
public abstract class java.io.Writer extends java.lang.Object implements java.lang.Appendable,java.io.Closeable,java.io.Flushable{
public abstract void write(char[], int, int)       throws java.io.IOException;
public abstract void flush()       throws java.io.IOException;
public abstract void close()       throws java.io.IOException;
public abstract int getLength();
public abstract java.lang.String getName(int);
public abstract java.lang.String getType(int);
public abstract java.lang.String getValue(int);
public abstract java.lang.String getType(java.lang.String);
public abstract java.lang.String getValue(java.lang.String);
public abstract void onShutter();
public abstract boolean onKey(android.content.DialogInterface, int, android.view.KeyEvent);
public abstract java.lang.String getXMLVersion();
public abstract java.lang.String getEncoding();
public abstract boolean verify(java.lang.String, javax.net.ssl.SSLSession);
public abstract void binderDied();
public abstract int nextStep(org.apache.http.conn.routing.RouteInfo, org.apache.http.conn.routing.RouteInfo);
public abstract int getSpanTypeId();
public abstract java.lang.String readString()       throws java.sql.SQLException;
public abstract boolean readBoolean()       throws java.sql.SQLException;
public abstract byte readByte()       throws java.sql.SQLException;
public abstract short readShort()       throws java.sql.SQLException;
public abstract int readInt()       throws java.sql.SQLException;
public abstract long readLong()       throws java.sql.SQLException;
public abstract float readFloat()       throws java.sql.SQLException;
public abstract double readDouble()       throws java.sql.SQLException;
public abstract java.math.BigDecimal readBigDecimal()       throws java.sql.SQLException;
public abstract byte[] readBytes()       throws java.sql.SQLException;
public abstract java.sql.Date readDate()       throws java.sql.SQLException;
public abstract java.sql.Time readTime()       throws java.sql.SQLException;
public abstract java.sql.Timestamp readTimestamp()       throws java.sql.SQLException;
public abstract java.io.Reader readCharacterStream()       throws java.sql.SQLException;
public abstract java.io.InputStream readAsciiStream()       throws java.sql.SQLException;
public abstract java.io.InputStream readBinaryStream()       throws java.sql.SQLException;
public abstract java.lang.Object readObject()       throws java.sql.SQLException;
public abstract java.sql.Ref readRef()       throws java.sql.SQLException;
public abstract java.sql.Blob readBlob()       throws java.sql.SQLException;
public abstract java.sql.Clob readClob()       throws java.sql.SQLException;
public abstract java.sql.Array readArray()       throws java.sql.SQLException;
public abstract boolean wasNull()       throws java.sql.SQLException;
public abstract java.net.URL readURL()       throws java.sql.SQLException;
public abstract java.sql.NClob readNClob()       throws java.sql.SQLException;
public abstract java.lang.String readNString()       throws java.sql.SQLException;
public abstract java.sql.SQLXML readSQLXML()       throws java.sql.SQLException;
public abstract java.sql.RowId readRowId()       throws java.sql.SQLException;
public abstract javax.net.ssl.SSLSession getSession(byte[]);
public abstract java.util.Enumeration getIds();
public abstract void setSessionTimeout(int)       throws java.lang.IllegalArgumentException;
public abstract int getSessionTimeout();
public abstract void setSessionCacheSize(int)       throws java.lang.IllegalArgumentException;
public abstract int getSessionCacheSize();
public abstract java.security.cert.PolicyNode getParent();
public abstract java.util.Iterator getChildren();
public abstract int getDepth();
public abstract java.lang.String getValidPolicy();
public abstract java.util.Set getPolicyQualifiers();
public abstract java.util.Set getExpectedPolicies();
public abstract boolean isCritical();
public abstract class android.widget.Filter extends java.lang.Object{
protected abstract android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence);
protected abstract void publishResults(java.lang.CharSequence, android.widget.Filter$FilterResults);
public abstract org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException, org.apache.http.conn.ConnectionPoolTimeoutException;
public abstract void abortRequest();
public abstract int getMaxForRoute(org.apache.http.conn.routing.HttpRoute);
public abstract java.lang.String methodName();
public abstract java.lang.String conceptName();
public abstract java.lang.Class[] methodArgs();
public abstract class android.widget.CursorAdapter extends android.widget.BaseAdapter implements android.widget.Filterable{
public abstract android.view.View newView(android.content.Context, android.database.Cursor, android.view.ViewGroup);
public abstract void bindView(android.view.View, android.content.Context, android.database.Cursor);
public abstract void finishedEvent(int, boolean);
public abstract boolean isResponseAvailable(int)       throws java.io.IOException;
public abstract void sendRequestHeader(org.apache.http.HttpRequest)       throws org.apache.http.HttpException, java.io.IOException;
public abstract void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)       throws org.apache.http.HttpException, java.io.IOException;
public abstract org.apache.http.HttpResponse receiveResponseHeader()       throws org.apache.http.HttpException, java.io.IOException;
public abstract void receiveResponseEntity(org.apache.http.HttpResponse)       throws org.apache.http.HttpException, java.io.IOException;
public abstract void flush()       throws java.io.IOException;
public abstract java.util.concurrent.Future submit(java.util.concurrent.Callable);
public abstract java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object);
public abstract java.util.concurrent.Future take()       throws java.lang.InterruptedException;
public abstract java.util.concurrent.Future poll();
public abstract java.util.concurrent.Future poll(long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract int getCount();
public abstract int getPosition();
public abstract boolean move(int);
public abstract boolean moveToPosition(int);
public abstract boolean moveToFirst();
public abstract boolean moveToLast();
public abstract boolean moveToNext();
public abstract boolean moveToPrevious();
public abstract boolean isFirst();
public abstract boolean isLast();
public abstract boolean isBeforeFirst();
public abstract boolean isAfterLast();
public abstract int getColumnIndex(java.lang.String);
public abstract int getColumnIndexOrThrow(java.lang.String)       throws java.lang.IllegalArgumentException;
public abstract java.lang.String getColumnName(int);
public abstract java.lang.String[] getColumnNames();
public abstract int getColumnCount();
public abstract byte[] getBlob(int);
public abstract java.lang.String getString(int);
public abstract void copyStringToBuffer(int, android.database.CharArrayBuffer);
public abstract short getShort(int);
public abstract int getInt(int);
public abstract long getLong(int);
public abstract float getFloat(int);
public abstract double getDouble(int);
public abstract boolean isNull(int);
public abstract void deactivate();
public abstract boolean requery();
public abstract void close();
public abstract boolean isClosed();
public abstract void registerContentObserver(android.database.ContentObserver);
public abstract void unregisterContentObserver(android.database.ContentObserver);
public abstract void registerDataSetObserver(android.database.DataSetObserver);
public abstract void unregisterDataSetObserver(android.database.DataSetObserver);
public abstract void setNotificationUri(android.content.ContentResolver, android.net.Uri);
public abstract boolean getWantsAllOnMoveCalls();
public abstract android.os.Bundle getExtras();
public abstract android.os.Bundle respond(android.os.Bundle);
public abstract java.lang.String getSQLTypeName()       throws java.sql.SQLException;
public abstract java.lang.Object[] getAttributes()       throws java.sql.SQLException;
public abstract java.lang.Object[] getAttributes(java.util.Map)       throws java.sql.SQLException;
public abstract org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)       throws org.apache.http.HttpException, java.io.IOException;
public abstract void setSystemId(java.lang.String);
public abstract java.lang.String getSystemId();
public abstract class javax.net.SocketFactory extends java.lang.Object{
public abstract java.net.Socket createSocket(java.lang.String, int)       throws java.io.IOException, java.net.UnknownHostException;
public abstract java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int)       throws java.io.IOException, java.net.UnknownHostException;
public abstract java.net.Socket createSocket(java.net.InetAddress, int)       throws java.io.IOException;
public abstract java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int)       throws java.io.IOException;
public abstract class android.text.style.ReplacementSpan extends android.text.style.MetricAffectingSpan{
public abstract int getSize(android.graphics.Paint, java.lang.CharSequence, int, int, android.graphics.Paint$FontMetricsInt);
public abstract void draw(android.graphics.Canvas, java.lang.CharSequence, int, int, float, int, int, int, android.graphics.Paint);
public abstract long read(java.nio.ByteBuffer[], int, int)       throws java.io.IOException;
public abstract long read(java.nio.ByteBuffer[])       throws java.io.IOException;
public abstract int read(java.nio.ByteBuffer)       throws java.io.IOException;
public abstract java.security.spec.ECParameterSpec getParams();
public abstract class java.security.KeyPairGenerator extends java.security.KeyPairGeneratorSpi{
public abstract class android.widget.BaseExpandableListAdapter extends java.lang.Object implements android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList{
public abstract void close()       throws java.io.IOException;
public abstract java.math.BigInteger getX();
public abstract class java.security.SecureRandomSpi extends java.lang.Object implements java.io.Serializable{
protected abstract void engineSetSeed(byte[]);
protected abstract void engineNextBytes(byte[]);
protected abstract byte[] engineGenerateSeed(int);
public abstract class java.util.concurrent.locks.AbstractQueuedSynchronizer extends java.util.concurrent.locks.AbstractOwnableSynchronizer implements java.io.Serializable{
public abstract int getSavepointId()       throws java.sql.SQLException;
public abstract java.lang.String getSavepointName()       throws java.sql.SQLException;
public abstract java.net.InetAddress getLocalAddress();
public abstract int getLocalPort();
public abstract java.net.InetAddress getRemoteAddress();
public abstract int getRemotePort();
public abstract java.math.BigInteger getPublicExponent();
public abstract java.math.BigInteger getPrimeP();
public abstract java.math.BigInteger getPrimeQ();
public abstract java.math.BigInteger getPrimeExponentP();
public abstract java.math.BigInteger getPrimeExponentQ();
public abstract java.math.BigInteger getCrtCoefficient();
public abstract java.security.spec.RSAOtherPrimeInfo[] getOtherPrimeInfo();
public abstract boolean onActivityResult(int, int, android.content.Intent);
public abstract class java.security.cert.CertificateFactorySpi extends java.lang.Object{
public abstract java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream)       throws java.security.cert.CertificateException;
public abstract java.util.Collection engineGenerateCertificates(java.io.InputStream)       throws java.security.cert.CertificateException;
public abstract java.security.cert.CRL engineGenerateCRL(java.io.InputStream)       throws java.security.cert.CRLException;
public abstract java.util.Collection engineGenerateCRLs(java.io.InputStream)       throws java.security.cert.CRLException;
public abstract void onItemClick(android.widget.AdapterView, android.view.View, int, long);
public abstract class android.content.AbstractThreadedSyncAdapter extends java.lang.Object{
public abstract void onPerformSync(android.accounts.Account, android.os.Bundle, java.lang.String, android.content.ContentProviderClient, android.content.SyncResult);
public abstract class javax.net.ServerSocketFactory extends java.lang.Object{
public abstract java.net.ServerSocket createServerSocket(int)       throws java.io.IOException;
public abstract java.net.ServerSocket createServerSocket(int, int)       throws java.io.IOException;
public abstract java.net.ServerSocket createServerSocket(int, int, java.net.InetAddress)       throws java.io.IOException;
public abstract void registerOutParameter(int, int)       throws java.sql.SQLException;
public abstract void registerOutParameter(int, int, int)       throws java.sql.SQLException;
public abstract boolean wasNull()       throws java.sql.SQLException;
public abstract java.lang.String getString(int)       throws java.sql.SQLException;
public abstract boolean getBoolean(int)       throws java.sql.SQLException;
public abstract byte getByte(int)       throws java.sql.SQLException;
public abstract short getShort(int)       throws java.sql.SQLException;
public abstract int getInt(int)       throws java.sql.SQLException;
public abstract long getLong(int)       throws java.sql.SQLException;
public abstract float getFloat(int)       throws java.sql.SQLException;
public abstract double getDouble(int)       throws java.sql.SQLException;
public abstract java.math.BigDecimal getBigDecimal(int, int)       throws java.sql.SQLException;
public abstract byte[] getBytes(int)       throws java.sql.SQLException;
public abstract java.sql.Date getDate(int)       throws java.sql.SQLException;
public abstract java.sql.Time getTime(int)       throws java.sql.SQLException;
public abstract java.sql.Timestamp getTimestamp(int)       throws java.sql.SQLException;
public abstract java.lang.Object getObject(int)       throws java.sql.SQLException;
public abstract java.math.BigDecimal getBigDecimal(int)       throws java.sql.SQLException;
public abstract java.lang.Object getObject(int, java.util.Map)       throws java.sql.SQLException;
public abstract java.sql.Ref getRef(int)       throws java.sql.SQLException;
public abstract java.sql.Blob getBlob(int)       throws java.sql.SQLException;
public abstract java.sql.Clob getClob(int)       throws java.sql.SQLException;
public abstract java.sql.Array getArray(int)       throws java.sql.SQLException;
public abstract java.sql.Date getDate(int, java.util.Calendar)       throws java.sql.SQLException;
public abstract java.sql.Time getTime(int, java.util.Calendar)       throws java.sql.SQLException;
public abstract java.sql.Timestamp getTimestamp(int, java.util.Calendar)       throws java.sql.SQLException;
public abstract void registerOutParameter(int, int, java.lang.String)       throws java.sql.SQLException;
public abstract void registerOutParameter(java.lang.String, int)       throws java.sql.SQLException;
public abstract void registerOutParameter(java.lang.String, int, int)       throws java.sql.SQLException;
public abstract void registerOutParameter(java.lang.String, int, java.lang.String)       throws java.sql.SQLException;
public abstract java.net.URL getURL(int)       throws java.sql.SQLException;
public abstract void setURL(java.lang.String, java.net.URL)       throws java.sql.SQLException;
public abstract void setNull(java.lang.String, int)       throws java.sql.SQLException;
public abstract void setBoolean(java.lang.String, boolean)       throws java.sql.SQLException;
public abstract void setByte(java.lang.String, byte)       throws java.sql.SQLException;
public abstract void setShort(java.lang.String, short)       throws java.sql.SQLException;
public abstract void setInt(java.lang.String, int)       throws java.sql.SQLException;
public abstract void setLong(java.lang.String, long)       throws java.sql.SQLException;
public abstract void setFloat(java.lang.String, float)       throws java.sql.SQLException;
public abstract void setDouble(java.lang.String, double)       throws java.sql.SQLException;
public abstract void setBigDecimal(java.lang.String, java.math.BigDecimal)       throws java.sql.SQLException;
public abstract void setString(java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract void setBytes(java.lang.String, byte[])       throws java.sql.SQLException;
public abstract void setDate(java.lang.String, java.sql.Date)       throws java.sql.SQLException;
public abstract void setTime(java.lang.String, java.sql.Time)       throws java.sql.SQLException;
public abstract void setTimestamp(java.lang.String, java.sql.Timestamp)       throws java.sql.SQLException;
public abstract void setAsciiStream(java.lang.String, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void setBinaryStream(java.lang.String, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void setObject(java.lang.String, java.lang.Object, int, int)       throws java.sql.SQLException;
public abstract void setObject(java.lang.String, java.lang.Object, int)       throws java.sql.SQLException;
public abstract void setObject(java.lang.String, java.lang.Object)       throws java.sql.SQLException;
public abstract void setCharacterStream(java.lang.String, java.io.Reader, int)       throws java.sql.SQLException;
public abstract void setDate(java.lang.String, java.sql.Date, java.util.Calendar)       throws java.sql.SQLException;
public abstract void setTime(java.lang.String, java.sql.Time, java.util.Calendar)       throws java.sql.SQLException;
public abstract void setTimestamp(java.lang.String, java.sql.Timestamp, java.util.Calendar)       throws java.sql.SQLException;
public abstract void setNull(java.lang.String, int, java.lang.String)       throws java.sql.SQLException;
public abstract java.lang.String getString(java.lang.String)       throws java.sql.SQLException;
public abstract boolean getBoolean(java.lang.String)       throws java.sql.SQLException;
public abstract byte getByte(java.lang.String)       throws java.sql.SQLException;
public abstract short getShort(java.lang.String)       throws java.sql.SQLException;
public abstract int getInt(java.lang.String)       throws java.sql.SQLException;
public abstract long getLong(java.lang.String)       throws java.sql.SQLException;
public abstract float getFloat(java.lang.String)       throws java.sql.SQLException;
public abstract double getDouble(java.lang.String)       throws java.sql.SQLException;
public abstract byte[] getBytes(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Date getDate(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Time getTime(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Timestamp getTimestamp(java.lang.String)       throws java.sql.SQLException;
public abstract java.lang.Object getObject(java.lang.String)       throws java.sql.SQLException;
public abstract java.math.BigDecimal getBigDecimal(java.lang.String)       throws java.sql.SQLException;
public abstract java.lang.Object getObject(java.lang.String, java.util.Map)       throws java.sql.SQLException;
public abstract java.sql.Ref getRef(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Blob getBlob(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Clob getClob(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Array getArray(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Date getDate(java.lang.String, java.util.Calendar)       throws java.sql.SQLException;
public abstract java.sql.Time getTime(java.lang.String, java.util.Calendar)       throws java.sql.SQLException;
public abstract java.sql.Timestamp getTimestamp(java.lang.String, java.util.Calendar)       throws java.sql.SQLException;
public abstract java.net.URL getURL(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.RowId getRowId(int)       throws java.sql.SQLException;
public abstract java.sql.RowId getRowId(java.lang.String)       throws java.sql.SQLException;
public abstract void setRowId(java.lang.String, java.sql.RowId)       throws java.sql.SQLException;
public abstract void setNString(java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract void setNCharacterStream(java.lang.String, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setNClob(java.lang.String, java.sql.NClob)       throws java.sql.SQLException;
public abstract void setClob(java.lang.String, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setBlob(java.lang.String, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void setNClob(java.lang.String, java.io.Reader, long)       throws java.sql.SQLException;
public abstract java.sql.NClob getNClob(int)       throws java.sql.SQLException;
public abstract java.sql.NClob getNClob(java.lang.String)       throws java.sql.SQLException;
public abstract void setSQLXML(java.lang.String, java.sql.SQLXML)       throws java.sql.SQLException;
public abstract java.sql.SQLXML getSQLXML(int)       throws java.sql.SQLException;
public abstract java.sql.SQLXML getSQLXML(java.lang.String)       throws java.sql.SQLException;
public abstract java.lang.String getNString(int)       throws java.sql.SQLException;
public abstract java.lang.String getNString(java.lang.String)       throws java.sql.SQLException;
public abstract java.io.Reader getNCharacterStream(int)       throws java.sql.SQLException;
public abstract java.io.Reader getNCharacterStream(java.lang.String)       throws java.sql.SQLException;
public abstract java.io.Reader getCharacterStream(int)       throws java.sql.SQLException;
public abstract java.io.Reader getCharacterStream(java.lang.String)       throws java.sql.SQLException;
public abstract void setBlob(java.lang.String, java.sql.Blob)       throws java.sql.SQLException;
public abstract void setClob(java.lang.String, java.sql.Clob)       throws java.sql.SQLException;
public abstract void setAsciiStream(java.lang.String, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void setBinaryStream(java.lang.String, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void setCharacterStream(java.lang.String, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setAsciiStream(java.lang.String, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setBinaryStream(java.lang.String, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setCharacterStream(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract void setNCharacterStream(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract void setClob(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract void setBlob(java.lang.String, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setNClob(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract java.lang.String getBaseTypeName()       throws java.sql.SQLException;
public abstract java.lang.Object getObject(java.util.Map)       throws java.sql.SQLException;
public abstract java.lang.Object getObject()       throws java.sql.SQLException;
public abstract void setObject(java.lang.Object)       throws java.sql.SQLException;
public abstract void onPress(int);
public abstract void onRelease(int);
public abstract void onKey(int, int[]);
public abstract void onText(java.lang.CharSequence);
public abstract void swipeLeft();
public abstract void swipeRight();
public abstract void swipeDown();
public abstract void swipeUp();
public abstract class javax.microedition.khronos.egl.EGLDisplay extends java.lang.Object{
public abstract android.nfc.Tag getTag();
public abstract void connect()       throws java.io.IOException;
public abstract void close()       throws java.io.IOException;
public abstract boolean isConnected();
public abstract void onFocusChange(android.view.View, boolean);
public abstract class java.net.SocketAddress extends java.lang.Object implements java.io.Serializable{
public abstract class javax.microedition.khronos.egl.EGLSurface extends java.lang.Object{
public abstract class java.nio.CharBuffer extends java.nio.Buffer implements java.lang.Comparable,java.lang.Appendable,java.lang.CharSequence,java.lang.Readable{
public abstract java.nio.CharBuffer slice();
public abstract java.nio.CharBuffer duplicate();
public abstract java.nio.CharBuffer asReadOnlyBuffer();
public abstract char get();
public abstract java.nio.CharBuffer put(char);
public abstract char get(int);
public abstract java.nio.CharBuffer put(int, char);
public abstract java.nio.CharBuffer compact();
public abstract boolean isDirect();
abstract java.lang.String toString(int, int);
public abstract java.lang.CharSequence subSequence(int, int);
public abstract java.nio.ByteOrder order();
public abstract org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry();
public abstract org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object);
public abstract void releaseConnection(org.apache.http.conn.ManagedClientConnection, long, java.util.concurrent.TimeUnit);
public abstract void closeIdleConnections(long, java.util.concurrent.TimeUnit);
public abstract void closeExpiredConnections();
public abstract void shutdown();
public abstract class java.nio.channels.FileLock extends java.lang.Object{
public abstract boolean isValid();
public abstract void release()       throws java.io.IOException;
public abstract java.lang.String getName();
public abstract java.lang.String getValue();
public abstract java.lang.String getComment();
public abstract java.lang.String getCommentURL();
public abstract java.util.Date getExpiryDate();
public abstract boolean isPersistent();
public abstract java.lang.String getDomain();
public abstract java.lang.String getPath();
public abstract int[] getPorts();
public abstract boolean isSecure();
public abstract int getVersion();
public abstract boolean isExpired(java.util.Date);
public abstract org.w3c.dom.DOMConfiguration getDomConfig();
public abstract org.w3c.dom.ls.LSParserFilter getFilter();
public abstract void setFilter(org.w3c.dom.ls.LSParserFilter);
public abstract boolean getAsync();
public abstract boolean getBusy();
public abstract org.w3c.dom.Document parse(org.w3c.dom.ls.LSInput)       throws org.w3c.dom.DOMException, org.w3c.dom.ls.LSException;
public abstract org.w3c.dom.Document parseURI(java.lang.String)       throws org.w3c.dom.DOMException, org.w3c.dom.ls.LSException;
public abstract org.w3c.dom.Node parseWithContext(org.w3c.dom.ls.LSInput, org.w3c.dom.Node, short)       throws org.w3c.dom.DOMException, org.w3c.dom.ls.LSException;
public abstract void abort();
public abstract java.lang.Object clone();
public abstract class java.security.Permission extends java.lang.Object implements java.security.Guard,java.io.Serializable{
public abstract boolean implies(java.security.Permission);
public abstract boolean equals(java.lang.Object);
public abstract int hashCode();
public abstract java.lang.String getActions();
public abstract void surfaceCreated(android.view.SurfaceHolder);
public abstract void surfaceChanged(android.view.SurfaceHolder, int, int, int);
public abstract void surfaceDestroyed(android.view.SurfaceHolder);
public abstract class android.database.AbstractCursor extends java.lang.Object implements android.database.CrossProcessCursor{
public abstract int getCount();
public abstract java.lang.String[] getColumnNames();
public abstract java.lang.String getString(int);
public abstract short getShort(int);
public abstract int getInt(int);
public abstract long getLong(int);
public abstract float getFloat(int);
public abstract double getDouble(int);
public abstract boolean isNull(int);
public abstract class javax.net.ssl.X509ExtendedKeyManager extends java.lang.Object implements javax.net.ssl.X509KeyManager{
public abstract void onDateSet(android.widget.DatePicker, int, int, int);
public abstract class java.util.concurrent.atomic.AtomicLongFieldUpdater extends java.lang.Object{
public abstract boolean compareAndSet(java.lang.Object, long, long);
public abstract boolean weakCompareAndSet(java.lang.Object, long, long);
public abstract void set(java.lang.Object, long);
public abstract void lazySet(java.lang.Object, long);
public abstract long get(java.lang.Object);
public abstract void handleClickEvent(android.content.Context);
public abstract void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest)       throws java.io.IOException;
public abstract void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger)       throws java.io.IOException;
public abstract void abort();
public abstract void onControlStatusChange(android.media.audiofx.AudioEffect, boolean);
public abstract android.database.Cursor runQuery(java.lang.CharSequence);
public abstract boolean equals(java.lang.Object);
public abstract int hashCode();
public abstract java.lang.String toString();
public abstract java.lang.Class annotationType();
public abstract int write(java.nio.ByteBuffer)       throws java.io.IOException;
public abstract void onDownloadStart(java.lang.String, java.lang.String, java.lang.String, java.lang.String, long);
public abstract void drawBackground(android.graphics.Canvas, android.graphics.Paint, int, int, int, int, int, java.lang.CharSequence, int, int, int);
public abstract class android.graphics.drawable.shapes.Shape extends java.lang.Object implements java.lang.Cloneable{
public abstract void draw(android.graphics.Canvas, android.graphics.Paint);
public abstract java.lang.String getUrl()       throws java.sql.SQLException;
public abstract void setUrl(java.lang.String)       throws java.sql.SQLException;
public abstract java.lang.String getDataSourceName();
public abstract void setDataSourceName(java.lang.String)       throws java.sql.SQLException;
public abstract java.lang.String getUsername();
public abstract void setUsername(java.lang.String)       throws java.sql.SQLException;
public abstract java.lang.String getPassword();
public abstract void setPassword(java.lang.String)       throws java.sql.SQLException;
public abstract int getTransactionIsolation();
public abstract void setTransactionIsolation(int)       throws java.sql.SQLException;
public abstract java.util.Map getTypeMap()       throws java.sql.SQLException;
public abstract void setTypeMap(java.util.Map)       throws java.sql.SQLException;
public abstract java.lang.String getCommand();
public abstract void setCommand(java.lang.String)       throws java.sql.SQLException;
public abstract boolean isReadOnly();
public abstract void setReadOnly(boolean)       throws java.sql.SQLException;
public abstract int getMaxFieldSize()       throws java.sql.SQLException;
public abstract void setMaxFieldSize(int)       throws java.sql.SQLException;
public abstract int getMaxRows()       throws java.sql.SQLException;
public abstract void setMaxRows(int)       throws java.sql.SQLException;
public abstract boolean getEscapeProcessing()       throws java.sql.SQLException;
public abstract void setEscapeProcessing(boolean)       throws java.sql.SQLException;
public abstract int getQueryTimeout()       throws java.sql.SQLException;
public abstract void setQueryTimeout(int)       throws java.sql.SQLException;
public abstract void setType(int)       throws java.sql.SQLException;
public abstract void setConcurrency(int)       throws java.sql.SQLException;
public abstract void setNull(int, int)       throws java.sql.SQLException;
public abstract void setNull(java.lang.String, int)       throws java.sql.SQLException;
public abstract void setNull(int, int, java.lang.String)       throws java.sql.SQLException;
public abstract void setNull(java.lang.String, int, java.lang.String)       throws java.sql.SQLException;
public abstract void setBoolean(int, boolean)       throws java.sql.SQLException;
public abstract void setBoolean(java.lang.String, boolean)       throws java.sql.SQLException;
public abstract void setByte(int, byte)       throws java.sql.SQLException;
public abstract void setByte(java.lang.String, byte)       throws java.sql.SQLException;
public abstract void setShort(int, short)       throws java.sql.SQLException;
public abstract void setShort(java.lang.String, short)       throws java.sql.SQLException;
public abstract void setInt(int, int)       throws java.sql.SQLException;
public abstract void setInt(java.lang.String, int)       throws java.sql.SQLException;
public abstract void setLong(int, long)       throws java.sql.SQLException;
public abstract void setLong(java.lang.String, long)       throws java.sql.SQLException;
public abstract void setFloat(int, float)       throws java.sql.SQLException;
public abstract void setFloat(java.lang.String, float)       throws java.sql.SQLException;
public abstract void setDouble(int, double)       throws java.sql.SQLException;
public abstract void setDouble(java.lang.String, double)       throws java.sql.SQLException;
public abstract void setBigDecimal(int, java.math.BigDecimal)       throws java.sql.SQLException;
public abstract void setBigDecimal(java.lang.String, java.math.BigDecimal)       throws java.sql.SQLException;
public abstract void setString(int, java.lang.String)       throws java.sql.SQLException;
public abstract void setString(java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract void setBytes(int, byte[])       throws java.sql.SQLException;
public abstract void setBytes(java.lang.String, byte[])       throws java.sql.SQLException;
public abstract void setDate(int, java.sql.Date)       throws java.sql.SQLException;
public abstract void setTime(int, java.sql.Time)       throws java.sql.SQLException;
public abstract void setTimestamp(int, java.sql.Timestamp)       throws java.sql.SQLException;
public abstract void setTimestamp(java.lang.String, java.sql.Timestamp)       throws java.sql.SQLException;
public abstract void setAsciiStream(int, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void setAsciiStream(java.lang.String, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void setBinaryStream(int, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void setBinaryStream(java.lang.String, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void setCharacterStream(int, java.io.Reader, int)       throws java.sql.SQLException;
public abstract void setCharacterStream(java.lang.String, java.io.Reader, int)       throws java.sql.SQLException;
public abstract void setAsciiStream(int, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setAsciiStream(java.lang.String, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setBinaryStream(int, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setBinaryStream(java.lang.String, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setCharacterStream(int, java.io.Reader)       throws java.sql.SQLException;
public abstract void setCharacterStream(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract void setNCharacterStream(int, java.io.Reader)       throws java.sql.SQLException;
public abstract void setObject(int, java.lang.Object, int, int)       throws java.sql.SQLException;
public abstract void setObject(java.lang.String, java.lang.Object, int, int)       throws java.sql.SQLException;
public abstract void setObject(int, java.lang.Object, int)       throws java.sql.SQLException;
public abstract void setObject(java.lang.String, java.lang.Object, int)       throws java.sql.SQLException;
public abstract void setObject(java.lang.String, java.lang.Object)       throws java.sql.SQLException;
public abstract void setObject(int, java.lang.Object)       throws java.sql.SQLException;
public abstract void setRef(int, java.sql.Ref)       throws java.sql.SQLException;
public abstract void setBlob(int, java.sql.Blob)       throws java.sql.SQLException;
public abstract void setBlob(int, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void setBlob(int, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setBlob(java.lang.String, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void setBlob(java.lang.String, java.sql.Blob)       throws java.sql.SQLException;
public abstract void setBlob(java.lang.String, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setClob(int, java.sql.Clob)       throws java.sql.SQLException;
public abstract void setClob(int, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setClob(int, java.io.Reader)       throws java.sql.SQLException;
public abstract void setClob(java.lang.String, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setClob(java.lang.String, java.sql.Clob)       throws java.sql.SQLException;
public abstract void setClob(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract void setArray(int, java.sql.Array)       throws java.sql.SQLException;
public abstract void setDate(int, java.sql.Date, java.util.Calendar)       throws java.sql.SQLException;
public abstract void setDate(java.lang.String, java.sql.Date)       throws java.sql.SQLException;
public abstract void setDate(java.lang.String, java.sql.Date, java.util.Calendar)       throws java.sql.SQLException;
public abstract void setTime(int, java.sql.Time, java.util.Calendar)       throws java.sql.SQLException;
public abstract void setTime(java.lang.String, java.sql.Time)       throws java.sql.SQLException;
public abstract void setTime(java.lang.String, java.sql.Time, java.util.Calendar)       throws java.sql.SQLException;
public abstract void setTimestamp(int, java.sql.Timestamp, java.util.Calendar)       throws java.sql.SQLException;
public abstract void setTimestamp(java.lang.String, java.sql.Timestamp, java.util.Calendar)       throws java.sql.SQLException;
public abstract void clearParameters()       throws java.sql.SQLException;
public abstract void execute()       throws java.sql.SQLException;
public abstract void addRowSetListener(javax.sql.RowSetListener);
public abstract void removeRowSetListener(javax.sql.RowSetListener);
public abstract void setSQLXML(int, java.sql.SQLXML)       throws java.sql.SQLException;
public abstract void setSQLXML(java.lang.String, java.sql.SQLXML)       throws java.sql.SQLException;
public abstract void setRowId(int, java.sql.RowId)       throws java.sql.SQLException;
public abstract void setRowId(java.lang.String, java.sql.RowId)       throws java.sql.SQLException;
public abstract void setNString(int, java.lang.String)       throws java.sql.SQLException;
public abstract void setNString(java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract void setNCharacterStream(int, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setNCharacterStream(java.lang.String, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setNCharacterStream(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract void setNClob(java.lang.String, java.sql.NClob)       throws java.sql.SQLException;
public abstract void setNClob(java.lang.String, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setNClob(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract void setNClob(int, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setNClob(int, java.sql.NClob)       throws java.sql.SQLException;
public abstract void setNClob(int, java.io.Reader)       throws java.sql.SQLException;
public abstract void setURL(int, java.net.URL)       throws java.sql.SQLException;
public abstract void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)       throws java.security.cert.CertificateException;
public abstract void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)       throws java.security.cert.CertificateException;
public abstract java.security.cert.X509Certificate[] getAcceptedIssuers();
public abstract void onActivityStop();
abstract class android.webkit.WebSyncManager extends java.lang.Object implements java.lang.Runnable{
public abstract class javax.security.cert.Certificate extends java.lang.Object{
public abstract byte[] getEncoded()       throws javax.security.cert.CertificateEncodingException;
public abstract void verify(java.security.PublicKey)       throws javax.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;
public abstract void verify(java.security.PublicKey, java.lang.String)       throws javax.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;
public abstract java.lang.String toString();
public abstract java.security.PublicKey getPublicKey();
public abstract org.w3c.dom.Node item(int);
public abstract int getLength();
public abstract java.lang.String transformUrl(java.util.regex.Matcher, java.lang.String);
public abstract org.w3c.dom.DOMImplementation item(int);
public abstract int getLength();
public abstract class android.content.AsyncQueryHandler extends android.os.Handler{
public abstract boolean verify(java.lang.String, javax.net.ssl.SSLSession);
public abstract void verify(java.lang.String, javax.net.ssl.SSLSocket)       throws java.io.IOException;
public abstract void verify(java.lang.String, java.security.cert.X509Certificate)       throws javax.net.ssl.SSLException;
public abstract void verify(java.lang.String, java.lang.String[], java.lang.String[])       throws javax.net.ssl.SSLException;
public abstract boolean allProceduresAreCallable()       throws java.sql.SQLException;
public abstract boolean allTablesAreSelectable()       throws java.sql.SQLException;
public abstract java.lang.String getURL()       throws java.sql.SQLException;
public abstract java.lang.String getUserName()       throws java.sql.SQLException;
public abstract boolean isReadOnly()       throws java.sql.SQLException;
public abstract boolean nullsAreSortedHigh()       throws java.sql.SQLException;
public abstract boolean nullsAreSortedLow()       throws java.sql.SQLException;
public abstract boolean nullsAreSortedAtStart()       throws java.sql.SQLException;
public abstract boolean nullsAreSortedAtEnd()       throws java.sql.SQLException;
public abstract java.lang.String getDatabaseProductName()       throws java.sql.SQLException;
public abstract java.lang.String getDatabaseProductVersion()       throws java.sql.SQLException;
public abstract java.lang.String getDriverName()       throws java.sql.SQLException;
public abstract java.lang.String getDriverVersion()       throws java.sql.SQLException;
public abstract int getDriverMajorVersion();
public abstract int getDriverMinorVersion();
public abstract boolean usesLocalFiles()       throws java.sql.SQLException;
public abstract boolean usesLocalFilePerTable()       throws java.sql.SQLException;
public abstract boolean supportsMixedCaseIdentifiers()       throws java.sql.SQLException;
public abstract boolean storesUpperCaseIdentifiers()       throws java.sql.SQLException;
public abstract boolean storesLowerCaseIdentifiers()       throws java.sql.SQLException;
public abstract boolean storesMixedCaseIdentifiers()       throws java.sql.SQLException;
public abstract boolean supportsMixedCaseQuotedIdentifiers()       throws java.sql.SQLException;
public abstract boolean storesUpperCaseQuotedIdentifiers()       throws java.sql.SQLException;
public abstract boolean storesLowerCaseQuotedIdentifiers()       throws java.sql.SQLException;
public abstract boolean storesMixedCaseQuotedIdentifiers()       throws java.sql.SQLException;
public abstract java.lang.String getIdentifierQuoteString()       throws java.sql.SQLException;
public abstract java.lang.String getSQLKeywords()       throws java.sql.SQLException;
public abstract java.lang.String getNumericFunctions()       throws java.sql.SQLException;
public abstract java.lang.String getStringFunctions()       throws java.sql.SQLException;
public abstract java.lang.String getSystemFunctions()       throws java.sql.SQLException;
public abstract java.lang.String getTimeDateFunctions()       throws java.sql.SQLException;
public abstract java.lang.String getSearchStringEscape()       throws java.sql.SQLException;
public abstract java.lang.String getExtraNameCharacters()       throws java.sql.SQLException;
public abstract boolean supportsAlterTableWithAddColumn()       throws java.sql.SQLException;
public abstract boolean supportsAlterTableWithDropColumn()       throws java.sql.SQLException;
public abstract boolean supportsColumnAliasing()       throws java.sql.SQLException;
public abstract boolean nullPlusNonNullIsNull()       throws java.sql.SQLException;
public abstract boolean supportsConvert()       throws java.sql.SQLException;
public abstract boolean supportsConvert(int, int)       throws java.sql.SQLException;
public abstract boolean supportsTableCorrelationNames()       throws java.sql.SQLException;
public abstract boolean supportsDifferentTableCorrelationNames()       throws java.sql.SQLException;
public abstract boolean supportsExpressionsInOrderBy()       throws java.sql.SQLException;
public abstract boolean supportsOrderByUnrelated()       throws java.sql.SQLException;
public abstract boolean supportsGroupBy()       throws java.sql.SQLException;
public abstract boolean supportsGroupByUnrelated()       throws java.sql.SQLException;
public abstract boolean supportsGroupByBeyondSelect()       throws java.sql.SQLException;
public abstract boolean supportsLikeEscapeClause()       throws java.sql.SQLException;
public abstract boolean supportsMultipleResultSets()       throws java.sql.SQLException;
public abstract boolean supportsMultipleTransactions()       throws java.sql.SQLException;
public abstract boolean supportsNonNullableColumns()       throws java.sql.SQLException;
public abstract boolean supportsMinimumSQLGrammar()       throws java.sql.SQLException;
public abstract boolean supportsCoreSQLGrammar()       throws java.sql.SQLException;
public abstract boolean supportsExtendedSQLGrammar()       throws java.sql.SQLException;
public abstract boolean supportsANSI92EntryLevelSQL()       throws java.sql.SQLException;
public abstract boolean supportsANSI92IntermediateSQL()       throws java.sql.SQLException;
public abstract boolean supportsANSI92FullSQL()       throws java.sql.SQLException;
public abstract boolean supportsIntegrityEnhancementFacility()       throws java.sql.SQLException;
public abstract boolean supportsOuterJoins()       throws java.sql.SQLException;
public abstract boolean supportsFullOuterJoins()       throws java.sql.SQLException;
public abstract boolean supportsLimitedOuterJoins()       throws java.sql.SQLException;
public abstract java.lang.String getSchemaTerm()       throws java.sql.SQLException;
public abstract java.lang.String getProcedureTerm()       throws java.sql.SQLException;
public abstract java.lang.String getCatalogTerm()       throws java.sql.SQLException;
public abstract boolean isCatalogAtStart()       throws java.sql.SQLException;
public abstract java.lang.String getCatalogSeparator()       throws java.sql.SQLException;
public abstract boolean supportsSchemasInDataManipulation()       throws java.sql.SQLException;
public abstract boolean supportsSchemasInProcedureCalls()       throws java.sql.SQLException;
public abstract boolean supportsSchemasInTableDefinitions()       throws java.sql.SQLException;
public abstract boolean supportsSchemasInIndexDefinitions()       throws java.sql.SQLException;
public abstract boolean supportsSchemasInPrivilegeDefinitions()       throws java.sql.SQLException;
public abstract boolean supportsCatalogsInDataManipulation()       throws java.sql.SQLException;
public abstract boolean supportsCatalogsInProcedureCalls()       throws java.sql.SQLException;
public abstract boolean supportsCatalogsInTableDefinitions()       throws java.sql.SQLException;
public abstract boolean supportsCatalogsInIndexDefinitions()       throws java.sql.SQLException;
public abstract boolean supportsCatalogsInPrivilegeDefinitions()       throws java.sql.SQLException;
public abstract boolean supportsPositionedDelete()       throws java.sql.SQLException;
public abstract boolean supportsPositionedUpdate()       throws java.sql.SQLException;
public abstract boolean supportsSelectForUpdate()       throws java.sql.SQLException;
public abstract boolean supportsStoredProcedures()       throws java.sql.SQLException;
public abstract boolean supportsSubqueriesInComparisons()       throws java.sql.SQLException;
public abstract boolean supportsSubqueriesInExists()       throws java.sql.SQLException;
public abstract boolean supportsSubqueriesInIns()       throws java.sql.SQLException;
public abstract boolean supportsSubqueriesInQuantifieds()       throws java.sql.SQLException;
public abstract boolean supportsCorrelatedSubqueries()       throws java.sql.SQLException;
public abstract boolean supportsUnion()       throws java.sql.SQLException;
public abstract boolean supportsUnionAll()       throws java.sql.SQLException;
public abstract boolean supportsOpenCursorsAcrossCommit()       throws java.sql.SQLException;
public abstract boolean supportsOpenCursorsAcrossRollback()       throws java.sql.SQLException;
public abstract boolean supportsOpenStatementsAcrossCommit()       throws java.sql.SQLException;
public abstract boolean supportsOpenStatementsAcrossRollback()       throws java.sql.SQLException;
public abstract int getMaxBinaryLiteralLength()       throws java.sql.SQLException;
public abstract int getMaxCharLiteralLength()       throws java.sql.SQLException;
public abstract int getMaxColumnNameLength()       throws java.sql.SQLException;
public abstract int getMaxColumnsInGroupBy()       throws java.sql.SQLException;
public abstract int getMaxColumnsInIndex()       throws java.sql.SQLException;
public abstract int getMaxColumnsInOrderBy()       throws java.sql.SQLException;
public abstract int getMaxColumnsInSelect()       throws java.sql.SQLException;
public abstract int getMaxColumnsInTable()       throws java.sql.SQLException;
public abstract int getMaxConnections()       throws java.sql.SQLException;
public abstract int getMaxCursorNameLength()       throws java.sql.SQLException;
public abstract int getMaxIndexLength()       throws java.sql.SQLException;
public abstract int getMaxSchemaNameLength()       throws java.sql.SQLException;
public abstract int getMaxProcedureNameLength()       throws java.sql.SQLException;
public abstract int getMaxCatalogNameLength()       throws java.sql.SQLException;
public abstract int getMaxRowSize()       throws java.sql.SQLException;
public abstract boolean doesMaxRowSizeIncludeBlobs()       throws java.sql.SQLException;
public abstract int getMaxStatementLength()       throws java.sql.SQLException;
public abstract int getMaxStatements()       throws java.sql.SQLException;
public abstract int getMaxTableNameLength()       throws java.sql.SQLException;
public abstract int getMaxTablesInSelect()       throws java.sql.SQLException;
public abstract int getMaxUserNameLength()       throws java.sql.SQLException;
public abstract int getDefaultTransactionIsolation()       throws java.sql.SQLException;
public abstract boolean supportsTransactions()       throws java.sql.SQLException;
public abstract boolean supportsTransactionIsolationLevel(int)       throws java.sql.SQLException;
public abstract boolean supportsDataDefinitionAndDataManipulationTransactions()       throws java.sql.SQLException;
public abstract boolean supportsDataManipulationTransactionsOnly()       throws java.sql.SQLException;
public abstract boolean dataDefinitionCausesTransactionCommit()       throws java.sql.SQLException;
public abstract boolean dataDefinitionIgnoredInTransactions()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getProcedures(java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getProcedureColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String[])       throws java.sql.SQLException;
public abstract java.sql.ResultSet getSchemas()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getCatalogs()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getTableTypes()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getColumnPrivileges(java.lang.String, java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getTablePrivileges(java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getBestRowIdentifier(java.lang.String, java.lang.String, java.lang.String, int, boolean)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getVersionColumns(java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getPrimaryKeys(java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getImportedKeys(java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getExportedKeys(java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getCrossReference(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getTypeInfo()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getIndexInfo(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)       throws java.sql.SQLException;
public abstract boolean supportsResultSetType(int)       throws java.sql.SQLException;
public abstract boolean supportsResultSetConcurrency(int, int)       throws java.sql.SQLException;
public abstract boolean ownUpdatesAreVisible(int)       throws java.sql.SQLException;
public abstract boolean ownDeletesAreVisible(int)       throws java.sql.SQLException;
public abstract boolean ownInsertsAreVisible(int)       throws java.sql.SQLException;
public abstract boolean othersUpdatesAreVisible(int)       throws java.sql.SQLException;
public abstract boolean othersDeletesAreVisible(int)       throws java.sql.SQLException;
public abstract boolean othersInsertsAreVisible(int)       throws java.sql.SQLException;
public abstract boolean updatesAreDetected(int)       throws java.sql.SQLException;
public abstract boolean deletesAreDetected(int)       throws java.sql.SQLException;
public abstract boolean insertsAreDetected(int)       throws java.sql.SQLException;
public abstract boolean supportsBatchUpdates()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getUDTs(java.lang.String, java.lang.String, java.lang.String, int[])       throws java.sql.SQLException;
public abstract java.sql.Connection getConnection()       throws java.sql.SQLException;
public abstract boolean supportsSavepoints()       throws java.sql.SQLException;
public abstract boolean supportsNamedParameters()       throws java.sql.SQLException;
public abstract boolean supportsMultipleOpenResults()       throws java.sql.SQLException;
public abstract boolean supportsGetGeneratedKeys()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getSuperTypes(java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getSuperTables(java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getAttributes(java.lang.String, java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract boolean supportsResultSetHoldability(int)       throws java.sql.SQLException;
public abstract int getResultSetHoldability()       throws java.sql.SQLException;
public abstract int getDatabaseMajorVersion()       throws java.sql.SQLException;
public abstract int getDatabaseMinorVersion()       throws java.sql.SQLException;
public abstract int getJDBCMajorVersion()       throws java.sql.SQLException;
public abstract int getJDBCMinorVersion()       throws java.sql.SQLException;
public abstract int getSQLStateType()       throws java.sql.SQLException;
public abstract boolean locatorsUpdateCopy()       throws java.sql.SQLException;
public abstract boolean supportsStatementPooling()       throws java.sql.SQLException;
public abstract java.sql.RowIdLifetime getRowIdLifetime()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getSchemas(java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract boolean supportsStoredFunctionsUsingCallSyntax()       throws java.sql.SQLException;
public abstract boolean autoCommitFailureClosesAllResultSets()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getClientInfoProperties()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getFunctions(java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getFunctionColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract class javax.net.ssl.TrustManagerFactorySpi extends java.lang.Object{
protected abstract void engineInit(java.security.KeyStore)       throws java.security.KeyStoreException;
protected abstract void engineInit(javax.net.ssl.ManagerFactoryParameters)       throws java.security.InvalidAlgorithmParameterException;
protected abstract javax.net.ssl.TrustManager[] engineGetTrustManagers();
public abstract class javax.net.ssl.SSLServerSocketFactory extends javax.net.ServerSocketFactory{
public abstract java.lang.String[] getDefaultCipherSuites();
public abstract java.lang.String[] getSupportedCipherSuites();
public abstract class java.net.ContentHandler extends java.lang.Object{
public abstract java.lang.Object getContent(java.net.URLConnection)       throws java.io.IOException;
public abstract javax.xml.xpath.XPathFunction resolveFunction(javax.xml.namespace.QName, int);
public abstract class javax.xml.validation.SchemaFactoryLoader extends java.lang.Object{
public abstract javax.xml.validation.SchemaFactory newFactory(java.lang.String);
public abstract boolean onSingleTapConfirmed(android.view.MotionEvent);
public abstract boolean onDoubleTap(android.view.MotionEvent);
public abstract boolean onDoubleTapEvent(android.view.MotionEvent);
public abstract class java.net.Authenticator extends java.lang.Object{
public abstract class java.util.Dictionary extends java.lang.Object{
public abstract int size();
public abstract boolean isEmpty();
public abstract java.util.Enumeration keys();
public abstract java.util.Enumeration elements();
public abstract java.lang.Object get(java.lang.Object);
public abstract java.lang.Object put(java.lang.Object, java.lang.Object);
public abstract java.lang.Object remove(java.lang.Object);
public abstract void onShow(android.content.DialogInterface);
public abstract void invoke(java.lang.String, boolean, boolean);
public abstract class java.util.TimeZone extends java.lang.Object implements java.io.Serializable,java.lang.Cloneable{
public abstract int getOffset(int, int, int, int, int, int);
public abstract void setRawOffset(int);
public abstract int getRawOffset();
public abstract boolean useDaylightTime();
public abstract boolean inDaylightTime(java.util.Date);
public abstract class javax.xml.datatype.DatatypeFactory extends java.lang.Object{
public abstract javax.xml.datatype.Duration newDuration(java.lang.String);
public abstract javax.xml.datatype.Duration newDuration(long);
public abstract javax.xml.datatype.Duration newDuration(boolean, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigDecimal);
public abstract javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar();
public abstract javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(java.lang.String);
public abstract javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(java.util.GregorianCalendar);
public abstract javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(java.math.BigInteger, int, int, int, int, int, java.math.BigDecimal, int);
public abstract void onNmeaReceived(long, java.lang.String);
public abstract class java.nio.charset.spi.CharsetProvider extends java.lang.Object{
public abstract java.util.Iterator charsets();
public abstract java.nio.charset.Charset charsetForName(java.lang.String);
public abstract void handle(org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)       throws org.apache.http.HttpException, java.io.IOException;
public abstract class java.net.JarURLConnection extends java.net.URLConnection{
public abstract java.util.jar.JarFile getJarFile()       throws java.io.IOException;
public abstract class android.test.ProviderTestCase extends android.test.InstrumentationTestCase{
public abstract void close()       throws java.io.IOException;
public abstract class java.io.FilterReader extends java.io.Reader{
public abstract class java.nio.charset.Charset extends java.lang.Object implements java.lang.Comparable{
public abstract boolean contains(java.nio.charset.Charset);
public abstract java.nio.charset.CharsetDecoder newDecoder();
public abstract java.nio.charset.CharsetEncoder newEncoder();
public abstract class java.text.DateFormat extends java.text.Format{
public abstract java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition);
public abstract java.util.Date parse(java.lang.String, java.text.ParsePosition);
public abstract void chooseHeight(java.lang.CharSequence, int, int, int, int, android.graphics.Paint$FontMetricsInt);
public abstract void formatTo(java.util.Formatter, int, int, int);
public abstract long length()       throws java.sql.SQLException;
public abstract java.lang.String getSubString(long, int)       throws java.sql.SQLException;
public abstract java.io.Reader getCharacterStream()       throws java.sql.SQLException;
public abstract java.io.InputStream getAsciiStream()       throws java.sql.SQLException;
public abstract long position(java.lang.String, long)       throws java.sql.SQLException;
public abstract long position(java.sql.Clob, long)       throws java.sql.SQLException;
public abstract int setString(long, java.lang.String)       throws java.sql.SQLException;
public abstract int setString(long, java.lang.String, int, int)       throws java.sql.SQLException;
public abstract java.io.OutputStream setAsciiStream(long)       throws java.sql.SQLException;
public abstract java.io.Writer setCharacterStream(long)       throws java.sql.SQLException;
public abstract void truncate(long)       throws java.sql.SQLException;
public abstract void free()       throws java.sql.SQLException;
public abstract java.io.Reader getCharacterStream(long, long)       throws java.sql.SQLException;
public abstract java.sql.ResultSet executeQuery()       throws java.sql.SQLException;
public abstract int executeUpdate()       throws java.sql.SQLException;
public abstract void setNull(int, int)       throws java.sql.SQLException;
public abstract void setBoolean(int, boolean)       throws java.sql.SQLException;
public abstract void setByte(int, byte)       throws java.sql.SQLException;
public abstract void setShort(int, short)       throws java.sql.SQLException;
public abstract void setInt(int, int)       throws java.sql.SQLException;
public abstract void setLong(int, long)       throws java.sql.SQLException;
public abstract void setFloat(int, float)       throws java.sql.SQLException;
public abstract void setDouble(int, double)       throws java.sql.SQLException;
public abstract void setBigDecimal(int, java.math.BigDecimal)       throws java.sql.SQLException;
public abstract void setString(int, java.lang.String)       throws java.sql.SQLException;
public abstract void setBytes(int, byte[])       throws java.sql.SQLException;
public abstract void setDate(int, java.sql.Date)       throws java.sql.SQLException;
public abstract void setTime(int, java.sql.Time)       throws java.sql.SQLException;
public abstract void setTimestamp(int, java.sql.Timestamp)       throws java.sql.SQLException;
public abstract void setAsciiStream(int, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void setUnicodeStream(int, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void setBinaryStream(int, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void clearParameters()       throws java.sql.SQLException;
public abstract void setObject(int, java.lang.Object, int)       throws java.sql.SQLException;
public abstract void setObject(int, java.lang.Object)       throws java.sql.SQLException;
public abstract boolean execute()       throws java.sql.SQLException;
public abstract void addBatch()       throws java.sql.SQLException;
public abstract void setCharacterStream(int, java.io.Reader, int)       throws java.sql.SQLException;
public abstract void setRef(int, java.sql.Ref)       throws java.sql.SQLException;
public abstract void setBlob(int, java.sql.Blob)       throws java.sql.SQLException;
public abstract void setClob(int, java.sql.Clob)       throws java.sql.SQLException;
public abstract void setArray(int, java.sql.Array)       throws java.sql.SQLException;
public abstract java.sql.ResultSetMetaData getMetaData()       throws java.sql.SQLException;
public abstract void setDate(int, java.sql.Date, java.util.Calendar)       throws java.sql.SQLException;
public abstract void setTime(int, java.sql.Time, java.util.Calendar)       throws java.sql.SQLException;
public abstract void setTimestamp(int, java.sql.Timestamp, java.util.Calendar)       throws java.sql.SQLException;
public abstract void setNull(int, int, java.lang.String)       throws java.sql.SQLException;
public abstract void setURL(int, java.net.URL)       throws java.sql.SQLException;
public abstract java.sql.ParameterMetaData getParameterMetaData()       throws java.sql.SQLException;
public abstract void setRowId(int, java.sql.RowId)       throws java.sql.SQLException;
public abstract void setNString(int, java.lang.String)       throws java.sql.SQLException;
public abstract void setNCharacterStream(int, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setNClob(int, java.sql.NClob)       throws java.sql.SQLException;
public abstract void setClob(int, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setBlob(int, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void setNClob(int, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setSQLXML(int, java.sql.SQLXML)       throws java.sql.SQLException;
public abstract void setObject(int, java.lang.Object, int, int)       throws java.sql.SQLException;
public abstract void setAsciiStream(int, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void setBinaryStream(int, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void setCharacterStream(int, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void setAsciiStream(int, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setBinaryStream(int, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setCharacterStream(int, java.io.Reader)       throws java.sql.SQLException;
public abstract void setNCharacterStream(int, java.io.Reader)       throws java.sql.SQLException;
public abstract void setClob(int, java.io.Reader)       throws java.sql.SQLException;
public abstract void setBlob(int, java.io.InputStream)       throws java.sql.SQLException;
public abstract void setNClob(int, java.io.Reader)       throws java.sql.SQLException;
public abstract boolean onLongClick(android.view.View);
public abstract class java.nio.FloatBuffer extends java.nio.Buffer implements java.lang.Comparable{
public abstract java.nio.FloatBuffer slice();
public abstract java.nio.FloatBuffer duplicate();
public abstract java.nio.FloatBuffer asReadOnlyBuffer();
public abstract float get();
public abstract java.nio.FloatBuffer put(float);
public abstract float get(int);
public abstract java.nio.FloatBuffer put(int, float);
public abstract java.nio.FloatBuffer compact();
public abstract boolean isDirect();
public abstract java.nio.ByteOrder order();
public abstract java.net.URLStreamHandler createURLStreamHandler(java.lang.String);
public abstract class org.apache.http.params.AbstractHttpParams extends java.lang.Object implements org.apache.http.params.HttpParams{
public abstract void onChildViewAdded(android.view.View, android.view.View);
public abstract void onChildViewRemoved(android.view.View, android.view.View);
public abstract java.math.BigInteger getPrivateExponent();
public abstract class java.security.spec.EncodedKeySpec extends java.lang.Object implements java.security.spec.KeySpec{
public abstract java.lang.String getFormat();
public abstract java.lang.String getTagName();
public abstract java.lang.String getAttribute(java.lang.String);
public abstract void setAttribute(java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract void removeAttribute(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Attr getAttributeNode(java.lang.String);
public abstract org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.NodeList getElementsByTagName(java.lang.String);
public abstract java.lang.String getAttributeNS(java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract void setAttributeNS(java.lang.String, java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract void removeAttributeNS(java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Attr getAttributeNodeNS(java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract boolean hasAttribute(java.lang.String);
public abstract boolean hasAttributeNS(java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.TypeInfo getSchemaTypeInfo();
public abstract void setIdAttribute(java.lang.String, boolean)       throws org.w3c.dom.DOMException;
public abstract void setIdAttributeNS(java.lang.String, java.lang.String, boolean)       throws org.w3c.dom.DOMException;
public abstract void setIdAttributeNode(org.w3c.dom.Attr, boolean)       throws org.w3c.dom.DOMException;
public abstract void requestLayout();
public abstract boolean isLayoutRequested();
public abstract void requestTransparentRegion(android.view.View);
public abstract void invalidateChild(android.view.View, android.graphics.Rect);
public abstract android.view.ViewParent invalidateChildInParent(int[], android.graphics.Rect);
public abstract android.view.ViewParent getParent();
public abstract void requestChildFocus(android.view.View, android.view.View);
public abstract void recomputeViewAttributes(android.view.View);
public abstract void clearChildFocus(android.view.View);
public abstract boolean getChildVisibleRect(android.view.View, android.graphics.Rect, android.graphics.Point);
public abstract android.view.View focusSearch(android.view.View, int);
public abstract void bringChildToFront(android.view.View);
public abstract void focusableViewAvailable(android.view.View);
public abstract boolean showContextMenuForChild(android.view.View);
public abstract void createContextMenu(android.view.ContextMenu);
public abstract void childDrawableStateChanged(android.view.View);
public abstract void requestDisallowInterceptTouchEvent(boolean);
public abstract boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean);
public abstract class android.database.sqlite.SQLiteClosable extends java.lang.Object{
protected abstract void onAllReferencesReleased();
public abstract void startDTD(java.lang.String, java.lang.String, java.lang.String)       throws org.xml.sax.SAXException;
public abstract void endDTD()       throws org.xml.sax.SAXException;
public abstract void startEntity(java.lang.String)       throws org.xml.sax.SAXException;
public abstract void endEntity(java.lang.String)       throws org.xml.sax.SAXException;
public abstract void startCDATA()       throws org.xml.sax.SAXException;
public abstract void endCDATA()       throws org.xml.sax.SAXException;
public abstract void comment(char[], int, int)       throws org.xml.sax.SAXException;
public abstract org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String)       throws org.xml.sax.SAXException, java.io.IOException;
public abstract class java.util.AbstractQueue extends java.util.AbstractCollection implements java.util.Queue{
public abstract class java.net.SecureCacheResponse extends java.net.CacheResponse{
public abstract java.lang.String getCipherSuite();
public abstract java.util.List getLocalCertificateChain();
public abstract java.util.List getServerCertificateChain()       throws javax.net.ssl.SSLPeerUnverifiedException;
public abstract java.security.Principal getPeerPrincipal()       throws javax.net.ssl.SSLPeerUnverifiedException;
public abstract java.security.Principal getLocalPrincipal();
public abstract java.lang.String getName();
public abstract java.lang.String getValue();
public abstract void onPreviewFrame(byte[], android.hardware.Camera);
public abstract class java.text.Collator extends java.lang.Object implements java.util.Comparator,java.lang.Cloneable{
public abstract int compare(java.lang.String, java.lang.String);
public abstract java.text.CollationKey getCollationKey(java.lang.String);
public abstract int hashCode();
public abstract android.widget.ListAdapter getWrappedAdapter();
public abstract org.apache.http.HttpRequest receiveRequestHeader()       throws org.apache.http.HttpException, java.io.IOException;
public abstract void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest)       throws org.apache.http.HttpException, java.io.IOException;
public abstract void sendResponseHeader(org.apache.http.HttpResponse)       throws org.apache.http.HttpException, java.io.IOException;
public abstract void sendResponseEntity(org.apache.http.HttpResponse)       throws org.apache.http.HttpException, java.io.IOException;
public abstract void flush()       throws java.io.IOException;
public abstract void onGlobalLayout();
public abstract class android.text.method.MetaKeyKeyListener extends java.lang.Object{
public abstract class java.util.concurrent.AbstractExecutorService extends java.lang.Object implements java.util.concurrent.ExecutorService{
public abstract class java.security.AuthProvider extends java.security.Provider{
public abstract void login(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler)       throws javax.security.auth.login.LoginException;
public abstract void logout()       throws javax.security.auth.login.LoginException;
public abstract void setCallbackHandler(javax.security.auth.callback.CallbackHandler);
public abstract java.security.Principal getUserPrincipal();
public abstract java.lang.String getPassword();
public abstract void updateQuota(long);
public abstract class org.apache.http.impl.io.AbstractSessionInputBuffer extends java.lang.Object implements org.apache.http.io.SessionInputBuffer{
public abstract boolean cancel(boolean);
public abstract boolean isCancelled();
public abstract boolean isDone();
public abstract java.lang.Object get()       throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
public abstract java.lang.Object get(long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
public abstract void end();
public abstract class android.content.Context extends java.lang.Object{
public abstract android.content.res.AssetManager getAssets();
public abstract android.content.res.Resources getResources();
public abstract android.content.pm.PackageManager getPackageManager();
public abstract android.content.ContentResolver getContentResolver();
public abstract android.os.Looper getMainLooper();
public abstract android.content.Context getApplicationContext();
public abstract void setTheme(int);
public abstract android.content.res.Resources$Theme getTheme();
public abstract java.lang.ClassLoader getClassLoader();
public abstract java.lang.String getPackageName();
public abstract android.content.pm.ApplicationInfo getApplicationInfo();
public abstract java.lang.String getPackageResourcePath();
public abstract java.lang.String getPackageCodePath();
public abstract android.content.SharedPreferences getSharedPreferences(java.lang.String, int);
public abstract java.io.FileInputStream openFileInput(java.lang.String)       throws java.io.FileNotFoundException;
public abstract java.io.FileOutputStream openFileOutput(java.lang.String, int)       throws java.io.FileNotFoundException;
public abstract boolean deleteFile(java.lang.String);
public abstract java.io.File getFileStreamPath(java.lang.String);
public abstract java.io.File getFilesDir();
public abstract java.io.File getExternalFilesDir(java.lang.String);
public abstract java.io.File getCacheDir();
public abstract java.io.File getExternalCacheDir();
public abstract java.lang.String[] fileList();
public abstract java.io.File getDir(java.lang.String, int);
public abstract android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase$CursorFactory);
public abstract boolean deleteDatabase(java.lang.String);
public abstract java.io.File getDatabasePath(java.lang.String);
public abstract java.lang.String[] databaseList();
public abstract android.graphics.drawable.Drawable getWallpaper();
public abstract android.graphics.drawable.Drawable peekWallpaper();
public abstract int getWallpaperDesiredMinimumWidth();
public abstract int getWallpaperDesiredMinimumHeight();
public abstract void setWallpaper(android.graphics.Bitmap)       throws java.io.IOException;
public abstract void setWallpaper(java.io.InputStream)       throws java.io.IOException;
public abstract void clearWallpaper()       throws java.io.IOException;
public abstract void startActivity(android.content.Intent);
public abstract void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)       throws android.content.IntentSender$SendIntentException;
public abstract void sendBroadcast(android.content.Intent);
public abstract void sendBroadcast(android.content.Intent, java.lang.String);
public abstract void sendOrderedBroadcast(android.content.Intent, java.lang.String);
public abstract void sendOrderedBroadcast(android.content.Intent, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);
public abstract void sendStickyBroadcast(android.content.Intent);
public abstract void sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);
public abstract void removeStickyBroadcast(android.content.Intent);
public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter);
public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, java.lang.String, android.os.Handler);
public abstract void unregisterReceiver(android.content.BroadcastReceiver);
public abstract android.content.ComponentName startService(android.content.Intent);
public abstract boolean stopService(android.content.Intent);
public abstract boolean bindService(android.content.Intent, android.content.ServiceConnection, int);
public abstract void unbindService(android.content.ServiceConnection);
public abstract boolean startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle);
public abstract java.lang.Object getSystemService(java.lang.String);
public abstract int checkPermission(java.lang.String, int, int);
public abstract int checkCallingPermission(java.lang.String);
public abstract int checkCallingOrSelfPermission(java.lang.String);
public abstract void enforcePermission(java.lang.String, int, int, java.lang.String);
public abstract void enforceCallingPermission(java.lang.String, java.lang.String);
public abstract void enforceCallingOrSelfPermission(java.lang.String, java.lang.String);
public abstract void grantUriPermission(java.lang.String, android.net.Uri, int);
public abstract void revokeUriPermission(android.net.Uri, int);
public abstract int checkUriPermission(android.net.Uri, int, int, int);
public abstract int checkCallingUriPermission(android.net.Uri, int);
public abstract int checkCallingOrSelfUriPermission(android.net.Uri, int);
public abstract int checkUriPermission(android.net.Uri, java.lang.String, java.lang.String, int, int, int);
public abstract void enforceUriPermission(android.net.Uri, int, int, int, java.lang.String);
public abstract void enforceCallingUriPermission(android.net.Uri, int, java.lang.String);
public abstract void enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String);
public abstract void enforceUriPermission(android.net.Uri, java.lang.String, java.lang.String, int, int, int, java.lang.String);
public abstract android.content.Context createPackageContext(java.lang.String, int)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract class java.nio.channels.Pipe$SinkChannel extends java.nio.channels.spi.AbstractSelectableChannel implements java.nio.channels.WritableByteChannel,java.nio.channels.GatheringByteChannel{
public abstract void onEnableStatusChange(android.media.audiofx.AudioEffect, boolean);
public abstract class javax.crypto.CipherSpi extends java.lang.Object{
protected abstract void engineSetMode(java.lang.String)       throws java.security.NoSuchAlgorithmException;
protected abstract void engineSetPadding(java.lang.String)       throws javax.crypto.NoSuchPaddingException;
protected abstract int engineGetBlockSize();
protected abstract int engineGetOutputSize(int);
protected abstract byte[] engineGetIV();
protected abstract java.security.AlgorithmParameters engineGetParameters();
protected abstract void engineInit(int, java.security.Key, java.security.SecureRandom)       throws java.security.InvalidKeyException;
protected abstract void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)       throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
protected abstract void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom)       throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
protected abstract byte[] engineUpdate(byte[], int, int);
protected abstract int engineUpdate(byte[], int, int, byte[], int)       throws javax.crypto.ShortBufferException;
protected abstract byte[] engineDoFinal(byte[], int, int)       throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
protected abstract int engineDoFinal(byte[], int, int, byte[], int)       throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
public abstract class java.nio.channels.FileChannel extends java.nio.channels.spi.AbstractInterruptibleChannel implements java.nio.channels.ByteChannel,java.nio.channels.GatheringByteChannel,java.nio.channels.ScatteringByteChannel{
public abstract int read(java.nio.ByteBuffer)       throws java.io.IOException;
public abstract long read(java.nio.ByteBuffer[], int, int)       throws java.io.IOException;
public abstract int write(java.nio.ByteBuffer)       throws java.io.IOException;
public abstract long write(java.nio.ByteBuffer[], int, int)       throws java.io.IOException;
public abstract long position()       throws java.io.IOException;
public abstract java.nio.channels.FileChannel position(long)       throws java.io.IOException;
public abstract long size()       throws java.io.IOException;
public abstract java.nio.channels.FileChannel truncate(long)       throws java.io.IOException;
public abstract void force(boolean)       throws java.io.IOException;
public abstract long transferTo(long, long, java.nio.channels.WritableByteChannel)       throws java.io.IOException;
public abstract long transferFrom(java.nio.channels.ReadableByteChannel, long, long)       throws java.io.IOException;
public abstract int read(java.nio.ByteBuffer, long)       throws java.io.IOException;
public abstract int write(java.nio.ByteBuffer, long)       throws java.io.IOException;
public abstract java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode, long, long)       throws java.io.IOException;
public abstract java.nio.channels.FileLock lock(long, long, boolean)       throws java.io.IOException;
public abstract java.nio.channels.FileLock tryLock(long, long, boolean)       throws java.io.IOException;
public abstract java.lang.String getTarget();
public abstract java.lang.String getData();
public abstract void setData(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract class android.database.sqlite.SQLiteProgram extends android.database.sqlite.SQLiteClosable{
public abstract class java.nio.channels.Selector extends java.lang.Object{
public abstract boolean isOpen();
public abstract java.nio.channels.spi.SelectorProvider provider();
public abstract java.util.Set keys();
public abstract java.util.Set selectedKeys();
public abstract int selectNow()       throws java.io.IOException;
public abstract int select(long)       throws java.io.IOException;
public abstract int select()       throws java.io.IOException;
public abstract java.nio.channels.Selector wakeup();
public abstract void close()       throws java.io.IOException;
public abstract class javax.xml.datatype.Duration extends java.lang.Object{
public abstract int getSign();
public abstract java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field);
public abstract boolean isSet(javax.xml.datatype.DatatypeConstants$Field);
public abstract javax.xml.datatype.Duration add(javax.xml.datatype.Duration);
public abstract void addTo(java.util.Calendar);
public abstract javax.xml.datatype.Duration multiply(java.math.BigDecimal);
public abstract javax.xml.datatype.Duration negate();
public abstract javax.xml.datatype.Duration normalizeWith(java.util.Calendar);
public abstract int compare(javax.xml.datatype.Duration);
public abstract int hashCode();
public abstract java.lang.String getName();
public abstract java.lang.String getValue();
public abstract org.apache.http.HeaderElement[] getElements()       throws org.apache.http.ParseException;
public abstract android.widget.Filter getFilter();
public abstract class javax.xml.transform.sax.SAXTransformerFactory extends javax.xml.transform.TransformerFactory{
public abstract javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source)       throws javax.xml.transform.TransformerConfigurationException;
public abstract javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)       throws javax.xml.transform.TransformerConfigurationException;
public abstract javax.xml.transform.sax.TransformerHandler newTransformerHandler()       throws javax.xml.transform.TransformerConfigurationException;
public abstract javax.xml.transform.sax.TemplatesHandler newTemplatesHandler()       throws javax.xml.transform.TransformerConfigurationException;
public abstract org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)       throws javax.xml.transform.TransformerConfigurationException;
public abstract org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)       throws javax.xml.transform.TransformerConfigurationException;
public abstract void onClick(android.content.DialogInterface, int, boolean);
public abstract android.view.View getDropDownView(int, android.view.View, android.view.ViewGroup);
public abstract void run();
public abstract class java.lang.ref.Reference extends java.lang.Object{
public abstract class java.util.AbstractList extends java.util.AbstractCollection implements java.util.List{
public abstract java.lang.Object get(int);
public abstract class javax.xml.validation.Schema extends java.lang.Object{
public abstract javax.xml.validation.Validator newValidator();
public abstract javax.xml.validation.ValidatorHandler newValidatorHandler();
public abstract boolean hasMoreElements();
public abstract java.lang.Object nextElement();
public abstract class java.io.ObjectStreamException extends java.io.IOException{
public abstract class android.os.CountDownTimer extends java.lang.Object{
public abstract void onTick(long);
public abstract void onFinish();
public abstract java.util.Comparator comparator();
public abstract java.util.SortedSet subSet(java.lang.Object, java.lang.Object);
public abstract java.util.SortedSet headSet(java.lang.Object);
public abstract java.util.SortedSet tailSet(java.lang.Object);
public abstract java.lang.Object first();
public abstract java.lang.Object last();
public abstract class java.security.Signature extends java.security.SignatureSpi{
public abstract void onSpanAdded(android.text.Spannable, java.lang.Object, int, int);
public abstract void onSpanRemoved(android.text.Spannable, java.lang.Object, int, int);
public abstract void onSpanChanged(android.text.Spannable, java.lang.Object, int, int, int, int);
public abstract java.lang.String generateType1Msg(java.lang.String, java.lang.String)       throws org.apache.http.impl.auth.NTLMEngineException;
public abstract java.lang.String generateType3Msg(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)       throws org.apache.http.impl.auth.NTLMEngineException;
public abstract boolean onGroupClick(android.widget.ExpandableListView, android.view.View, int, long);
public abstract void onScrollChanged();
public abstract class android.widget.ResourceCursorAdapter extends android.widget.CursorAdapter{
abstract class java.lang.AbstractStringBuilder extends java.lang.Object implements java.lang.Appendable,java.lang.CharSequence{
public abstract java.lang.String toString();
public abstract junit.framework.TestSuite getTestSuite();
public abstract class java.security.cert.X509Certificate extends java.security.cert.Certificate implements java.security.cert.X509Extension{
public abstract void checkValidity()       throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException;
public abstract void checkValidity(java.util.Date)       throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException;
public abstract int getVersion();
public abstract java.math.BigInteger getSerialNumber();
public abstract java.security.Principal getIssuerDN();
public abstract java.security.Principal getSubjectDN();
public abstract java.util.Date getNotBefore();
public abstract java.util.Date getNotAfter();
public abstract byte[] getTBSCertificate()       throws java.security.cert.CertificateEncodingException;
public abstract byte[] getSignature();
public abstract java.lang.String getSigAlgName();
public abstract java.lang.String getSigAlgOID();
public abstract byte[] getSigAlgParams();
public abstract boolean[] getIssuerUniqueID();
public abstract boolean[] getSubjectUniqueID();
public abstract boolean[] getKeyUsage();
public abstract int getBasicConstraints();
public abstract class java.nio.charset.CharsetEncoder extends java.lang.Object{
protected abstract java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer);
public abstract class javax.crypto.MacSpi extends java.lang.Object{
protected abstract int engineGetMacLength();
protected abstract void engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec)       throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
protected abstract void engineUpdate(byte);
protected abstract void engineUpdate(byte[], int, int);
protected abstract byte[] engineDoFinal();
protected abstract void engineReset();
public abstract class android.app.IntentService extends android.app.Service{
protected abstract void onHandleIntent(android.content.Intent);
public abstract void onInputQueueCreated(android.view.InputQueue);
public abstract void onInputQueueDestroyed(android.view.InputQueue);
public abstract void glBindFramebufferOES(int, int);
public abstract void glBindRenderbufferOES(int, int);
public abstract void glBindTexture(int, int);
public abstract void glBlendEquation(int);
public abstract void glBlendEquationSeparate(int, int);
public abstract void glBlendFuncSeparate(int, int, int, int);
public abstract int glCheckFramebufferStatusOES(int);
public abstract void glCompressedTexImage2D(int, int, int, int, int, int, int, java.nio.Buffer);
public abstract void glCopyTexImage2D(int, int, int, int, int, int, int, int);
public abstract void glDeleteFramebuffersOES(int, int[], int);
public abstract void glDeleteFramebuffersOES(int, java.nio.IntBuffer);
public abstract void glDeleteRenderbuffersOES(int, int[], int);
public abstract void glDeleteRenderbuffersOES(int, java.nio.IntBuffer);
public abstract void glEnable(int);
public abstract void glFramebufferRenderbufferOES(int, int, int, int);
public abstract void glFramebufferTexture2DOES(int, int, int, int, int);
public abstract void glGenerateMipmapOES(int);
public abstract void glGenFramebuffersOES(int, int[], int);
public abstract void glGenFramebuffersOES(int, java.nio.IntBuffer);
public abstract void glGenRenderbuffersOES(int, int[], int);
public abstract void glGenRenderbuffersOES(int, java.nio.IntBuffer);
public abstract void glGetFramebufferAttachmentParameterivOES(int, int, int, int[], int);
public abstract void glGetFramebufferAttachmentParameterivOES(int, int, int, java.nio.IntBuffer);
public abstract void glGetIntegerv(int, int[], int);
public abstract void glGetIntegerv(int, java.nio.IntBuffer);
public abstract void glGetRenderbufferParameterivOES(int, int, int[], int);
public abstract void glGetRenderbufferParameterivOES(int, int, java.nio.IntBuffer);
public abstract void glGetTexGenfv(int, int, float[], int);
public abstract void glGetTexGenfv(int, int, java.nio.FloatBuffer);
public abstract void glGetTexGeniv(int, int, int[], int);
public abstract void glGetTexGeniv(int, int, java.nio.IntBuffer);
public abstract void glGetTexGenxv(int, int, int[], int);
public abstract void glGetTexGenxv(int, int, java.nio.IntBuffer);
public abstract boolean glIsFramebufferOES(int);
public abstract boolean glIsRenderbufferOES(int);
public abstract void glRenderbufferStorageOES(int, int, int, int);
public abstract void glStencilOp(int, int, int);
public abstract void glTexEnvf(int, int, float);
public abstract void glTexEnvfv(int, int, float[], int);
public abstract void glTexEnvfv(int, int, java.nio.FloatBuffer);
public abstract void glTexEnvx(int, int, int);
public abstract void glTexEnvxv(int, int, int[], int);
public abstract void glTexEnvxv(int, int, java.nio.IntBuffer);
public abstract void glTexGenf(int, int, float);
public abstract void glTexGenfv(int, int, float[], int);
public abstract void glTexGenfv(int, int, java.nio.FloatBuffer);
public abstract void glTexGeni(int, int, int);
public abstract void glTexGeniv(int, int, int[], int);
public abstract void glTexGeniv(int, int, java.nio.IntBuffer);
public abstract void glTexGenx(int, int, int);
public abstract void glTexGenxv(int, int, int[], int);
public abstract void glTexGenxv(int, int, java.nio.IntBuffer);
public abstract void glTexParameterf(int, int, float);
public abstract void protect()       throws java.lang.Throwable;
public abstract org.w3c.dom.DOMImplementation getDOMImplementation(java.lang.String);
public abstract org.w3c.dom.DOMImplementationList getDOMImplementationList(java.lang.String);
public abstract boolean next()       throws java.sql.SQLException;
public abstract void close()       throws java.sql.SQLException;
public abstract boolean wasNull()       throws java.sql.SQLException;
public abstract java.lang.String getString(int)       throws java.sql.SQLException;
public abstract boolean getBoolean(int)       throws java.sql.SQLException;
public abstract byte getByte(int)       throws java.sql.SQLException;
public abstract short getShort(int)       throws java.sql.SQLException;
public abstract int getInt(int)       throws java.sql.SQLException;
public abstract long getLong(int)       throws java.sql.SQLException;
public abstract float getFloat(int)       throws java.sql.SQLException;
public abstract double getDouble(int)       throws java.sql.SQLException;
public abstract java.math.BigDecimal getBigDecimal(int, int)       throws java.sql.SQLException;
public abstract byte[] getBytes(int)       throws java.sql.SQLException;
public abstract java.sql.Date getDate(int)       throws java.sql.SQLException;
public abstract java.sql.Time getTime(int)       throws java.sql.SQLException;
public abstract java.sql.Timestamp getTimestamp(int)       throws java.sql.SQLException;
public abstract java.io.InputStream getAsciiStream(int)       throws java.sql.SQLException;
public abstract java.io.InputStream getUnicodeStream(int)       throws java.sql.SQLException;
public abstract java.io.InputStream getBinaryStream(int)       throws java.sql.SQLException;
public abstract java.lang.String getString(java.lang.String)       throws java.sql.SQLException;
public abstract boolean getBoolean(java.lang.String)       throws java.sql.SQLException;
public abstract byte getByte(java.lang.String)       throws java.sql.SQLException;
public abstract short getShort(java.lang.String)       throws java.sql.SQLException;
public abstract int getInt(java.lang.String)       throws java.sql.SQLException;
public abstract long getLong(java.lang.String)       throws java.sql.SQLException;
public abstract float getFloat(java.lang.String)       throws java.sql.SQLException;
public abstract double getDouble(java.lang.String)       throws java.sql.SQLException;
public abstract java.math.BigDecimal getBigDecimal(java.lang.String, int)       throws java.sql.SQLException;
public abstract byte[] getBytes(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Date getDate(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Time getTime(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Timestamp getTimestamp(java.lang.String)       throws java.sql.SQLException;
public abstract java.io.InputStream getAsciiStream(java.lang.String)       throws java.sql.SQLException;
public abstract java.io.InputStream getUnicodeStream(java.lang.String)       throws java.sql.SQLException;
public abstract java.io.InputStream getBinaryStream(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.SQLWarning getWarnings()       throws java.sql.SQLException;
public abstract void clearWarnings()       throws java.sql.SQLException;
public abstract java.lang.String getCursorName()       throws java.sql.SQLException;
public abstract java.sql.ResultSetMetaData getMetaData()       throws java.sql.SQLException;
public abstract java.lang.Object getObject(int)       throws java.sql.SQLException;
public abstract java.lang.Object getObject(java.lang.String)       throws java.sql.SQLException;
public abstract int findColumn(java.lang.String)       throws java.sql.SQLException;
public abstract java.io.Reader getCharacterStream(int)       throws java.sql.SQLException;
public abstract java.io.Reader getCharacterStream(java.lang.String)       throws java.sql.SQLException;
public abstract java.math.BigDecimal getBigDecimal(int)       throws java.sql.SQLException;
public abstract java.math.BigDecimal getBigDecimal(java.lang.String)       throws java.sql.SQLException;
public abstract boolean isBeforeFirst()       throws java.sql.SQLException;
public abstract boolean isAfterLast()       throws java.sql.SQLException;
public abstract boolean isFirst()       throws java.sql.SQLException;
public abstract boolean isLast()       throws java.sql.SQLException;
public abstract void beforeFirst()       throws java.sql.SQLException;
public abstract void afterLast()       throws java.sql.SQLException;
public abstract boolean first()       throws java.sql.SQLException;
public abstract boolean last()       throws java.sql.SQLException;
public abstract int getRow()       throws java.sql.SQLException;
public abstract boolean absolute(int)       throws java.sql.SQLException;
public abstract boolean relative(int)       throws java.sql.SQLException;
public abstract boolean previous()       throws java.sql.SQLException;
public abstract void setFetchDirection(int)       throws java.sql.SQLException;
public abstract int getFetchDirection()       throws java.sql.SQLException;
public abstract void setFetchSize(int)       throws java.sql.SQLException;
public abstract int getFetchSize()       throws java.sql.SQLException;
public abstract int getType()       throws java.sql.SQLException;
public abstract int getConcurrency()       throws java.sql.SQLException;
public abstract boolean rowUpdated()       throws java.sql.SQLException;
public abstract boolean rowInserted()       throws java.sql.SQLException;
public abstract boolean rowDeleted()       throws java.sql.SQLException;
public abstract void updateNull(int)       throws java.sql.SQLException;
public abstract void updateBoolean(int, boolean)       throws java.sql.SQLException;
public abstract void updateByte(int, byte)       throws java.sql.SQLException;
public abstract void updateShort(int, short)       throws java.sql.SQLException;
public abstract void updateInt(int, int)       throws java.sql.SQLException;
public abstract void updateLong(int, long)       throws java.sql.SQLException;
public abstract void updateFloat(int, float)       throws java.sql.SQLException;
public abstract void updateDouble(int, double)       throws java.sql.SQLException;
public abstract void updateBigDecimal(int, java.math.BigDecimal)       throws java.sql.SQLException;
public abstract void updateString(int, java.lang.String)       throws java.sql.SQLException;
public abstract void updateBytes(int, byte[])       throws java.sql.SQLException;
public abstract void updateDate(int, java.sql.Date)       throws java.sql.SQLException;
public abstract void updateTime(int, java.sql.Time)       throws java.sql.SQLException;
public abstract void updateTimestamp(int, java.sql.Timestamp)       throws java.sql.SQLException;
public abstract void updateAsciiStream(int, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void updateBinaryStream(int, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void updateCharacterStream(int, java.io.Reader, int)       throws java.sql.SQLException;
public abstract void updateObject(int, java.lang.Object, int)       throws java.sql.SQLException;
public abstract void updateObject(int, java.lang.Object)       throws java.sql.SQLException;
public abstract void updateNull(java.lang.String)       throws java.sql.SQLException;
public abstract void updateBoolean(java.lang.String, boolean)       throws java.sql.SQLException;
public abstract void updateByte(java.lang.String, byte)       throws java.sql.SQLException;
public abstract void updateShort(java.lang.String, short)       throws java.sql.SQLException;
public abstract void updateInt(java.lang.String, int)       throws java.sql.SQLException;
public abstract void updateLong(java.lang.String, long)       throws java.sql.SQLException;
public abstract void updateFloat(java.lang.String, float)       throws java.sql.SQLException;
public abstract void updateDouble(java.lang.String, double)       throws java.sql.SQLException;
public abstract void updateBigDecimal(java.lang.String, java.math.BigDecimal)       throws java.sql.SQLException;
public abstract void updateString(java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract void updateBytes(java.lang.String, byte[])       throws java.sql.SQLException;
public abstract void updateDate(java.lang.String, java.sql.Date)       throws java.sql.SQLException;
public abstract void updateTime(java.lang.String, java.sql.Time)       throws java.sql.SQLException;
public abstract void updateTimestamp(java.lang.String, java.sql.Timestamp)       throws java.sql.SQLException;
public abstract void updateAsciiStream(java.lang.String, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void updateBinaryStream(java.lang.String, java.io.InputStream, int)       throws java.sql.SQLException;
public abstract void updateCharacterStream(java.lang.String, java.io.Reader, int)       throws java.sql.SQLException;
public abstract void updateObject(java.lang.String, java.lang.Object, int)       throws java.sql.SQLException;
public abstract void updateObject(java.lang.String, java.lang.Object)       throws java.sql.SQLException;
public abstract void insertRow()       throws java.sql.SQLException;
public abstract void updateRow()       throws java.sql.SQLException;
public abstract void deleteRow()       throws java.sql.SQLException;
public abstract void refreshRow()       throws java.sql.SQLException;
public abstract void cancelRowUpdates()       throws java.sql.SQLException;
public abstract void moveToInsertRow()       throws java.sql.SQLException;
public abstract void moveToCurrentRow()       throws java.sql.SQLException;
public abstract java.sql.Statement getStatement()       throws java.sql.SQLException;
public abstract java.lang.Object getObject(int, java.util.Map)       throws java.sql.SQLException;
public abstract java.sql.Ref getRef(int)       throws java.sql.SQLException;
public abstract java.sql.Blob getBlob(int)       throws java.sql.SQLException;
public abstract java.sql.Clob getClob(int)       throws java.sql.SQLException;
public abstract java.sql.Array getArray(int)       throws java.sql.SQLException;
public abstract java.lang.Object getObject(java.lang.String, java.util.Map)       throws java.sql.SQLException;
public abstract java.sql.Ref getRef(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Blob getBlob(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Clob getClob(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Array getArray(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.Date getDate(int, java.util.Calendar)       throws java.sql.SQLException;
public abstract java.sql.Date getDate(java.lang.String, java.util.Calendar)       throws java.sql.SQLException;
public abstract java.sql.Time getTime(int, java.util.Calendar)       throws java.sql.SQLException;
public abstract java.sql.Time getTime(java.lang.String, java.util.Calendar)       throws java.sql.SQLException;
public abstract java.sql.Timestamp getTimestamp(int, java.util.Calendar)       throws java.sql.SQLException;
public abstract java.sql.Timestamp getTimestamp(java.lang.String, java.util.Calendar)       throws java.sql.SQLException;
public abstract java.net.URL getURL(int)       throws java.sql.SQLException;
public abstract java.net.URL getURL(java.lang.String)       throws java.sql.SQLException;
public abstract void updateRef(int, java.sql.Ref)       throws java.sql.SQLException;
public abstract void updateRef(java.lang.String, java.sql.Ref)       throws java.sql.SQLException;
public abstract void updateBlob(int, java.sql.Blob)       throws java.sql.SQLException;
public abstract void updateBlob(java.lang.String, java.sql.Blob)       throws java.sql.SQLException;
public abstract void updateClob(int, java.sql.Clob)       throws java.sql.SQLException;
public abstract void updateClob(java.lang.String, java.sql.Clob)       throws java.sql.SQLException;
public abstract void updateArray(int, java.sql.Array)       throws java.sql.SQLException;
public abstract void updateArray(java.lang.String, java.sql.Array)       throws java.sql.SQLException;
public abstract java.sql.RowId getRowId(int)       throws java.sql.SQLException;
public abstract java.sql.RowId getRowId(java.lang.String)       throws java.sql.SQLException;
public abstract void updateRowId(int, java.sql.RowId)       throws java.sql.SQLException;
public abstract void updateRowId(java.lang.String, java.sql.RowId)       throws java.sql.SQLException;
public abstract int getHoldability()       throws java.sql.SQLException;
public abstract boolean isClosed()       throws java.sql.SQLException;
public abstract void updateNString(int, java.lang.String)       throws java.sql.SQLException;
public abstract void updateNString(java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract void updateNClob(int, java.sql.NClob)       throws java.sql.SQLException;
public abstract void updateNClob(java.lang.String, java.sql.NClob)       throws java.sql.SQLException;
public abstract java.sql.NClob getNClob(int)       throws java.sql.SQLException;
public abstract java.sql.NClob getNClob(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.SQLXML getSQLXML(int)       throws java.sql.SQLException;
public abstract java.sql.SQLXML getSQLXML(java.lang.String)       throws java.sql.SQLException;
public abstract void updateSQLXML(int, java.sql.SQLXML)       throws java.sql.SQLException;
public abstract void updateSQLXML(java.lang.String, java.sql.SQLXML)       throws java.sql.SQLException;
public abstract java.lang.String getNString(int)       throws java.sql.SQLException;
public abstract java.lang.String getNString(java.lang.String)       throws java.sql.SQLException;
public abstract java.io.Reader getNCharacterStream(int)       throws java.sql.SQLException;
public abstract java.io.Reader getNCharacterStream(java.lang.String)       throws java.sql.SQLException;
public abstract void updateNCharacterStream(int, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void updateNCharacterStream(java.lang.String, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void updateAsciiStream(int, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void updateBinaryStream(int, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void updateCharacterStream(int, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void updateAsciiStream(java.lang.String, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void updateBinaryStream(java.lang.String, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void updateCharacterStream(java.lang.String, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void updateBlob(int, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void updateBlob(java.lang.String, java.io.InputStream, long)       throws java.sql.SQLException;
public abstract void updateClob(int, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void updateClob(java.lang.String, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void updateNClob(int, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void updateNClob(java.lang.String, java.io.Reader, long)       throws java.sql.SQLException;
public abstract void updateNCharacterStream(int, java.io.Reader)       throws java.sql.SQLException;
public abstract void updateNCharacterStream(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract void updateAsciiStream(int, java.io.InputStream)       throws java.sql.SQLException;
public abstract void updateBinaryStream(int, java.io.InputStream)       throws java.sql.SQLException;
public abstract void updateCharacterStream(int, java.io.Reader)       throws java.sql.SQLException;
public abstract void updateAsciiStream(java.lang.String, java.io.InputStream)       throws java.sql.SQLException;
public abstract void updateBinaryStream(java.lang.String, java.io.InputStream)       throws java.sql.SQLException;
public abstract void updateCharacterStream(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract void updateBlob(int, java.io.InputStream)       throws java.sql.SQLException;
public abstract void updateBlob(java.lang.String, java.io.InputStream)       throws java.sql.SQLException;
public abstract void updateClob(int, java.io.Reader)       throws java.sql.SQLException;
public abstract void updateClob(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract void updateNClob(int, java.io.Reader)       throws java.sql.SQLException;
public abstract void updateNClob(java.lang.String, java.io.Reader)       throws java.sql.SQLException;
public abstract java.security.KeyStore$ProtectionParameter getProtectionParameter();
public abstract class javax.xml.validation.TypeInfoProvider extends java.lang.Object{
public abstract org.w3c.dom.TypeInfo getElementTypeInfo();
public abstract org.w3c.dom.TypeInfo getAttributeTypeInfo(int);
public abstract boolean isIdAttribute(int);
public abstract boolean isSpecified(int);
public abstract class android.database.DataSetObserver extends java.lang.Object{
public abstract void addCookie(org.apache.http.cookie.Cookie);
public abstract java.util.List getCookies();
public abstract boolean clearExpired(java.util.Date);
public abstract void clear();
public abstract javax.xml.transform.Source resolve(java.lang.String, java.lang.String)       throws javax.xml.transform.TransformerException;
public abstract int mask();
public abstract int equals();
public abstract java.lang.String name();
public abstract boolean outputIf();
public abstract int compareTo(java.lang.Object);
public abstract void onGroupExpand(int);
public abstract java.lang.annotation.ElementType[] value();
public abstract java.math.BigInteger getPublicExponent();
public abstract java.math.BigInteger getPrimeP();
public abstract java.math.BigInteger getPrimeQ();
public abstract java.math.BigInteger getPrimeExponentP();
public abstract java.math.BigInteger getPrimeExponentQ();
public abstract java.math.BigInteger getCrtCoefficient();
public abstract class android.graphics.drawable.DrawableContainer$DrawableContainerState extends android.graphics.drawable.Drawable$ConstantState{
public abstract void onSensorChanged(android.hardware.SensorEvent);
public abstract void onAccuracyChanged(android.hardware.Sensor, int);
public abstract void onAutoFocus(boolean, android.hardware.Camera);
public abstract boolean hasNext();
public abstract java.lang.String nextToken();
public abstract class javax.xml.validation.Validator extends java.lang.Object{
public abstract void reset();
public abstract void validate(javax.xml.transform.Source, javax.xml.transform.Result)       throws org.xml.sax.SAXException, java.io.IOException;
public abstract void setErrorHandler(org.xml.sax.ErrorHandler);
public abstract org.xml.sax.ErrorHandler getErrorHandler();
public abstract void setResourceResolver(org.w3c.dom.ls.LSResourceResolver);
public abstract org.w3c.dom.ls.LSResourceResolver getResourceResolver();
public abstract class java.nio.ShortBuffer extends java.nio.Buffer implements java.lang.Comparable{
public abstract java.nio.ShortBuffer slice();
public abstract java.nio.ShortBuffer duplicate();
public abstract java.nio.ShortBuffer asReadOnlyBuffer();
public abstract short get();
public abstract java.nio.ShortBuffer put(short);
public abstract short get(int);
public abstract java.nio.ShortBuffer put(int, short);
public abstract java.nio.ShortBuffer compact();
public abstract boolean isDirect();
public abstract java.nio.ByteOrder order();
public abstract void onParameterChange(android.media.audiofx.EnvironmentalReverb, int, int, int);
public abstract boolean equals(java.lang.Object);
public abstract java.lang.String toString();
public abstract int hashCode();
public abstract java.lang.String getName();
public abstract java.lang.String getAlgorithm();
public abstract java.lang.String getFormat();
public abstract byte[] getEncoded();
public abstract class java.net.HttpURLConnection extends java.net.URLConnection{
public abstract void disconnect();
public abstract boolean usingProxy();
public abstract class android.content.pm.PackageManager extends java.lang.Object{
public abstract android.content.pm.PackageInfo getPackageInfo(java.lang.String, int)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract java.lang.String[] currentToCanonicalPackageNames(java.lang.String[]);
public abstract java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[]);
public abstract android.content.Intent getLaunchIntentForPackage(java.lang.String);
public abstract int[] getPackageGids(java.lang.String)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract java.util.List queryPermissionsByGroup(java.lang.String, int)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract java.util.List getAllPermissionGroups(int);
public abstract android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract java.util.List getInstalledPackages(int);
public abstract int checkPermission(java.lang.String, java.lang.String);
public abstract boolean addPermission(android.content.pm.PermissionInfo);
public abstract boolean addPermissionAsync(android.content.pm.PermissionInfo);
public abstract void removePermission(java.lang.String);
public abstract int checkSignatures(java.lang.String, java.lang.String);
public abstract int checkSignatures(int, int);
public abstract java.lang.String[] getPackagesForUid(int);
public abstract java.lang.String getNameForUid(int);
public abstract java.util.List getInstalledApplications(int);
public abstract java.lang.String[] getSystemSharedLibraryNames();
public abstract android.content.pm.FeatureInfo[] getSystemAvailableFeatures();
public abstract boolean hasSystemFeature(java.lang.String);
public abstract android.content.pm.ResolveInfo resolveActivity(android.content.Intent, int);
public abstract java.util.List queryIntentActivities(android.content.Intent, int);
public abstract java.util.List queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int);
public abstract java.util.List queryBroadcastReceivers(android.content.Intent, int);
public abstract android.content.pm.ResolveInfo resolveService(android.content.Intent, int);
public abstract java.util.List queryIntentServices(android.content.Intent, int);
public abstract android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int);
public abstract java.util.List queryContentProviders(java.lang.String, int, int);
public abstract android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract java.util.List queryInstrumentation(java.lang.String, int);
public abstract android.graphics.drawable.Drawable getDrawable(java.lang.String, int, android.content.pm.ApplicationInfo);
public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.graphics.drawable.Drawable getDefaultActivityIcon();
public abstract android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo);
public abstract android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo);
public abstract android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract java.lang.CharSequence getText(java.lang.String, int, android.content.pm.ApplicationInfo);
public abstract android.content.res.XmlResourceParser getXml(java.lang.String, int, android.content.pm.ApplicationInfo);
public abstract java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo);
public abstract android.content.res.Resources getResourcesForActivity(android.content.ComponentName)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract android.content.res.Resources getResourcesForApplication(java.lang.String)       throws android.content.pm.PackageManager$NameNotFoundException;
public abstract java.lang.String getInstallerPackageName(java.lang.String);
public abstract void addPackageToPreferred(java.lang.String);
public abstract void removePackageFromPreferred(java.lang.String);
public abstract java.util.List getPreferredPackages(int);
public abstract void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName);
public abstract void clearPackagePreferredActivities(java.lang.String);
public abstract int getPreferredActivities(java.util.List, java.util.List, java.lang.String);
public abstract void setComponentEnabledSetting(android.content.ComponentName, int, int);
public abstract int getComponentEnabledSetting(android.content.ComponentName);
public abstract void setApplicationEnabledSetting(java.lang.String, int, int);
public abstract int getApplicationEnabledSetting(java.lang.String);
public abstract boolean isSafeMode();
public abstract java.lang.reflect.Type[] getUpperBounds();
public abstract java.lang.reflect.Type[] getLowerBounds();
public abstract class java.io.Reader extends java.lang.Object implements java.lang.Readable,java.io.Closeable{
public abstract int read(char[], int, int)       throws java.io.IOException;
public abstract void close()       throws java.io.IOException;
public abstract class java.security.cert.X509CRLEntry extends java.lang.Object implements java.security.cert.X509Extension{
public abstract byte[] getEncoded()       throws java.security.cert.CRLException;
public abstract java.math.BigInteger getSerialNumber();
public abstract java.util.Date getRevocationDate();
public abstract boolean hasExtensions();
public abstract java.lang.String toString();
public abstract class java.util.EnumSet extends java.util.AbstractSet implements java.lang.Cloneable,java.io.Serializable{
abstract void addAll();
abstract void addRange(java.lang.Enum, java.lang.Enum);
abstract void complement();
public abstract org.w3c.dom.ls.LSInput resolveResource(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
public abstract boolean isDeclared(int);
public abstract boolean isDeclared(java.lang.String);
public abstract boolean isDeclared(java.lang.String, java.lang.String);
public abstract boolean isSpecified(int);
public abstract boolean isSpecified(java.lang.String, java.lang.String);
public abstract boolean isSpecified(java.lang.String);
public abstract void onProgressChanged(android.widget.SeekBar, int, boolean);
public abstract void onStartTrackingTouch(android.widget.SeekBar);
public abstract void onStopTrackingTouch(android.widget.SeekBar);
public abstract java.lang.String getMethod();
public abstract org.apache.http.ProtocolVersion getProtocolVersion();
public abstract java.lang.String getUri();
public abstract class java.util.prefs.AbstractPreferences extends java.util.prefs.Preferences{
protected abstract void putSpi(java.lang.String, java.lang.String);
protected abstract java.lang.String getSpi(java.lang.String);
protected abstract void removeSpi(java.lang.String);
protected abstract void removeNodeSpi()       throws java.util.prefs.BackingStoreException;
protected abstract java.lang.String[] keysSpi()       throws java.util.prefs.BackingStoreException;
protected abstract java.lang.String[] childrenNamesSpi()       throws java.util.prefs.BackingStoreException;
protected abstract java.util.prefs.AbstractPreferences childSpi(java.lang.String);
protected abstract void syncSpi()       throws java.util.prefs.BackingStoreException;
protected abstract void flushSpi()       throws java.util.prefs.BackingStoreException;
public abstract java.security.Principal getGuarantor();
public abstract java.security.Principal getPrincipal();
public abstract java.security.PublicKey getPublicKey();
public abstract void encode(java.io.OutputStream)       throws java.security.KeyException, java.io.IOException;
public abstract void decode(java.io.InputStream)       throws java.security.KeyException, java.io.IOException;
public abstract java.lang.String getFormat();
public abstract java.lang.String toString(boolean);
public abstract android.view.Display getDefaultDisplay();
public abstract void removeViewImmediate(android.view.View);
public abstract java.lang.Appendable append(java.lang.CharSequence)       throws java.io.IOException;
public abstract java.lang.Appendable append(java.lang.CharSequence, int, int)       throws java.io.IOException;
public abstract java.lang.Appendable append(char)       throws java.io.IOException;
public abstract boolean onChildClick(android.widget.ExpandableListView, android.view.View, int, int, long);
public abstract java.lang.Object getUserToken(org.apache.http.protocol.HttpContext);
public abstract class java.net.URLStreamHandler extends java.lang.Object{
protected abstract java.net.URLConnection openConnection(java.net.URL)       throws java.io.IOException;
public abstract org.apache.http.StatusLine getStatusLine();
public abstract void setStatusLine(org.apache.http.StatusLine);
public abstract void setStatusLine(org.apache.http.ProtocolVersion, int);
public abstract void setStatusLine(org.apache.http.ProtocolVersion, int, java.lang.String);
public abstract void setStatusCode(int)       throws java.lang.IllegalStateException;
public abstract void setReasonPhrase(java.lang.String)       throws java.lang.IllegalStateException;
public abstract org.apache.http.HttpEntity getEntity();
public abstract void setEntity(org.apache.http.HttpEntity);
public abstract java.util.Locale getLocale();
public abstract void setLocale(java.util.Locale);
public abstract org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)       throws org.apache.http.HttpException;
abstract class android.text.SpannableStringInternal extends java.lang.Object{
public abstract boolean isPeriodic();
public abstract javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object);
public abstract void destroySurface(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface);
public abstract class android.speech.RecognitionService extends android.app.Service{
protected abstract void onStartListening(android.content.Intent, android.speech.RecognitionService$Callback);
protected abstract void onCancel(android.speech.RecognitionService$Callback);
protected abstract void onStopListening(android.speech.RecognitionService$Callback);
public abstract void rowSetChanged(javax.sql.RowSetEvent);
public abstract void rowChanged(javax.sql.RowSetEvent);
public abstract void cursorMoved(javax.sql.RowSetEvent);
public abstract boolean keepAlive(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext);
public abstract void await()       throws java.lang.InterruptedException;
public abstract void awaitUninterruptibly();
public abstract long awaitNanos(long)       throws java.lang.InterruptedException;
public abstract boolean await(long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract boolean awaitUntil(java.util.Date)       throws java.lang.InterruptedException;
public abstract void signal();
public abstract void signalAll();
public abstract java.lang.Object[] getSpans(int, int, java.lang.Class);
public abstract int getSpanStart(java.lang.Object);
public abstract int getSpanEnd(java.lang.Object);
public abstract int getSpanFlags(java.lang.Object);
public abstract int nextSpanTransition(int, int, java.lang.Class);
public abstract void onWaveFormDataCapture(android.media.audiofx.Visualizer, byte[], int);
public abstract void onFftDataCapture(android.media.audiofx.Visualizer, byte[], int);
public abstract short getSeverity();
public abstract java.lang.String getMessage();
public abstract java.lang.String getType();
public abstract java.lang.Object getRelatedException();
public abstract java.lang.Object getRelatedData();
public abstract org.w3c.dom.DOMLocator getLocation();
public abstract class android.net.Uri extends java.lang.Object implements android.os.Parcelable,java.lang.Comparable{
public abstract boolean isHierarchical();
public abstract boolean isRelative();
public abstract java.lang.String getScheme();
public abstract java.lang.String getSchemeSpecificPart();
public abstract java.lang.String getEncodedSchemeSpecificPart();
public abstract java.lang.String getAuthority();
public abstract java.lang.String getEncodedAuthority();
public abstract java.lang.String getUserInfo();
public abstract java.lang.String getEncodedUserInfo();
public abstract java.lang.String getHost();
public abstract int getPort();
public abstract java.lang.String getPath();
public abstract java.lang.String getEncodedPath();
public abstract java.lang.String getQuery();
public abstract java.lang.String getEncodedQuery();
public abstract java.lang.String getFragment();
public abstract java.lang.String getEncodedFragment();
public abstract java.util.List getPathSegments();
public abstract java.lang.String getLastPathSegment();
public abstract java.lang.String toString();
public abstract android.net.Uri$Builder buildUpon();
public abstract void add(java.net.URI, java.net.HttpCookie);
public abstract java.util.List get(java.net.URI);
public abstract java.util.List getCookies();
public abstract java.util.List getURIs();
public abstract boolean remove(java.net.URI, java.net.HttpCookie);
public abstract boolean removeAll();
public abstract boolean add(java.lang.Object);
public abstract boolean offer(java.lang.Object);
public abstract java.lang.Object remove();
public abstract java.lang.Object poll();
public abstract java.lang.Object element();
public abstract java.lang.Object peek();
public abstract class android.test.ProviderTestCase2 extends android.test.AndroidTestCase{
abstract class android.nfc.tech.BasicTagTechnology extends java.lang.Object implements android.nfc.tech.TagTechnology{
public abstract boolean hasNext();
public abstract java.lang.Object next();
public abstract void remove();
public abstract int getAttributeCount();
public abstract java.lang.String getAttributeName(int);
public abstract java.lang.String getAttributeValue(int);
public abstract java.lang.String getAttributeValue(java.lang.String, java.lang.String);
public abstract java.lang.String getPositionDescription();
public abstract int getAttributeNameResource(int);
public abstract int getAttributeListValue(java.lang.String, java.lang.String, java.lang.String[], int);
public abstract boolean getAttributeBooleanValue(java.lang.String, java.lang.String, boolean);
public abstract int getAttributeResourceValue(java.lang.String, java.lang.String, int);
public abstract int getAttributeIntValue(java.lang.String, java.lang.String, int);
public abstract int getAttributeUnsignedIntValue(java.lang.String, java.lang.String, int);
public abstract float getAttributeFloatValue(java.lang.String, java.lang.String, float);
public abstract int getAttributeListValue(int, java.lang.String[], int);
public abstract boolean getAttributeBooleanValue(int, boolean);
public abstract int getAttributeResourceValue(int, int);
public abstract int getAttributeIntValue(int, int);
public abstract int getAttributeUnsignedIntValue(int, int);
public abstract float getAttributeFloatValue(int, float);
public abstract java.lang.String getIdAttribute();
public abstract java.lang.String getClassAttribute();
public abstract int getIdAttributeResourceValue(int);
public abstract int getStyleAttribute();
public abstract void ellipsized(int, int);
public abstract boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay, int[], javax.microedition.khronos.egl.EGLConfig[], int, int[]);
public abstract boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, java.lang.Object);
public abstract javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, javax.microedition.khronos.egl.EGLContext, int[]);
public abstract javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int[]);
public abstract javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[]);
public abstract javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[]);
public abstract boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLContext);
public abstract boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface);
public abstract boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int, int[]);
public abstract boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig[], int, int[]);
public abstract javax.microedition.khronos.egl.EGLContext eglGetCurrentContext();
public abstract javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay();
public abstract javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int);
public abstract javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object);
public abstract int eglGetError();
public abstract boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay, int[]);
public abstract boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLContext);
public abstract boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLContext, int, int[]);
public abstract java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay, int);
public abstract boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, int, int[]);
public abstract boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface);
public abstract boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay);
public abstract boolean eglWaitGL();
public abstract boolean eglWaitNative(int, java.lang.Object);
public abstract class android.preference.PreferenceGroup extends android.preference.Preference{
public abstract class java.nio.LongBuffer extends java.nio.Buffer implements java.lang.Comparable{
public abstract java.nio.LongBuffer slice();
public abstract java.nio.LongBuffer duplicate();
public abstract java.nio.LongBuffer asReadOnlyBuffer();
public abstract long get();
public abstract java.nio.LongBuffer put(long);
public abstract long get(int);
public abstract java.nio.LongBuffer put(int, long);
public abstract java.nio.LongBuffer compact();
public abstract boolean isDirect();
public abstract java.nio.ByteOrder order();
public abstract boolean onPreDraw();
public abstract class java.text.Format extends java.lang.Object implements java.io.Serializable,java.lang.Cloneable{
public abstract java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition);
public abstract java.lang.Object parseObject(java.lang.String, java.text.ParsePosition);
public abstract boolean isDebugEnabled();
public abstract boolean isErrorEnabled();
public abstract boolean isFatalEnabled();
public abstract boolean isInfoEnabled();
public abstract boolean isTraceEnabled();
public abstract boolean isWarnEnabled();
public abstract void trace(java.lang.Object);
public abstract void trace(java.lang.Object, java.lang.Throwable);
public abstract void debug(java.lang.Object);
public abstract void debug(java.lang.Object, java.lang.Throwable);
public abstract void info(java.lang.Object);
public abstract void info(java.lang.Object, java.lang.Throwable);
public abstract void warn(java.lang.Object);
public abstract void warn(java.lang.Object, java.lang.Throwable);
public abstract void error(java.lang.Object);
public abstract void error(java.lang.Object, java.lang.Throwable);
public abstract void fatal(java.lang.Object);
public abstract void fatal(java.lang.Object, java.lang.Throwable);
public abstract org.apache.http.RequestLine getRequestLine();
public abstract void setDocumentLocator(org.xml.sax.Locator);
public abstract void startDocument()       throws org.xml.sax.SAXException;
public abstract void endDocument()       throws org.xml.sax.SAXException;
public abstract void startPrefixMapping(java.lang.String, java.lang.String)       throws org.xml.sax.SAXException;
public abstract void endPrefixMapping(java.lang.String)       throws org.xml.sax.SAXException;
public abstract void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)       throws org.xml.sax.SAXException;
public abstract void endElement(java.lang.String, java.lang.String, java.lang.String)       throws org.xml.sax.SAXException;
public abstract void characters(char[], int, int)       throws org.xml.sax.SAXException;
public abstract void ignorableWhitespace(char[], int, int)       throws org.xml.sax.SAXException;
public abstract void processingInstruction(java.lang.String, java.lang.String)       throws org.xml.sax.SAXException;
public abstract void skippedEntity(java.lang.String)       throws org.xml.sax.SAXException;
public abstract class android.content.BroadcastReceiver extends java.lang.Object{
public abstract void onReceive(android.content.Context, android.content.Intent);
public abstract class android.text.LoginFilter extends java.lang.Object implements android.text.InputFilter{
public abstract boolean isAllowed(char);
public abstract java.lang.Object clone();
public abstract boolean setViewValue(android.view.View, android.database.Cursor, int);
public abstract java.net.DatagramSocketImpl createDatagramSocketImpl();
public abstract void setValue(java.lang.String);
public abstract void setComment(java.lang.String);
public abstract void setExpiryDate(java.util.Date);
public abstract void setDomain(java.lang.String);
public abstract void setPath(java.lang.String);
public abstract void setSecure(boolean);
public abstract void setVersion(int);
public abstract java.util.SortedMap properties();
public abstract void unpack(java.io.InputStream, java.util.jar.JarOutputStream)       throws java.io.IOException;
public abstract void unpack(java.io.File, java.util.jar.JarOutputStream)       throws java.io.IOException;
public abstract void addPropertyChangeListener(java.beans.PropertyChangeListener);
public abstract void removePropertyChangeListener(java.beans.PropertyChangeListener);
public abstract class org.apache.http.params.HttpAbstractParamBean extends java.lang.Object{
public abstract class org.apache.http.impl.io.AbstractMessageWriter extends java.lang.Object implements org.apache.http.io.HttpMessageWriter{
protected abstract void writeHeadLine(org.apache.http.HttpMessage)       throws java.io.IOException;
public abstract void onPictureTaken(byte[], android.hardware.Camera);
public abstract void propertyChange(java.beans.PropertyChangeEvent);
public abstract android.view.MenuItem add(java.lang.CharSequence);
public abstract android.view.MenuItem add(int);
public abstract android.view.MenuItem add(int, int, int, java.lang.CharSequence);
public abstract android.view.MenuItem add(int, int, int, int);
public abstract android.view.SubMenu addSubMenu(java.lang.CharSequence);
public abstract android.view.SubMenu addSubMenu(int);
public abstract android.view.SubMenu addSubMenu(int, int, int, java.lang.CharSequence);
public abstract android.view.SubMenu addSubMenu(int, int, int, int);
public abstract int addIntentOptions(int, int, int, android.content.ComponentName, android.content.Intent[], android.content.Intent, int, android.view.MenuItem[]);
public abstract void removeItem(int);
public abstract void removeGroup(int);
public abstract void clear();
public abstract void setGroupCheckable(int, boolean, boolean);
public abstract void setGroupVisible(int, boolean);
public abstract void setGroupEnabled(int, boolean);
public abstract boolean hasVisibleItems();
public abstract android.view.MenuItem findItem(int);
public abstract int size();
public abstract android.view.MenuItem getItem(int);
public abstract void close();
public abstract boolean performShortcut(int, android.view.KeyEvent, int);
public abstract boolean isShortcutKey(int, android.view.KeyEvent);
public abstract boolean performIdentifierAction(int, int);
public abstract void setQwertyMode(boolean);
public abstract void onGpsStatusChanged(int);
public abstract class javax.crypto.ExemptionMechanismSpi extends java.lang.Object{
protected abstract int engineGetOutputSize(int);
protected abstract void engineInit(java.security.Key)       throws java.security.InvalidKeyException, javax.crypto.ExemptionMechanismException;
protected abstract void engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec)       throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException, javax.crypto.ExemptionMechanismException;
protected abstract void engineInit(java.security.Key, java.security.AlgorithmParameters)       throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException, javax.crypto.ExemptionMechanismException;
protected abstract byte[] engineGenExemptionBlob()       throws javax.crypto.ExemptionMechanismException;
protected abstract int engineGenExemptionBlob(byte[], int)       throws javax.crypto.ShortBufferException, javax.crypto.ExemptionMechanismException;
public abstract void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext)       throws org.apache.http.HttpException, java.io.IOException;
public abstract java.lang.Object evaluate(java.lang.Object, javax.xml.namespace.QName)       throws javax.xml.xpath.XPathExpressionException;
public abstract java.lang.String evaluate(java.lang.Object)       throws javax.xml.xpath.XPathExpressionException;
public abstract java.lang.Object evaluate(org.xml.sax.InputSource, javax.xml.namespace.QName)       throws javax.xml.xpath.XPathExpressionException;
public abstract java.lang.String evaluate(org.xml.sax.InputSource)       throws javax.xml.xpath.XPathExpressionException;
public abstract void onBegin();
public abstract void onCommit();
public abstract void onRollback();
public abstract void onCancel(android.content.DialogInterface);
public abstract int getRunStart();
public abstract int getRunStart(java.text.AttributedCharacterIterator$Attribute);
public abstract int getRunStart(java.util.Set);
public abstract int getRunLimit();
public abstract int getRunLimit(java.text.AttributedCharacterIterator$Attribute);
public abstract int getRunLimit(java.util.Set);
public abstract java.util.Map getAttributes();
public abstract java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute);
public abstract java.util.Set getAllAttributeKeys();
public abstract class java.io.ObjectInputStream$GetField extends java.lang.Object{
public abstract java.io.ObjectStreamClass getObjectStreamClass();
public abstract boolean defaulted(java.lang.String)       throws java.io.IOException;
public abstract boolean get(java.lang.String, boolean)       throws java.io.IOException;
public abstract byte get(java.lang.String, byte)       throws java.io.IOException;
public abstract char get(java.lang.String, char)       throws java.io.IOException;
public abstract short get(java.lang.String, short)       throws java.io.IOException;
public abstract int get(java.lang.String, int)       throws java.io.IOException;
public abstract long get(java.lang.String, long)       throws java.io.IOException;
public abstract float get(java.lang.String, float)       throws java.io.IOException;
public abstract double get(java.lang.String, double)       throws java.io.IOException;
public abstract java.lang.Object get(java.lang.String, java.lang.Object)       throws java.io.IOException;
public abstract void reset();
public abstract void close();
public abstract java.lang.String getMethod();
public abstract java.net.URI getURI();
public abstract void abort()       throws java.lang.UnsupportedOperationException;
public abstract boolean isAborted();
public abstract boolean equals(java.lang.Object);
public abstract java.lang.String toString();
public abstract boolean shouldAccept(java.net.URI, java.net.HttpCookie);
public abstract void checkGuard(java.lang.Object)       throws java.lang.SecurityException;
public abstract class javax.xml.transform.Transformer extends java.lang.Object{
public abstract void transform(javax.xml.transform.Source, javax.xml.transform.Result)       throws javax.xml.transform.TransformerException;
public abstract void setParameter(java.lang.String, java.lang.Object);
public abstract java.lang.Object getParameter(java.lang.String);
public abstract void clearParameters();
public abstract void setURIResolver(javax.xml.transform.URIResolver);
public abstract javax.xml.transform.URIResolver getURIResolver();
public abstract void setOutputProperties(java.util.Properties);
public abstract java.util.Properties getOutputProperties();
public abstract void setOutputProperty(java.lang.String, java.lang.String)       throws java.lang.IllegalArgumentException;
public abstract java.lang.String getOutputProperty(java.lang.String)       throws java.lang.IllegalArgumentException;
public abstract void setErrorListener(javax.xml.transform.ErrorListener)       throws java.lang.IllegalArgumentException;
public abstract javax.xml.transform.ErrorListener getErrorListener();
public abstract void setCredentials(org.apache.http.auth.AuthScope, org.apache.http.auth.Credentials);
public abstract org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope);
public abstract void clear();
public abstract void setName(java.security.Principal, java.lang.String)       throws java.security.acl.NotOwnerException;
public abstract java.lang.String getName();
public abstract boolean addEntry(java.security.Principal, java.security.acl.AclEntry)       throws java.security.acl.NotOwnerException;
public abstract boolean removeEntry(java.security.Principal, java.security.acl.AclEntry)       throws java.security.acl.NotOwnerException;
public abstract java.util.Enumeration getPermissions(java.security.Principal);
public abstract java.util.Enumeration entries();
public abstract boolean checkPermission(java.security.Principal, java.security.acl.Permission);
public abstract java.lang.String toString();
public abstract void run();
public abstract class javax.xml.parsers.SAXParser extends java.lang.Object{
public abstract org.xml.sax.Parser getParser()       throws org.xml.sax.SAXException;
public abstract org.xml.sax.XMLReader getXMLReader()       throws org.xml.sax.SAXException;
public abstract boolean isNamespaceAware();
public abstract boolean isValidating();
public abstract void setProperty(java.lang.String, java.lang.Object)       throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;
public abstract java.lang.Object getProperty(java.lang.String)       throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;
public abstract class java.util.AbstractSet extends java.util.AbstractCollection implements java.util.Set{
public abstract class javax.crypto.KeyGeneratorSpi extends java.lang.Object{
protected abstract void engineInit(java.security.SecureRandom);
protected abstract void engineInit(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)       throws java.security.InvalidAlgorithmParameterException;
protected abstract void engineInit(int, java.security.SecureRandom);
protected abstract javax.crypto.SecretKey engineGenerateKey();
public abstract void setColumnCount(int)       throws java.sql.SQLException;
public abstract void setAutoIncrement(int, boolean)       throws java.sql.SQLException;
public abstract void setCaseSensitive(int, boolean)       throws java.sql.SQLException;
public abstract void setSearchable(int, boolean)       throws java.sql.SQLException;
public abstract void setCurrency(int, boolean)       throws java.sql.SQLException;
public abstract void setNullable(int, int)       throws java.sql.SQLException;
public abstract void setSigned(int, boolean)       throws java.sql.SQLException;
public abstract void setColumnDisplaySize(int, int)       throws java.sql.SQLException;
public abstract void setColumnLabel(int, java.lang.String)       throws java.sql.SQLException;
public abstract void setColumnName(int, java.lang.String)       throws java.sql.SQLException;
public abstract void setSchemaName(int, java.lang.String)       throws java.sql.SQLException;
public abstract void setPrecision(int, int)       throws java.sql.SQLException;
public abstract void setScale(int, int)       throws java.sql.SQLException;
public abstract void setTableName(int, java.lang.String)       throws java.sql.SQLException;
public abstract void setCatalogName(int, java.lang.String)       throws java.sql.SQLException;
public abstract void setColumnType(int, int)       throws java.sql.SQLException;
public abstract void setColumnTypeName(int, java.lang.String)       throws java.sql.SQLException;
public abstract java.math.BigInteger getX();
public abstract java.lang.Object run();
public abstract org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams);
public abstract boolean queueIdle();
public abstract boolean onDown(android.view.MotionEvent);
public abstract void onShowPress(android.view.MotionEvent);
public abstract boolean onSingleTapUp(android.view.MotionEvent);
public abstract boolean onScroll(android.view.MotionEvent, android.view.MotionEvent, float, float);
public abstract void onLongPress(android.view.MotionEvent);
public abstract boolean onFling(android.view.MotionEvent, android.view.MotionEvent, float, float);
public abstract class android.test.ActivityInstrumentationTestCase2 extends android.test.ActivityTestCase{
public abstract class java.nio.IntBuffer extends java.nio.Buffer implements java.lang.Comparable{
public abstract java.nio.IntBuffer slice();
public abstract java.nio.IntBuffer duplicate();
public abstract java.nio.IntBuffer asReadOnlyBuffer();
public abstract int get();
public abstract java.nio.IntBuffer put(int);
public abstract int get(int);
public abstract java.nio.IntBuffer put(int, int);
public abstract java.nio.IntBuffer compact();
public abstract boolean isDirect();
public abstract java.nio.ByteOrder order();
public abstract void close();
public abstract boolean cancel(boolean);
public abstract boolean isCancelled();
public abstract boolean isDone();
public abstract java.lang.Object getResult()       throws android.accounts.OperationCanceledException, java.io.IOException, android.accounts.AuthenticatorException;
public abstract java.lang.Object getResult(long, java.util.concurrent.TimeUnit)       throws android.accounts.OperationCanceledException, java.io.IOException, android.accounts.AuthenticatorException;
public abstract class java.nio.Buffer extends java.lang.Object{
public abstract boolean isReadOnly();
public abstract boolean hasArray();
public abstract java.lang.Object array();
public abstract int arrayOffset();
public abstract boolean isDirect();
public abstract int getParameterCount()       throws java.sql.SQLException;
public abstract int isNullable(int)       throws java.sql.SQLException;
public abstract boolean isSigned(int)       throws java.sql.SQLException;
public abstract int getPrecision(int)       throws java.sql.SQLException;
public abstract int getScale(int)       throws java.sql.SQLException;
public abstract int getParameterType(int)       throws java.sql.SQLException;
public abstract java.lang.String getParameterTypeName(int)       throws java.sql.SQLException;
public abstract java.lang.String getParameterClassName(int)       throws java.sql.SQLException;
public abstract int getParameterMode(int)       throws java.sql.SQLException;
public abstract int getTabStop();
public abstract class javax.crypto.SecretKeyFactorySpi extends java.lang.Object{
protected abstract javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)       throws java.security.spec.InvalidKeySpecException;
protected abstract java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey, java.lang.Class)       throws java.security.spec.InvalidKeySpecException;
protected abstract javax.crypto.SecretKey engineTranslateKey(javax.crypto.SecretKey)       throws java.security.InvalidKeyException;
public abstract android.view.View makeView();
public abstract void onConfigurationChanged(android.content.res.Configuration);
public abstract void onLowMemory();
public abstract boolean hasFeature(java.lang.String, java.lang.String);
public abstract org.w3c.dom.DocumentType createDocumentType(java.lang.String, java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Document createDocument(java.lang.String, java.lang.String, org.w3c.dom.DocumentType)       throws org.w3c.dom.DOMException;
public abstract java.lang.Object getFeature(java.lang.String, java.lang.String);
public abstract java.lang.String[] value();
public abstract void onTabChanged(java.lang.String);
public abstract java.lang.CharSequence filter(java.lang.CharSequence, int, int, android.text.Spanned, int, int);
public abstract class java.security.IdentityScope extends java.security.Identity{
public abstract int size();
public abstract java.security.Identity getIdentity(java.lang.String);
public abstract java.security.Identity getIdentity(java.security.PublicKey);
public abstract void addIdentity(java.security.Identity)       throws java.security.KeyManagementException;
public abstract void removeIdentity(java.security.Identity)       throws java.security.KeyManagementException;
public abstract java.util.Enumeration identities();
public abstract android.os.IBinder asBinder();
public abstract boolean onKeyDown(int, android.view.KeyEvent);
public abstract boolean onKeyLongPress(int, android.view.KeyEvent);
public abstract boolean onKeyUp(int, android.view.KeyEvent);
public abstract boolean onKeyMultiple(int, int, android.view.KeyEvent);
public abstract org.apache.http.conn.ManagedClientConnection getConnection(long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException, org.apache.http.conn.ConnectionPoolTimeoutException;
public abstract void abortRequest();
public abstract class java.nio.ByteBuffer extends java.nio.Buffer implements java.lang.Comparable{
public abstract java.nio.ByteBuffer slice();
public abstract java.nio.ByteBuffer duplicate();
public abstract java.nio.ByteBuffer asReadOnlyBuffer();
public abstract byte get();
public abstract java.nio.ByteBuffer put(byte);
public abstract byte get(int);
public abstract java.nio.ByteBuffer put(int, byte);
public abstract java.nio.ByteBuffer compact();
public abstract boolean isDirect();
abstract byte _get(int);
abstract void _put(int, byte);
public abstract char getChar();
public abstract java.nio.ByteBuffer putChar(char);
public abstract char getChar(int);
public abstract java.nio.ByteBuffer putChar(int, char);
public abstract java.nio.CharBuffer asCharBuffer();
public abstract short getShort();
public abstract java.nio.ByteBuffer putShort(short);
public abstract short getShort(int);
public abstract java.nio.ByteBuffer putShort(int, short);
public abstract java.nio.ShortBuffer asShortBuffer();
public abstract int getInt();
public abstract java.nio.ByteBuffer putInt(int);
public abstract int getInt(int);
public abstract java.nio.ByteBuffer putInt(int, int);
public abstract java.nio.IntBuffer asIntBuffer();
public abstract long getLong();
public abstract java.nio.ByteBuffer putLong(long);
public abstract long getLong(int);
public abstract java.nio.ByteBuffer putLong(int, long);
public abstract java.nio.LongBuffer asLongBuffer();
public abstract float getFloat();
public abstract java.nio.ByteBuffer putFloat(float);
public abstract float getFloat(int);
public abstract java.nio.ByteBuffer putFloat(int, float);
public abstract java.nio.FloatBuffer asFloatBuffer();
public abstract double getDouble();
public abstract java.nio.ByteBuffer putDouble(double);
public abstract double getDouble(int);
public abstract java.nio.ByteBuffer putDouble(int, double);
public abstract java.nio.DoubleBuffer asDoubleBuffer();
public abstract java.lang.String getTypeName();
public abstract java.lang.String getTypeNamespace();
public abstract boolean isDerivedFrom(java.lang.String, java.lang.String, int);
public abstract boolean onPreferenceChange(android.preference.Preference, java.lang.Object);
public abstract void addView(android.view.View, android.view.ViewGroup$LayoutParams);
public abstract void updateViewLayout(android.view.View, android.view.ViewGroup$LayoutParams);
public abstract void removeView(android.view.View);
public abstract class android.os.FileObserver extends java.lang.Object{
public abstract void onEvent(int, java.lang.String);
public abstract java.io.Writer getCharacterStream();
public abstract void setCharacterStream(java.io.Writer);
public abstract java.io.OutputStream getByteStream();
public abstract void setByteStream(java.io.OutputStream);
public abstract java.lang.String getSystemId();
public abstract void setSystemId(java.lang.String);
public abstract java.lang.String getEncoding();
public abstract void setEncoding(java.lang.String);
public abstract void start();
public abstract void stop();
public abstract boolean isRunning();
public abstract org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine)       throws org.apache.http.MethodNotSupportedException;
public abstract org.apache.http.HttpRequest newHttpRequest(java.lang.String, java.lang.String)       throws org.apache.http.MethodNotSupportedException;
public abstract int compare(java.lang.Object, java.lang.Object);
public abstract boolean equals(java.lang.Object);
public abstract class java.util.Calendar extends java.lang.Object implements java.io.Serializable,java.lang.Cloneable,java.lang.Comparable{
protected abstract void computeTime();
protected abstract void computeFields();
public abstract void add(int, int);
public abstract void roll(int, boolean);
public abstract int getMinimum(int);
public abstract int getMaximum(int);
public abstract int getGreatestMinimum(int);
public abstract int getLeastMaximum(int);
public abstract void onReadyForSpeech(android.os.Bundle);
public abstract void onBeginningOfSpeech();
public abstract void onRmsChanged(float);
public abstract void onBufferReceived(byte[]);
public abstract void onEndOfSpeech();
public abstract void onError(int);
public abstract void onResults(android.os.Bundle);
public abstract void onPartialResults(android.os.Bundle);
public abstract void onEvent(int, android.os.Bundle);
public abstract class java.util.EventListenerProxy extends java.lang.Object implements java.util.EventListener{
public abstract void write(byte[], int, int)       throws java.io.IOException;
public abstract void write(byte[])       throws java.io.IOException;
public abstract void write(int)       throws java.io.IOException;
public abstract void writeLine(java.lang.String)       throws java.io.IOException;
public abstract void writeLine(org.apache.http.util.CharArrayBuffer)       throws java.io.IOException;
public abstract void flush()       throws java.io.IOException;
public abstract org.apache.http.io.HttpTransportMetrics getMetrics();
public abstract java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
public abstract boolean remove(java.lang.Object, java.lang.Object);
public abstract boolean replace(java.lang.Object, java.lang.Object, java.lang.Object);
public abstract java.lang.Object replace(java.lang.Object, java.lang.Object);
public abstract boolean hasNext();
public abstract org.apache.http.HeaderElement nextElement();
public abstract void onClick(android.content.DialogInterface, int);
public abstract void onReceiveValue(java.lang.Object);
public abstract class java.net.CookieHandler extends java.lang.Object{
public abstract java.util.Map get(java.net.URI, java.util.Map)       throws java.io.IOException;
public abstract void put(java.net.URI, java.util.Map)       throws java.io.IOException;
public abstract java.lang.String getName();
public abstract java.lang.String getValue();
public abstract org.apache.http.NameValuePair[] getParameters();
public abstract org.apache.http.NameValuePair getParameterByName(java.lang.String);
public abstract int getParameterCount();
public abstract org.apache.http.NameValuePair getParameter(int);
public abstract void uncaughtException(java.lang.Thread, java.lang.Throwable);
public abstract class android.os.AsyncTask extends java.lang.Object{
protected abstract java.lang.Object doInBackground(java.lang.Object[]);
public abstract class java.lang.Process extends java.lang.Object{
public abstract java.io.OutputStream getOutputStream();
public abstract java.io.InputStream getInputStream();
public abstract java.io.InputStream getErrorStream();
public abstract int waitFor()       throws java.lang.InterruptedException;
public abstract int exitValue();
public abstract void destroy();
public abstract java.lang.Object call()       throws java.lang.Exception;
public abstract void setParent(org.xml.sax.XMLReader);
public abstract org.xml.sax.XMLReader getParent();
public abstract void free()       throws java.sql.SQLException;
public abstract java.io.InputStream getBinaryStream()       throws java.sql.SQLException;
public abstract java.io.OutputStream setBinaryStream()       throws java.sql.SQLException;
public abstract java.io.Reader getCharacterStream()       throws java.sql.SQLException;
public abstract java.io.Writer setCharacterStream()       throws java.sql.SQLException;
public abstract java.lang.String getString()       throws java.sql.SQLException;
public abstract void setString(java.lang.String)       throws java.sql.SQLException;
public abstract javax.xml.transform.Source getSource(java.lang.Class)       throws java.sql.SQLException;
public abstract javax.xml.transform.Result setResult(java.lang.Class)       throws java.sql.SQLException;
public abstract class java.io.ObjectOutputStream$PutField extends java.lang.Object{
public abstract void put(java.lang.String, boolean);
public abstract void put(java.lang.String, byte);
public abstract void put(java.lang.String, char);
public abstract void put(java.lang.String, short);
public abstract void put(java.lang.String, int);
public abstract void put(java.lang.String, long);
public abstract void put(java.lang.String, float);
public abstract void put(java.lang.String, double);
public abstract void put(java.lang.String, java.lang.Object);
public abstract void write(java.io.ObjectOutput)       throws java.io.IOException;
public abstract class java.util.AbstractMap extends java.lang.Object implements java.util.Map{
public abstract java.util.Set entrySet();
public abstract boolean isValid(java.lang.CharSequence);
public abstract java.lang.CharSequence fixText(java.lang.CharSequence);
public abstract class android.preference.DialogPreference extends android.preference.Preference implements android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnDismissListener,android.preference.PreferenceManager$OnActivityDestroyListener{
public abstract boolean hasNext();
public abstract org.apache.http.Header nextHeader();
public abstract java.lang.Object evaluate(java.util.List)       throws javax.xml.xpath.XPathFunctionException;
public abstract boolean isAuthenticationRequested(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext);
public abstract java.util.Map getChallenges(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)       throws org.apache.http.auth.MalformedChallengeException;
public abstract org.apache.http.auth.AuthScheme selectScheme(java.util.Map, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)       throws org.apache.http.auth.AuthenticationException;
public abstract void onPrepared(android.media.MediaPlayer);
public abstract java.lang.String getReason(int, java.util.Locale);
public abstract class java.text.CollationKey extends java.lang.Object implements java.lang.Comparable{
public abstract int compareTo(java.text.CollationKey);
public abstract byte[] toByteArray();
public abstract class android.view.Window extends java.lang.Object{
public abstract void takeSurface(android.view.SurfaceHolder$Callback2);
public abstract void takeInputQueue(android.view.InputQueue$Callback);
public abstract boolean isFloating();
public abstract void setContentView(int);
public abstract void setContentView(android.view.View);
public abstract void setContentView(android.view.View, android.view.ViewGroup$LayoutParams);
public abstract void addContentView(android.view.View, android.view.ViewGroup$LayoutParams);
public abstract android.view.View getCurrentFocus();
public abstract android.view.LayoutInflater getLayoutInflater();
public abstract void setTitle(java.lang.CharSequence);
public abstract void setTitleColor(int);
public abstract void openPanel(int, android.view.KeyEvent);
public abstract void closePanel(int);
public abstract void togglePanel(int, android.view.KeyEvent);
public abstract boolean performPanelShortcut(int, int, android.view.KeyEvent, int);
public abstract boolean performPanelIdentifierAction(int, int, int);
public abstract void closeAllPanels();
public abstract boolean performContextMenuIdentifierAction(int, int);
public abstract void onConfigurationChanged(android.content.res.Configuration);
public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable);
public abstract void setFeatureDrawableResource(int, int);
public abstract void setFeatureDrawableUri(int, android.net.Uri);
public abstract void setFeatureDrawable(int, android.graphics.drawable.Drawable);
public abstract void setFeatureDrawableAlpha(int, int);
public abstract void setFeatureInt(int, int);
public abstract void takeKeyEvents(boolean);
public abstract boolean superDispatchKeyEvent(android.view.KeyEvent);
public abstract boolean superDispatchTouchEvent(android.view.MotionEvent);
public abstract boolean superDispatchTrackballEvent(android.view.MotionEvent);
public abstract android.view.View getDecorView();
public abstract android.view.View peekDecorView();
public abstract android.os.Bundle saveHierarchyState();
public abstract void restoreHierarchyState(android.os.Bundle);
protected abstract void onActive();
public abstract void setChildDrawable(int, android.graphics.drawable.Drawable);
public abstract void setChildInt(int, int);
public abstract boolean isShortcutKey(int, android.view.KeyEvent);
public abstract void setVolumeControlStream(int);
public abstract int getVolumeControlStream();
public abstract java.lang.CharSequence getTextBeforeCursor(int, int);
public abstract java.lang.CharSequence getTextAfterCursor(int, int);
public abstract java.lang.CharSequence getSelectedText(int);
public abstract int getCursorCapsMode(int);
public abstract android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest, int);
public abstract boolean deleteSurroundingText(int, int);
public abstract boolean setComposingText(java.lang.CharSequence, int);
public abstract boolean setComposingRegion(int, int);
public abstract boolean finishComposingText();
public abstract boolean commitText(java.lang.CharSequence, int);
public abstract boolean commitCompletion(android.view.inputmethod.CompletionInfo);
public abstract boolean setSelection(int, int);
public abstract boolean performEditorAction(int);
public abstract boolean performContextMenuAction(int);
public abstract boolean beginBatchEdit();
public abstract boolean endBatchEdit();
public abstract boolean sendKeyEvent(android.view.KeyEvent);
public abstract boolean clearMetaKeyStates(int);
public abstract boolean reportFullscreenMode(boolean);
public abstract boolean performPrivateCommand(java.lang.String, android.os.Bundle);
public abstract void onGesturingStarted(android.gesture.GestureOverlayView);
public abstract void onGesturingEnded(android.gesture.GestureOverlayView);
public abstract class java.net.URLConnection extends java.lang.Object{
public abstract void connect()       throws java.io.IOException;
public abstract int getVersion();
public abstract java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin)       throws org.apache.http.cookie.MalformedCookieException;
public abstract void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)       throws org.apache.http.cookie.MalformedCookieException;
public abstract boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin);
public abstract java.util.List formatCookies(java.util.List);
public abstract org.apache.http.Header getVersionHeader();
public abstract int getItemId();
public abstract int getGroupId();
public abstract int getOrder();
public abstract android.view.MenuItem setTitle(java.lang.CharSequence);
public abstract android.view.MenuItem setTitle(int);
public abstract java.lang.CharSequence getTitle();
public abstract android.view.MenuItem setTitleCondensed(java.lang.CharSequence);
public abstract java.lang.CharSequence getTitleCondensed();
public abstract android.view.MenuItem setIcon(android.graphics.drawable.Drawable);
public abstract android.view.MenuItem setIcon(int);
public abstract android.graphics.drawable.Drawable getIcon();
public abstract android.view.MenuItem setIntent(android.content.Intent);
public abstract android.content.Intent getIntent();
public abstract android.view.MenuItem setShortcut(char, char);
public abstract android.view.MenuItem setNumericShortcut(char);
public abstract char getNumericShortcut();
public abstract android.view.MenuItem setAlphabeticShortcut(char);
public abstract char getAlphabeticShortcut();
public abstract android.view.MenuItem setCheckable(boolean);
public abstract boolean isCheckable();
public abstract android.view.MenuItem setChecked(boolean);
public abstract boolean isChecked();
public abstract android.view.MenuItem setVisible(boolean);
public abstract boolean isVisible();
public abstract android.view.MenuItem setEnabled(boolean);
public abstract boolean isEnabled();
public abstract boolean hasSubMenu();
public abstract android.view.SubMenu getSubMenu();
public abstract android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener);
public abstract android.view.ContextMenu$ContextMenuInfo getMenuInfo();
public abstract class org.apache.http.impl.AbstractHttpClientConnection extends java.lang.Object implements org.apache.http.HttpClientConnection{
protected abstract void assertOpen()       throws java.lang.IllegalStateException;
public abstract int getColumnCount()       throws java.sql.SQLException;
public abstract boolean isAutoIncrement(int)       throws java.sql.SQLException;
public abstract boolean isCaseSensitive(int)       throws java.sql.SQLException;
public abstract boolean isSearchable(int)       throws java.sql.SQLException;
public abstract boolean isCurrency(int)       throws java.sql.SQLException;
public abstract int isNullable(int)       throws java.sql.SQLException;
public abstract boolean isSigned(int)       throws java.sql.SQLException;
public abstract int getColumnDisplaySize(int)       throws java.sql.SQLException;
public abstract java.lang.String getColumnLabel(int)       throws java.sql.SQLException;
public abstract java.lang.String getColumnName(int)       throws java.sql.SQLException;
public abstract java.lang.String getSchemaName(int)       throws java.sql.SQLException;
public abstract int getPrecision(int)       throws java.sql.SQLException;
public abstract int getScale(int)       throws java.sql.SQLException;
public abstract java.lang.String getTableName(int)       throws java.sql.SQLException;
public abstract java.lang.String getCatalogName(int)       throws java.sql.SQLException;
public abstract int getColumnType(int)       throws java.sql.SQLException;
public abstract java.lang.String getColumnTypeName(int)       throws java.sql.SQLException;
public abstract boolean isReadOnly(int)       throws java.sql.SQLException;
public abstract boolean isWritable(int)       throws java.sql.SQLException;
public abstract boolean isDefinitelyWritable(int)       throws java.sql.SQLException;
public abstract java.lang.String getColumnClassName(int)       throws java.sql.SQLException;
public abstract class android.view.animation.Animation extends java.lang.Object implements java.lang.Cloneable{
public abstract class javax.microedition.khronos.egl.EGLConfig extends java.lang.Object{
public abstract class android.app.backup.BackupAgent extends android.content.ContextWrapper{
public abstract void onBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)       throws java.io.IOException;
public abstract void onRestore(android.app.backup.BackupDataInput, int, android.os.ParcelFileDescriptor)       throws java.io.IOException;
public abstract class android.widget.CursorTreeAdapter extends android.widget.BaseExpandableListAdapter implements android.widget.Filterable{
protected abstract android.database.Cursor getChildrenCursor(android.database.Cursor);
protected abstract android.view.View newGroupView(android.content.Context, android.database.Cursor, boolean, android.view.ViewGroup);
protected abstract void bindGroupView(android.view.View, android.content.Context, android.database.Cursor, boolean);
protected abstract android.view.View newChildView(android.content.Context, android.database.Cursor, boolean, android.view.ViewGroup);
protected abstract void bindChildView(android.view.View, android.content.Context, android.database.Cursor, boolean);
public abstract java.lang.Object readObject()       throws java.lang.ClassNotFoundException, java.io.IOException;
public abstract int read()       throws java.io.IOException;
public abstract int read(byte[])       throws java.io.IOException;
public abstract int read(byte[], int, int)       throws java.io.IOException;
public abstract long skip(long)       throws java.io.IOException;
public abstract int available()       throws java.io.IOException;
public abstract void close()       throws java.io.IOException;
public abstract void onMarkerReached(android.media.AudioRecord);
public abstract void onPeriodicNotification(android.media.AudioRecord);
public abstract class java.text.BreakIterator extends java.lang.Object implements java.lang.Cloneable{
public abstract int first();
public abstract int last();
public abstract int next(int);
public abstract int next();
public abstract int previous();
public abstract int following(int);
public abstract int current();
public abstract java.text.CharacterIterator getText();
public abstract void setText(java.text.CharacterIterator);
public abstract android.text.Editable replace(int, int, java.lang.CharSequence, int, int);
public abstract android.text.Editable replace(int, int, java.lang.CharSequence);
public abstract android.text.Editable insert(int, java.lang.CharSequence, int, int);
public abstract android.text.Editable insert(int, java.lang.CharSequence);
public abstract android.text.Editable delete(int, int);
public abstract android.text.Editable append(java.lang.CharSequence);
public abstract android.text.Editable append(java.lang.CharSequence, int, int);
public abstract android.text.Editable append(char);
public abstract void clear();
public abstract void clearSpans();
public abstract void setFilters(android.text.InputFilter[]);
public abstract android.text.InputFilter[] getFilters();
public abstract java.lang.Object lower(java.lang.Object);
public abstract java.lang.Object floor(java.lang.Object);
public abstract java.lang.Object ceiling(java.lang.Object);
public abstract java.lang.Object higher(java.lang.Object);
public abstract java.lang.Object pollFirst();
public abstract java.lang.Object pollLast();
public abstract java.util.Iterator iterator();
public abstract java.util.NavigableSet descendingSet();
public abstract java.util.Iterator descendingIterator();
public abstract java.util.NavigableSet subSet(java.lang.Object, boolean, java.lang.Object, boolean);
public abstract java.util.NavigableSet headSet(java.lang.Object, boolean);
public abstract java.util.NavigableSet tailSet(java.lang.Object, boolean);
public abstract java.util.SortedSet subSet(java.lang.Object, java.lang.Object);
public abstract java.util.SortedSet headSet(java.lang.Object);
public abstract java.util.SortedSet tailSet(java.lang.Object);
public abstract void onActivityDestroy();
public abstract java.lang.Class load(java.lang.String)       throws java.lang.ClassNotFoundException;
public abstract java.lang.Class reload(java.lang.Class)       throws java.lang.ClassNotFoundException;
public abstract void addFirst(java.lang.Object);
public abstract void addLast(java.lang.Object);
public abstract boolean offerFirst(java.lang.Object);
public abstract boolean offerLast(java.lang.Object);
public abstract void putFirst(java.lang.Object)       throws java.lang.InterruptedException;
public abstract void putLast(java.lang.Object)       throws java.lang.InterruptedException;
public abstract boolean offerFirst(java.lang.Object, long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract boolean offerLast(java.lang.Object, long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract java.lang.Object takeFirst()       throws java.lang.InterruptedException;
public abstract java.lang.Object takeLast()       throws java.lang.InterruptedException;
public abstract java.lang.Object pollFirst(long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract java.lang.Object pollLast(long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract boolean removeFirstOccurrence(java.lang.Object);
public abstract boolean removeLastOccurrence(java.lang.Object);
public abstract boolean add(java.lang.Object);
public abstract boolean offer(java.lang.Object);
public abstract void put(java.lang.Object)       throws java.lang.InterruptedException;
public abstract boolean offer(java.lang.Object, long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract java.lang.Object remove();
public abstract java.lang.Object poll();
public abstract java.lang.Object take()       throws java.lang.InterruptedException;
public abstract java.lang.Object poll(long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract java.lang.Object element();
public abstract java.lang.Object peek();
public abstract boolean remove(java.lang.Object);
public abstract boolean contains(java.lang.Object);
public abstract int size();
public abstract java.util.Iterator iterator();
public abstract void push(java.lang.Object);
public abstract class android.widget.AbsSpinner extends android.widget.AdapterView{
public abstract org.apache.http.HttpHost getTargetHost();
public abstract java.net.InetAddress getLocalAddress();
public abstract int getHopCount();
public abstract org.apache.http.HttpHost getHopTarget(int);
public abstract org.apache.http.HttpHost getProxyHost();
public abstract org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType();
public abstract boolean isTunnelled();
public abstract org.apache.http.conn.routing.RouteInfo$LayerType getLayerType();
public abstract boolean isLayered();
public abstract boolean isSecure();
public abstract class java.util.concurrent.atomic.AtomicIntegerFieldUpdater extends java.lang.Object{
public abstract boolean compareAndSet(java.lang.Object, int, int);
public abstract boolean weakCompareAndSet(java.lang.Object, int, int);
public abstract void set(java.lang.Object, int);
public abstract void lazySet(java.lang.Object, int);
public abstract int get(java.lang.Object);
public abstract void onParameterChange(android.media.audiofx.Equalizer, int, int, int, int);
public abstract class java.security.cert.PKIXCertPathChecker extends java.lang.Object implements java.lang.Cloneable{
public abstract void init(boolean)       throws java.security.cert.CertPathValidatorException;
public abstract boolean isForwardCheckingSupported();
public abstract java.util.Set getSupportedExtensions();
public abstract void check(java.security.cert.Certificate, java.util.Collection)       throws java.security.cert.CertPathValidatorException;
public abstract java.lang.reflect.Type[] getActualTypeArguments();
public abstract java.lang.reflect.Type getRawType();
public abstract java.lang.reflect.Type getOwnerType();
public abstract class android.inputmethodservice.AbstractInputMethodService extends android.app.Service implements android.view.KeyEvent$Callback{
public abstract android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl onCreateInputMethodInterface();
public abstract android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface();
public abstract java.lang.reflect.TypeVariable[] getTypeParameters();
public abstract class java.nio.channels.SelectionKey extends java.lang.Object{
public abstract java.nio.channels.SelectableChannel channel();
public abstract java.nio.channels.Selector selector();
public abstract boolean isValid();
public abstract void cancel();
public abstract int interestOps();
public abstract java.nio.channels.SelectionKey interestOps(int);
public abstract int readyOps();
public abstract java.net.ContentHandler createContentHandler(java.lang.String);
public abstract void glActiveTexture(int);
public abstract void glAlphaFunc(int, float);
public abstract void glAlphaFuncx(int, int);
public abstract void glBindTexture(int, int);
public abstract void glBlendFunc(int, int);
public abstract void glClear(int);
public abstract void glClearColor(float, float, float, float);
public abstract void glClearColorx(int, int, int, int);
public abstract void glClearDepthf(float);
public abstract void glClearDepthx(int);
public abstract void glClearStencil(int);
public abstract void glClientActiveTexture(int);
public abstract void glColor4f(float, float, float, float);
public abstract void glColor4x(int, int, int, int);
public abstract void glColorMask(boolean, boolean, boolean, boolean);
public abstract void glColorPointer(int, int, int, java.nio.Buffer);
public abstract void glCompressedTexImage2D(int, int, int, int, int, int, int, java.nio.Buffer);
public abstract void glCompressedTexSubImage2D(int, int, int, int, int, int, int, int, java.nio.Buffer);
public abstract void glCopyTexImage2D(int, int, int, int, int, int, int, int);
public abstract void glCopyTexSubImage2D(int, int, int, int, int, int, int, int);
public abstract void glCullFace(int);
public abstract void glDeleteTextures(int, int[], int);
public abstract void glDeleteTextures(int, java.nio.IntBuffer);
public abstract void glDepthFunc(int);
public abstract void glDepthMask(boolean);
public abstract void glDepthRangef(float, float);
public abstract void glDepthRangex(int, int);
public abstract void glDisable(int);
public abstract void glDisableClientState(int);
public abstract void glDrawArrays(int, int, int);
public abstract void glDrawElements(int, int, int, java.nio.Buffer);
public abstract void glEnable(int);
public abstract void glEnableClientState(int);
public abstract void glFinish();
public abstract void glFlush();
public abstract void glFogf(int, float);
public abstract void glFogfv(int, float[], int);
public abstract void glFogfv(int, java.nio.FloatBuffer);
public abstract void glFogx(int, int);
public abstract void glFogxv(int, int[], int);
public abstract void glFogxv(int, java.nio.IntBuffer);
public abstract void glFrontFace(int);
public abstract void glFrustumf(float, float, float, float, float, float);
public abstract void glFrustumx(int, int, int, int, int, int);
public abstract void glGenTextures(int, int[], int);
public abstract void glGenTextures(int, java.nio.IntBuffer);
public abstract int glGetError();
public abstract void glGetIntegerv(int, int[], int);
public abstract void glGetIntegerv(int, java.nio.IntBuffer);
public abstract java.lang.String glGetString(int);
public abstract void glHint(int, int);
public abstract void glLightModelf(int, float);
public abstract void glLightModelfv(int, float[], int);
public abstract void glLightModelfv(int, java.nio.FloatBuffer);
public abstract void glLightModelx(int, int);
public abstract void glLightModelxv(int, int[], int);
public abstract void glLightModelxv(int, java.nio.IntBuffer);
public abstract void glLightf(int, int, float);
public abstract void glLightfv(int, int, float[], int);
public abstract void glLightfv(int, int, java.nio.FloatBuffer);
public abstract void glLightx(int, int, int);
public abstract void glLightxv(int, int, int[], int);
public abstract void glLightxv(int, int, java.nio.IntBuffer);
public abstract void glLineWidth(float);
public abstract void glLineWidthx(int);
public abstract void glLoadIdentity();
public abstract void glLoadMatrixf(float[], int);
public abstract void glLoadMatrixf(java.nio.FloatBuffer);
public abstract void glLoadMatrixx(int[], int);
public abstract void glLoadMatrixx(java.nio.IntBuffer);
public abstract void glLogicOp(int);
public abstract void glMaterialf(int, int, float);
public abstract void glMaterialfv(int, int, float[], int);
public abstract void glMaterialfv(int, int, java.nio.FloatBuffer);
public abstract void glMaterialx(int, int, int);
public abstract void glMaterialxv(int, int, int[], int);
public abstract void glMaterialxv(int, int, java.nio.IntBuffer);
public abstract void glMatrixMode(int);
public abstract void glMultMatrixf(float[], int);
public abstract void glMultMatrixf(java.nio.FloatBuffer);
public abstract void glMultMatrixx(int[], int);
public abstract void glMultMatrixx(java.nio.IntBuffer);
public abstract void glMultiTexCoord4f(int, float, float, float, float);
public abstract void glMultiTexCoord4x(int, int, int, int, int);
public abstract void glNormal3f(float, float, float);
public abstract void glNormal3x(int, int, int);
public abstract void glNormalPointer(int, int, java.nio.Buffer);
public abstract void glOrthof(float, float, float, float, float, float);
public abstract void glOrthox(int, int, int, int, int, int);
public abstract void glPixelStorei(int, int);
public abstract void glPointSize(float);
public abstract void glPointSizex(int);
public abstract void glPolygonOffset(float, float);
public abstract void glPolygonOffsetx(int, int);
public abstract void glPopMatrix();
public abstract void glPushMatrix();
public abstract void glReadPixels(int, int, int, int, int, int, java.nio.Buffer);
public abstract void glRotatef(float, float, float, float);
public abstract void glRotatex(int, int, int, int);
public abstract void glSampleCoverage(float, boolean);
public abstract void glSampleCoveragex(int, boolean);
public abstract void glScalef(float, float, float);
public abstract void glScalex(int, int, int);
public abstract void glScissor(int, int, int, int);
public abstract void glShadeModel(int);
public abstract void glStencilFunc(int, int, int);
public abstract void glStencilMask(int);
public abstract void glStencilOp(int, int, int);
public abstract void glTexCoordPointer(int, int, int, java.nio.Buffer);
public abstract void glTexEnvf(int, int, float);
public abstract void glTexEnvfv(int, int, float[], int);
public abstract void glTexEnvfv(int, int, java.nio.FloatBuffer);
public abstract void glTexEnvx(int, int, int);
public abstract void glTexEnvxv(int, int, int[], int);
public abstract void glTexEnvxv(int, int, java.nio.IntBuffer);
public abstract void glTexImage2D(int, int, int, int, int, int, int, int, java.nio.Buffer);
public abstract void glTexParameterf(int, int, float);
public abstract void glTexParameterx(int, int, int);
public abstract void glTexSubImage2D(int, int, int, int, int, int, int, int, java.nio.Buffer);
public abstract void glTranslatef(float, float, float);
public abstract void glTranslatex(int, int, int);
public abstract void glVertexPointer(int, int, int, java.nio.Buffer);
public abstract void glViewport(int, int, int, int);
public abstract class java.util.ResourceBundle extends java.lang.Object{
protected abstract java.lang.Object handleGetObject(java.lang.String);
public abstract java.util.Enumeration getKeys();
public abstract java.sql.ResultSet executeQuery(java.lang.String)       throws java.sql.SQLException;
public abstract int executeUpdate(java.lang.String)       throws java.sql.SQLException;
public abstract void close()       throws java.sql.SQLException;
public abstract int getMaxFieldSize()       throws java.sql.SQLException;
public abstract void setMaxFieldSize(int)       throws java.sql.SQLException;
public abstract int getMaxRows()       throws java.sql.SQLException;
public abstract void setMaxRows(int)       throws java.sql.SQLException;
public abstract void setEscapeProcessing(boolean)       throws java.sql.SQLException;
public abstract int getQueryTimeout()       throws java.sql.SQLException;
public abstract void setQueryTimeout(int)       throws java.sql.SQLException;
public abstract void cancel()       throws java.sql.SQLException;
public abstract java.sql.SQLWarning getWarnings()       throws java.sql.SQLException;
public abstract void clearWarnings()       throws java.sql.SQLException;
public abstract void setCursorName(java.lang.String)       throws java.sql.SQLException;
public abstract boolean execute(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getResultSet()       throws java.sql.SQLException;
public abstract int getUpdateCount()       throws java.sql.SQLException;
public abstract boolean getMoreResults()       throws java.sql.SQLException;
public abstract void setFetchDirection(int)       throws java.sql.SQLException;
public abstract int getFetchDirection()       throws java.sql.SQLException;
public abstract void setFetchSize(int)       throws java.sql.SQLException;
public abstract int getFetchSize()       throws java.sql.SQLException;
public abstract int getResultSetConcurrency()       throws java.sql.SQLException;
public abstract int getResultSetType()       throws java.sql.SQLException;
public abstract void addBatch(java.lang.String)       throws java.sql.SQLException;
public abstract void clearBatch()       throws java.sql.SQLException;
public abstract int[] executeBatch()       throws java.sql.SQLException;
public abstract java.sql.Connection getConnection()       throws java.sql.SQLException;
public abstract boolean getMoreResults(int)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getGeneratedKeys()       throws java.sql.SQLException;
public abstract int executeUpdate(java.lang.String, int)       throws java.sql.SQLException;
public abstract int executeUpdate(java.lang.String, int[])       throws java.sql.SQLException;
public abstract int executeUpdate(java.lang.String, java.lang.String[])       throws java.sql.SQLException;
public abstract boolean execute(java.lang.String, int)       throws java.sql.SQLException;
public abstract boolean execute(java.lang.String, int[])       throws java.sql.SQLException;
public abstract boolean execute(java.lang.String, java.lang.String[])       throws java.sql.SQLException;
public abstract int getResultSetHoldability()       throws java.sql.SQLException;
public abstract boolean isClosed()       throws java.sql.SQLException;
public abstract void setPoolable(boolean)       throws java.sql.SQLException;
public abstract boolean isPoolable()       throws java.sql.SQLException;
public abstract javax.sql.PooledConnection getPooledConnection()       throws java.sql.SQLException;
public abstract javax.sql.PooledConnection getPooledConnection(java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract void onSendFinished(android.content.IntentSender, android.content.Intent, int, java.lang.String, android.os.Bundle);
public abstract void chooseHeight(java.lang.CharSequence, int, int, int, int, android.graphics.Paint$FontMetricsInt, android.text.TextPaint);
public abstract void finishInput();
public abstract void updateSelection(int, int, int, int, int, int);
public abstract void updateCursor(android.graphics.Rect);
public abstract void displayCompletions(android.view.inputmethod.CompletionInfo[]);
public abstract void updateExtractedText(int, android.view.inputmethod.ExtractedText);
public abstract void dispatchKeyEvent(int, android.view.KeyEvent, android.view.inputmethod.InputMethodSession$EventCallback);
public abstract void dispatchTrackballEvent(int, android.view.MotionEvent, android.view.inputmethod.InputMethodSession$EventCallback);
public abstract void appPrivateCommand(java.lang.String, android.os.Bundle);
public abstract void toggleSoftInput(int, int);
public abstract void onReceivedIcon(java.lang.String, android.graphics.Bitmap);
public abstract android.database.Cursor query(android.database.sqlite.SQLiteDatabase$CursorFactory, java.lang.String[]);
public abstract void cursorDeactivated();
public abstract void cursorRequeried(android.database.Cursor);
public abstract void cursorClosed();
public abstract void setBindArguments(java.lang.String[]);
public abstract void onLocationChanged(android.location.Location);
public abstract void onStatusChanged(java.lang.String, int, android.os.Bundle);
public abstract void onProviderEnabled(java.lang.String);
public abstract void onProviderDisabled(java.lang.String);
public abstract java.lang.reflect.Type[] getBounds();
public abstract java.lang.reflect.GenericDeclaration getGenericDeclaration();
public abstract java.lang.String getName();
public abstract void onInflate(android.view.ViewStub, android.view.View);
public abstract class javax.net.ssl.HttpsURLConnection extends java.net.HttpURLConnection{
public abstract java.lang.String getCipherSuite();
public abstract java.security.cert.Certificate[] getLocalCertificates();
public abstract java.security.cert.Certificate[] getServerCertificates()       throws javax.net.ssl.SSLPeerUnverifiedException;
public abstract class org.apache.http.impl.io.AbstractMessageParser extends java.lang.Object implements org.apache.http.io.HttpMessageParser{
protected abstract org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)       throws java.io.IOException, org.apache.http.HttpException, org.apache.http.ParseException;
public abstract class android.gesture.GestureLibrary extends java.lang.Object{
public abstract boolean save();
public abstract boolean load();
public abstract void readData(javax.sql.RowSetInternal)       throws java.sql.SQLException;
public abstract void onRatingChanged(android.widget.RatingBar, float, boolean);
public abstract org.apache.http.HttpMessage parse()       throws java.io.IOException, org.apache.http.HttpException;
public abstract void invalidateDrawable(android.graphics.drawable.Drawable);
public abstract void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long);
public abstract void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable);
public abstract java.util.Map$Entry lowerEntry(java.lang.Object);
public abstract java.lang.Object lowerKey(java.lang.Object);
public abstract java.util.Map$Entry floorEntry(java.lang.Object);
public abstract java.lang.Object floorKey(java.lang.Object);
public abstract java.util.Map$Entry ceilingEntry(java.lang.Object);
public abstract java.lang.Object ceilingKey(java.lang.Object);
public abstract java.util.Map$Entry higherEntry(java.lang.Object);
public abstract java.lang.Object higherKey(java.lang.Object);
public abstract java.util.Map$Entry firstEntry();
public abstract java.util.Map$Entry lastEntry();
public abstract java.util.Map$Entry pollFirstEntry();
public abstract java.util.Map$Entry pollLastEntry();
public abstract java.util.NavigableMap descendingMap();
public abstract java.util.NavigableSet navigableKeySet();
public abstract java.util.NavigableSet descendingKeySet();
public abstract java.util.NavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean);
public abstract java.util.NavigableMap headMap(java.lang.Object, boolean);
public abstract java.util.NavigableMap tailMap(java.lang.Object, boolean);
public abstract java.util.SortedMap subMap(java.lang.Object, java.lang.Object);
public abstract java.util.SortedMap headMap(java.lang.Object);
public abstract java.util.SortedMap tailMap(java.lang.Object);
public abstract java.util.prefs.Preferences systemRoot();
public abstract java.util.prefs.Preferences userRoot();
public abstract void setDocumentLocator(org.xml.sax.Locator);
public abstract void startDocument()       throws org.xml.sax.SAXException;
public abstract void endDocument()       throws org.xml.sax.SAXException;
public abstract void startElement(java.lang.String, org.xml.sax.AttributeList)       throws org.xml.sax.SAXException;
public abstract void endElement(java.lang.String)       throws org.xml.sax.SAXException;
public abstract void characters(char[], int, int)       throws org.xml.sax.SAXException;
public abstract void ignorableWhitespace(char[], int, int)       throws org.xml.sax.SAXException;
public abstract void processingInstruction(java.lang.String, java.lang.String)       throws org.xml.sax.SAXException;
public abstract void preferenceChange(java.util.prefs.PreferenceChangeEvent);
public abstract class org.apache.http.impl.client.AbstractAuthenticationHandler extends java.lang.Object implements org.apache.http.client.AuthenticationHandler{
public abstract boolean resolveId();
public abstract android.view.ViewDebug$IntToString[] mapping();
public abstract android.view.ViewDebug$IntToString[] indexMapping();
public abstract android.view.ViewDebug$FlagToString[] flagMapping();
public abstract boolean deepExport();
public abstract java.lang.String prefix();
public abstract java.lang.String category();
public abstract java.lang.String getAttribute(java.lang.String);
public abstract boolean containsAttribute(java.lang.String);
public abstract void onTimeSet(android.widget.TimePicker, int, int);
public abstract class android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl extends java.lang.Object implements android.view.inputmethod.InputMethod{
public abstract void onTouchModeChanged(boolean);
public abstract void lock();
public abstract void lockInterruptibly()       throws java.lang.InterruptedException;
public abstract boolean tryLock();
public abstract boolean tryLock(long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract void unlock();
public abstract java.util.concurrent.locks.Condition newCondition();
public abstract int size();
public abstract boolean isEmpty();
public abstract boolean contains(java.lang.Object);
public abstract java.util.Iterator iterator();
public abstract java.lang.Object[] toArray();
public abstract java.lang.Object[] toArray(java.lang.Object[]);
public abstract boolean add(java.lang.Object);
public abstract boolean remove(java.lang.Object);
public abstract boolean containsAll(java.util.Collection);
public abstract boolean addAll(java.util.Collection);
public abstract boolean retainAll(java.util.Collection);
public abstract boolean removeAll(java.util.Collection);
public abstract void clear();
public abstract boolean equals(java.lang.Object);
public abstract int hashCode();
public abstract boolean areAllItemsEnabled();
public abstract boolean isEnabled(int);
public abstract void handleReference(java.lang.ref.Reference);
public abstract void onDrawerOpened();
public abstract void start();
public abstract void pause();
public abstract int getDuration();
public abstract int getCurrentPosition();
public abstract void seekTo(int);
public abstract boolean isPlaying();
public abstract int getBufferPercentage();
public abstract boolean canPause();
public abstract boolean canSeekBackward();
public abstract boolean canSeekForward();
public abstract java.lang.Object[] getSections();
public abstract int getPositionForSection(int);
public abstract int getSectionForPosition(int);
public abstract void setFeature(java.lang.String, boolean)       throws java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract boolean getFeature(java.lang.String);
public abstract void setProperty(java.lang.String, java.lang.Object)       throws java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract java.lang.Object getProperty(java.lang.String);
public abstract void setOutput(java.io.OutputStream, java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract void setOutput(java.io.Writer)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract void startDocument(java.lang.String, java.lang.Boolean)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract void endDocument()       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract void setPrefix(java.lang.String, java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract java.lang.String getPrefix(java.lang.String, boolean)       throws java.lang.IllegalArgumentException;
public abstract int getDepth();
public abstract java.lang.String getNamespace();
public abstract java.lang.String getName();
public abstract org.xmlpull.v1.XmlSerializer startTag(java.lang.String, java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract org.xmlpull.v1.XmlSerializer attribute(java.lang.String, java.lang.String, java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract org.xmlpull.v1.XmlSerializer endTag(java.lang.String, java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract org.xmlpull.v1.XmlSerializer text(java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract org.xmlpull.v1.XmlSerializer text(char[], int, int)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract void cdsect(java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract void entityRef(java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract void processingInstruction(java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract void comment(java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract void docdecl(java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract void ignorableWhitespace(java.lang.String)       throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
public abstract void flush()       throws java.io.IOException;
public abstract java.lang.CharSequence convertToString(android.database.Cursor);
public abstract class android.test.ActivityInstrumentationTestCase extends android.test.ActivityTestCase{
public abstract class java.security.PolicySpi extends java.lang.Object{
protected abstract boolean engineImplies(java.security.ProtectionDomain, java.security.Permission);
public abstract java.io.PrintWriter getLogWriter()       throws java.sql.SQLException;
public abstract void setLogWriter(java.io.PrintWriter)       throws java.sql.SQLException;
public abstract void setLoginTimeout(int)       throws java.sql.SQLException;
public abstract int getLoginTimeout()       throws java.sql.SQLException;
public abstract java.lang.String getPublicId();
public abstract java.lang.String getSystemId();
public abstract org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams, org.apache.http.conn.scheme.SchemeRegistry);
public abstract void surfaceRedrawNeeded(android.view.SurfaceHolder);
public abstract void onGlobalFocusChanged(android.view.View, android.view.View);
public abstract void onUtteranceCompleted(java.lang.String);
public abstract class org.apache.http.impl.auth.AuthSchemeBase extends java.lang.Object implements org.apache.http.auth.AuthScheme{
protected abstract void parseChallenge(org.apache.http.util.CharArrayBuffer, int, int)       throws org.apache.http.auth.MalformedChallengeException;
public abstract boolean accept(java.io.File);
public abstract void setCommentURL(java.lang.String);
public abstract void setPorts(int[]);
public abstract void setDiscard(boolean);
public abstract org.w3c.dom.Node getOriginatingNode();
public abstract boolean dispatchKeyEvent(android.view.KeyEvent);
public abstract boolean dispatchTouchEvent(android.view.MotionEvent);
public abstract boolean dispatchTrackballEvent(android.view.MotionEvent);
public abstract boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent);
public abstract android.view.View onCreatePanelView(int);
public abstract boolean onCreatePanelMenu(int, android.view.Menu);
public abstract boolean onPreparePanel(int, android.view.View, android.view.Menu);
public abstract boolean onMenuOpened(int, android.view.Menu);
public abstract boolean onMenuItemSelected(int, android.view.MenuItem);
public abstract void onWindowAttributesChanged(android.view.WindowManager$LayoutParams);
public abstract void onContentChanged();
public abstract void onWindowFocusChanged(boolean);
public abstract void onAttachedToWindow();
public abstract void onDetachedFromWindow();
public abstract void onPanelClosed(int, android.view.Menu);
public abstract boolean onSearchRequested();
public abstract android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase, android.database.sqlite.SQLiteCursorDriver, java.lang.String, android.database.sqlite.SQLiteQuery);
public abstract java.lang.Object[] getParams()       throws java.sql.SQLException;
public abstract java.sql.Connection getConnection()       throws java.sql.SQLException;
public abstract void setMetaData(javax.sql.RowSetMetaData)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getOriginal()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getOriginalRow()       throws java.sql.SQLException;
public abstract class java.security.PermissionCollection extends java.lang.Object implements java.io.Serializable{
public abstract void add(java.security.Permission);
public abstract boolean implies(java.security.Permission);
public abstract java.util.Enumeration elements();
public abstract java.lang.Thread newThread(java.lang.Runnable);
public abstract void valueBound(javax.net.ssl.SSLSessionBindingEvent);
public abstract void valueUnbound(javax.net.ssl.SSLSessionBindingEvent);
public abstract int tolerance();
public abstract class android.database.Observable extends java.lang.Object{
public abstract java.lang.String getContentTypeFor(java.lang.String);
public abstract class java.util.TimerTask extends java.lang.Object implements java.lang.Runnable{
public abstract void run();
public abstract java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])       throws java.lang.Throwable;
public abstract void cancel();
public abstract void dismiss();
public abstract class org.apache.http.message.AbstractHttpMessage extends java.lang.Object implements org.apache.http.HttpMessage{
public abstract class org.apache.http.impl.AbstractHttpServerConnection extends java.lang.Object implements org.apache.http.HttpServerConnection{
protected abstract void assertOpen()       throws java.lang.IllegalStateException;
public abstract class java.io.InputStream extends java.lang.Object implements java.io.Closeable{
public abstract int read()       throws java.io.IOException;
public abstract android.graphics.drawable.Drawable getDrawable(java.lang.String);
public abstract void statementClosed(javax.sql.StatementEvent);
public abstract void statementErrorOccurred(javax.sql.StatementEvent);
public abstract java.lang.String getPublicId();
public abstract java.lang.String getSystemId();
public abstract java.lang.String getNotationName();
public abstract java.lang.String getInputEncoding();
public abstract java.lang.String getXmlEncoding();
public abstract java.lang.String getXmlVersion();
public abstract void execute(java.lang.Runnable);
public abstract org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer, org.apache.http.HeaderElement[], boolean);
public abstract org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer, org.apache.http.HeaderElement, boolean);
public abstract org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer, org.apache.http.NameValuePair[], boolean);
public abstract org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer, org.apache.http.NameValuePair, boolean);
public abstract void onNewPicture(android.webkit.WebView, android.graphics.Picture);
public abstract class android.database.sqlite.SQLiteOpenHelper extends java.lang.Object{
public abstract void onCreate(android.database.sqlite.SQLiteDatabase);
public abstract void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int);
public abstract java.math.BigInteger getPublicExponent();
public abstract java.lang.Class getDeclaringClass();
public abstract java.lang.String getName();
public abstract int getModifiers();
public abstract boolean isSynthetic();
public abstract class org.apache.http.impl.cookie.AbstractCookieAttributeHandler extends java.lang.Object implements org.apache.http.cookie.CookieAttributeHandler{
public abstract void onBufferingUpdate(android.media.MediaPlayer, int);
public abstract class javax.xml.validation.ValidatorHandler extends java.lang.Object implements org.xml.sax.ContentHandler{
public abstract void setContentHandler(org.xml.sax.ContentHandler);
public abstract org.xml.sax.ContentHandler getContentHandler();
public abstract void setErrorHandler(org.xml.sax.ErrorHandler);
public abstract org.xml.sax.ErrorHandler getErrorHandler();
public abstract void setResourceResolver(org.w3c.dom.ls.LSResourceResolver);
public abstract org.w3c.dom.ls.LSResourceResolver getResourceResolver();
public abstract javax.xml.validation.TypeInfoProvider getTypeInfoProvider();
public abstract void onSensorChanged(int, float[]);
public abstract void onAccuracyChanged(int, int);
public abstract org.w3c.dom.DocumentType getDoctype();
public abstract org.w3c.dom.DOMImplementation getImplementation();
public abstract org.w3c.dom.Element getDocumentElement();
public abstract org.w3c.dom.Element createElement(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.DocumentFragment createDocumentFragment();
public abstract org.w3c.dom.Text createTextNode(java.lang.String);
public abstract org.w3c.dom.Comment createComment(java.lang.String);
public abstract org.w3c.dom.CDATASection createCDATASection(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Attr createAttribute(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.EntityReference createEntityReference(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.NodeList getElementsByTagName(java.lang.String);
public abstract org.w3c.dom.Node importNode(org.w3c.dom.Node, boolean)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Element createElementNS(java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Attr createAttributeNS(java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String, java.lang.String);
public abstract org.w3c.dom.Element getElementById(java.lang.String);
public abstract java.lang.String getInputEncoding();
public abstract java.lang.String getXmlEncoding();
public abstract boolean getXmlStandalone();
public abstract void setXmlStandalone(boolean)       throws org.w3c.dom.DOMException;
public abstract java.lang.String getXmlVersion();
public abstract void setXmlVersion(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract boolean getStrictErrorChecking();
public abstract void setStrictErrorChecking(boolean);
public abstract java.lang.String getDocumentURI();
public abstract void setDocumentURI(java.lang.String);
public abstract org.w3c.dom.Node adoptNode(org.w3c.dom.Node)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.DOMConfiguration getDomConfig();
public abstract void normalizeDocument();
public abstract org.w3c.dom.Node renameNode(org.w3c.dom.Node, java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract class java.security.KeyPairGeneratorSpi extends java.lang.Object{
public abstract void initialize(int, java.security.SecureRandom);
public abstract java.security.KeyPair generateKeyPair();
public abstract class android.widget.SimpleCursorTreeAdapter extends android.widget.ResourceCursorTreeAdapter{
public abstract class java.nio.charset.CharsetDecoder extends java.lang.Object{
protected abstract java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer);
public abstract void releaseConnection()       throws java.io.IOException;
public abstract void abortConnection()       throws java.io.IOException;
public abstract int read(byte[], int, int)       throws java.io.IOException;
public abstract int read(byte[])       throws java.io.IOException;
public abstract int read()       throws java.io.IOException;
public abstract int readLine(org.apache.http.util.CharArrayBuffer)       throws java.io.IOException;
public abstract java.lang.String readLine()       throws java.io.IOException;
public abstract boolean isDataAvailable(int)       throws java.io.IOException;
public abstract org.apache.http.io.HttpTransportMetrics getMetrics();
public abstract class java.security.AlgorithmParametersSpi extends java.lang.Object{
protected abstract void engineInit(java.security.spec.AlgorithmParameterSpec)       throws java.security.spec.InvalidParameterSpecException;
protected abstract void engineInit(byte[])       throws java.io.IOException;
protected abstract void engineInit(byte[], java.lang.String)       throws java.io.IOException;
protected abstract java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class)       throws java.security.spec.InvalidParameterSpecException;
protected abstract byte[] engineGetEncoded()       throws java.io.IOException;
protected abstract byte[] engineGetEncoded(java.lang.String)       throws java.io.IOException;
protected abstract java.lang.String engineToString();
public abstract void addError(junit.framework.Test, java.lang.Throwable);
public abstract void addFailure(junit.framework.Test, junit.framework.AssertionFailedError);
public abstract void endTest(junit.framework.Test);
public abstract void startTest(junit.framework.Test);
public abstract java.sql.Statement createStatement()       throws java.sql.SQLException;
public abstract java.sql.PreparedStatement prepareStatement(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.CallableStatement prepareCall(java.lang.String)       throws java.sql.SQLException;
public abstract java.lang.String nativeSQL(java.lang.String)       throws java.sql.SQLException;
public abstract void setAutoCommit(boolean)       throws java.sql.SQLException;
public abstract boolean getAutoCommit()       throws java.sql.SQLException;
public abstract void commit()       throws java.sql.SQLException;
public abstract void rollback()       throws java.sql.SQLException;
public abstract void close()       throws java.sql.SQLException;
public abstract boolean isClosed()       throws java.sql.SQLException;
public abstract java.sql.DatabaseMetaData getMetaData()       throws java.sql.SQLException;
public abstract void setReadOnly(boolean)       throws java.sql.SQLException;
public abstract boolean isReadOnly()       throws java.sql.SQLException;
public abstract void setCatalog(java.lang.String)       throws java.sql.SQLException;
public abstract java.lang.String getCatalog()       throws java.sql.SQLException;
public abstract void setTransactionIsolation(int)       throws java.sql.SQLException;
public abstract int getTransactionIsolation()       throws java.sql.SQLException;
public abstract java.sql.SQLWarning getWarnings()       throws java.sql.SQLException;
public abstract void clearWarnings()       throws java.sql.SQLException;
public abstract java.sql.Statement createStatement(int, int)       throws java.sql.SQLException;
public abstract java.sql.PreparedStatement prepareStatement(java.lang.String, int, int)       throws java.sql.SQLException;
public abstract java.sql.CallableStatement prepareCall(java.lang.String, int, int)       throws java.sql.SQLException;
public abstract java.util.Map getTypeMap()       throws java.sql.SQLException;
public abstract void setTypeMap(java.util.Map)       throws java.sql.SQLException;
public abstract void setHoldability(int)       throws java.sql.SQLException;
public abstract int getHoldability()       throws java.sql.SQLException;
public abstract java.sql.Savepoint setSavepoint()       throws java.sql.SQLException;
public abstract java.sql.Savepoint setSavepoint(java.lang.String)       throws java.sql.SQLException;
public abstract void rollback(java.sql.Savepoint)       throws java.sql.SQLException;
public abstract void releaseSavepoint(java.sql.Savepoint)       throws java.sql.SQLException;
public abstract java.sql.Statement createStatement(int, int, int)       throws java.sql.SQLException;
public abstract java.sql.PreparedStatement prepareStatement(java.lang.String, int, int, int)       throws java.sql.SQLException;
public abstract java.sql.CallableStatement prepareCall(java.lang.String, int, int, int)       throws java.sql.SQLException;
public abstract java.sql.PreparedStatement prepareStatement(java.lang.String, int)       throws java.sql.SQLException;
public abstract java.sql.PreparedStatement prepareStatement(java.lang.String, int[])       throws java.sql.SQLException;
public abstract java.sql.PreparedStatement prepareStatement(java.lang.String, java.lang.String[])       throws java.sql.SQLException;
public abstract java.sql.Clob createClob()       throws java.sql.SQLException;
public abstract java.sql.Blob createBlob()       throws java.sql.SQLException;
public abstract java.sql.NClob createNClob()       throws java.sql.SQLException;
public abstract java.sql.SQLXML createSQLXML()       throws java.sql.SQLException;
public abstract boolean isValid(int)       throws java.sql.SQLException;
public abstract void setClientInfo(java.lang.String, java.lang.String)       throws java.sql.SQLClientInfoException;
public abstract void setClientInfo(java.util.Properties)       throws java.sql.SQLClientInfoException;
public abstract java.lang.String getClientInfo(java.lang.String)       throws java.sql.SQLException;
public abstract java.util.Properties getClientInfo()       throws java.sql.SQLException;
public abstract java.sql.Array createArrayOf(java.lang.String, java.lang.Object[])       throws java.sql.SQLException;
public abstract java.sql.Struct createStruct(java.lang.String, java.lang.Object[])       throws java.sql.SQLException;
public abstract void setSystemId(java.lang.String);
public abstract java.lang.String getSystemId();
public abstract void attachToken(android.os.IBinder);
public abstract void bindInput(android.view.inputmethod.InputBinding);
public abstract void unbindInput();
public abstract void startInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo);
public abstract void restartInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo);
public abstract void createSession(android.view.inputmethod.InputMethod$SessionCallback);
public abstract void setSessionEnabled(android.view.inputmethod.InputMethodSession, boolean);
public abstract void revokeSession(android.view.inputmethod.InputMethodSession);
public abstract void showSoftInput(int, android.os.ResultReceiver);
public abstract void hideSoftInput(int, android.os.ResultReceiver);
public abstract android.text.Layout$Alignment getAlignment();
public abstract boolean onScale(android.view.ScaleGestureDetector);
public abstract boolean onScaleBegin(android.view.ScaleGestureDetector);
public abstract void onScaleEnd(android.view.ScaleGestureDetector);
public abstract boolean hasUnsupportedCriticalExtension();
public abstract java.util.Set getCriticalExtensionOIDs();
public abstract java.util.Set getNonCriticalExtensionOIDs();
public abstract byte[] getExtensionValue(java.lang.String);
public abstract java.lang.String getName();
public abstract boolean getSpecified();
public abstract java.lang.String getValue();
public abstract void setValue(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Element getOwnerElement();
public abstract org.w3c.dom.TypeInfo getSchemaTypeInfo();
public abstract boolean isId();
public abstract java.net.InetAddress resolve(java.lang.String)       throws java.io.IOException;
public abstract boolean isOpen();
public abstract void close()       throws java.io.IOException;
public abstract class java.security.cert.CertPath extends java.lang.Object implements java.io.Serializable{
public abstract java.util.Iterator getEncodings();
public abstract byte[] getEncoded()       throws java.security.cert.CertificateEncodingException;
public abstract byte[] getEncoded(java.lang.String)       throws java.security.cert.CertificateEncodingException;
public abstract java.util.List getCertificates();
public abstract boolean addMember(java.security.Principal);
public abstract boolean removeMember(java.security.Principal);
public abstract boolean isMember(java.security.Principal);
public abstract java.util.Enumeration members();
public abstract org.w3c.dom.ls.LSParser createLSParser(short, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.ls.LSSerializer createLSSerializer();
public abstract org.w3c.dom.ls.LSInput createLSInput();
public abstract org.w3c.dom.ls.LSOutput createLSOutput();
public abstract java.util.Iterator iterator();
public abstract void verify(org.apache.http.HttpRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)       throws org.apache.http.HttpException;
public abstract boolean equals(java.lang.Object);
public abstract byte[] getBytes();
public abstract java.lang.String toString();
public abstract int hashCode();
public abstract void onServiceConnected(android.content.ComponentName, android.os.IBinder);
public abstract void onServiceDisconnected(android.content.ComponentName);
public abstract boolean expectContinue();
public abstract void setEntity(org.apache.http.HttpEntity);
public abstract org.apache.http.HttpEntity getEntity();
public abstract int getLeadingMarginLineCount();
public abstract java.sql.Connection connect(java.lang.String, java.util.Properties)       throws java.sql.SQLException;
public abstract boolean acceptsURL(java.lang.String)       throws java.sql.SQLException;
public abstract java.sql.DriverPropertyInfo[] getPropertyInfo(java.lang.String, java.util.Properties)       throws java.sql.SQLException;
public abstract int getMajorVersion();
public abstract int getMinorVersion();
public abstract boolean jdbcCompliant();
public abstract class javax.security.cert.X509Certificate extends javax.security.cert.Certificate{
public abstract void checkValidity()       throws javax.security.cert.CertificateExpiredException, javax.security.cert.CertificateNotYetValidException;
public abstract void checkValidity(java.util.Date)       throws javax.security.cert.CertificateExpiredException, javax.security.cert.CertificateNotYetValidException;
public abstract int getVersion();
public abstract java.math.BigInteger getSerialNumber();
public abstract java.security.Principal getIssuerDN();
public abstract java.security.Principal getSubjectDN();
public abstract java.util.Date getNotBefore();
public abstract java.util.Date getNotAfter();
public abstract java.lang.String getSigAlgName();
public abstract java.lang.String getSigAlgOID();
public abstract byte[] getSigAlgParams();
public abstract class android.graphics.drawable.Drawable$ConstantState extends java.lang.Object{
public abstract android.graphics.drawable.Drawable newDrawable();
public abstract int getChangingConfigurations();
public abstract java.net.Socket createSocket()       throws java.io.IOException;
public abstract java.net.Socket connectSocket(java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams)       throws java.io.IOException, java.net.UnknownHostException, org.apache.http.conn.ConnectTimeoutException;
public abstract boolean isSecure(java.net.Socket)       throws java.lang.IllegalArgumentException;
public abstract class java.nio.channels.ServerSocketChannel extends java.nio.channels.spi.AbstractSelectableChannel{
public abstract java.net.ServerSocket socket();
public abstract java.nio.channels.SocketChannel accept()       throws java.io.IOException;
public abstract class java.security.cert.CertPathBuilderSpi extends java.lang.Object{
public abstract java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)       throws java.security.cert.CertPathBuilderException, java.security.InvalidAlgorithmParameterException;
public abstract class java.net.CacheRequest extends java.lang.Object{
public abstract java.io.OutputStream getBody()       throws java.io.IOException;
public abstract void abort();
public abstract android.view.View createTabContent(java.lang.String);
public abstract class android.graphics.drawable.ShapeDrawable$ShaderFactory extends java.lang.Object{
public abstract android.graphics.Shader resize(int, int);
public abstract int getLineNumber();
public abstract int getColumnNumber();
public abstract int getByteOffset();
public abstract int getUtf16Offset();
public abstract org.w3c.dom.Node getRelatedNode();
public abstract java.lang.String getUri();
public abstract boolean isSecure();
public abstract org.apache.http.conn.routing.HttpRoute getRoute();
public abstract javax.net.ssl.SSLSession getSSLSession();
public abstract void open(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)       throws java.io.IOException;
public abstract void tunnelTarget(boolean, org.apache.http.params.HttpParams)       throws java.io.IOException;
public abstract void tunnelProxy(org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams)       throws java.io.IOException;
public abstract void layerProtocol(org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)       throws java.io.IOException;
public abstract void markReusable();
public abstract void unmarkReusable();
public abstract boolean isMarkedReusable();
public abstract void setState(java.lang.Object);
public abstract java.lang.Object getState();
public abstract void setIdleDuration(long, java.util.concurrent.TimeUnit);
public abstract void onMediaScannerConnected();
public abstract void onScanCompleted(java.lang.String, android.net.Uri);
public abstract class javax.net.ssl.SSLServerSocket extends java.net.ServerSocket{
public abstract java.lang.String[] getEnabledCipherSuites();
public abstract void setEnabledCipherSuites(java.lang.String[]);
public abstract java.lang.String[] getSupportedCipherSuites();
public abstract java.lang.String[] getSupportedProtocols();
public abstract java.lang.String[] getEnabledProtocols();
public abstract void setEnabledProtocols(java.lang.String[]);
public abstract void setNeedClientAuth(boolean);
public abstract boolean getNeedClientAuth();
public abstract void setWantClientAuth(boolean);
public abstract boolean getWantClientAuth();
public abstract void setUseClientMode(boolean);
public abstract boolean getUseClientMode();
public abstract void setEnableSessionCreation(boolean);
public abstract boolean getEnableSessionCreation();
public abstract class java.security.MessageDigestSpi extends java.lang.Object{
protected abstract void engineUpdate(byte);
protected abstract void engineUpdate(byte[], int, int);
protected abstract byte[] engineDigest();
protected abstract void engineReset();
public abstract boolean acceptMatch(java.lang.CharSequence, int, int);
public abstract void getChars(int, int, char[], int);
public abstract java.lang.String[] getClientAliases(java.lang.String, java.security.Principal[]);
public abstract java.lang.String chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket);
public abstract java.lang.String[] getServerAliases(java.lang.String, java.security.Principal[]);
public abstract java.lang.String chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket);
public abstract java.security.cert.X509Certificate[] getCertificateChain(java.lang.String);
public abstract java.security.PrivateKey getPrivateKey(java.lang.String);
public abstract void onScrollStarted();
public abstract void onScrollEnded();
public abstract org.apache.http.ProtocolVersion getProtocolVersion();
public abstract boolean containsHeader(java.lang.String);
public abstract org.apache.http.Header[] getHeaders(java.lang.String);
public abstract org.apache.http.Header getFirstHeader(java.lang.String);
public abstract org.apache.http.Header getLastHeader(java.lang.String);
public abstract org.apache.http.Header[] getAllHeaders();
public abstract void addHeader(org.apache.http.Header);
public abstract void addHeader(java.lang.String, java.lang.String);
public abstract void setHeader(org.apache.http.Header);
public abstract void setHeader(java.lang.String, java.lang.String);
public abstract void setHeaders(org.apache.http.Header[]);
public abstract void removeHeader(org.apache.http.Header);
public abstract void removeHeaders(java.lang.String);
public abstract org.apache.http.HeaderIterator headerIterator();
public abstract org.apache.http.HeaderIterator headerIterator(java.lang.String);
public abstract org.apache.http.params.HttpParams getParams();
public abstract void setParams(org.apache.http.params.HttpParams);
public abstract boolean match(java.security.cert.Certificate);
public abstract java.lang.Object clone();
public abstract class android.widget.BaseAdapter extends java.lang.Object implements android.widget.ListAdapter,android.widget.SpinnerAdapter{
public abstract java.math.BigInteger getS();
public abstract class java.nio.channels.spi.AbstractSelector extends java.nio.channels.Selector{
protected abstract void implCloseSelector()       throws java.io.IOException;
protected abstract java.nio.channels.SelectionKey register(java.nio.channels.spi.AbstractSelectableChannel, int, java.lang.Object);
public abstract java.lang.String getName(int);
public abstract java.lang.String getNamespaceURI(int);
public abstract int getLength();
public abstract boolean contains(java.lang.String);
public abstract boolean containsNS(java.lang.String, java.lang.String);
public abstract class org.apache.http.impl.cookie.CookieSpecBase extends org.apache.http.impl.cookie.AbstractCookieSpec{
public abstract java.math.BigInteger getY();
public abstract org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer, org.apache.http.ProtocolVersion);
public abstract org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer, org.apache.http.RequestLine);
public abstract org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer, org.apache.http.StatusLine);
public abstract org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer, org.apache.http.Header);
public abstract class java.nio.channels.spi.AbstractSelectionKey extends java.nio.channels.SelectionKey{
public abstract void write(org.apache.http.HttpMessage)       throws java.io.IOException, org.apache.http.HttpException;
public abstract class java.nio.MappedByteBuffer extends java.nio.ByteBuffer{
public abstract class javax.net.ssl.SSLSocketFactory extends javax.net.SocketFactory{
public abstract java.lang.String[] getDefaultCipherSuites();
public abstract java.lang.String[] getSupportedCipherSuites();
public abstract java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean)       throws java.io.IOException;
public abstract java.lang.String getNodeName();
public abstract java.lang.String getNodeValue()       throws org.w3c.dom.DOMException;
public abstract void setNodeValue(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract short getNodeType();
public abstract org.w3c.dom.Node getParentNode();
public abstract org.w3c.dom.NodeList getChildNodes();
public abstract org.w3c.dom.Node getFirstChild();
public abstract org.w3c.dom.Node getLastChild();
public abstract org.w3c.dom.Node getPreviousSibling();
public abstract org.w3c.dom.Node getNextSibling();
public abstract org.w3c.dom.NamedNodeMap getAttributes();
public abstract org.w3c.dom.Document getOwnerDocument();
public abstract org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Node removeChild(org.w3c.dom.Node)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Node appendChild(org.w3c.dom.Node)       throws org.w3c.dom.DOMException;
public abstract boolean hasChildNodes();
public abstract org.w3c.dom.Node cloneNode(boolean);
public abstract void normalize();
public abstract boolean isSupported(java.lang.String, java.lang.String);
public abstract java.lang.String getNamespaceURI();
public abstract java.lang.String getPrefix();
public abstract void setPrefix(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract java.lang.String getLocalName();
public abstract boolean hasAttributes();
public abstract java.lang.String getBaseURI();
public abstract short compareDocumentPosition(org.w3c.dom.Node)       throws org.w3c.dom.DOMException;
public abstract java.lang.String getTextContent()       throws org.w3c.dom.DOMException;
public abstract void setTextContent(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract boolean isSameNode(org.w3c.dom.Node);
public abstract java.lang.String lookupPrefix(java.lang.String);
public abstract boolean isDefaultNamespace(java.lang.String);
public abstract java.lang.String lookupNamespaceURI(java.lang.String);
public abstract boolean isEqualNode(org.w3c.dom.Node);
public abstract java.lang.Object getFeature(java.lang.String, java.lang.String);
public abstract java.lang.Object setUserData(java.lang.String, java.lang.Object, org.w3c.dom.UserDataHandler);
public abstract java.lang.Object getUserData(java.lang.String);
public abstract class android.test.ServiceTestCase extends android.test.AndroidTestCase{
public abstract class java.util.ListResourceBundle extends java.util.ResourceBundle{
protected abstract java.lang.Object[][] getContents();
public abstract void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo);
public abstract class android.database.AbstractWindowedCursor extends android.database.AbstractCursor{
public abstract class android.content.ContentProvider extends java.lang.Object implements android.content.ComponentCallbacks{
public abstract boolean onCreate();
public abstract android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String);
public abstract java.lang.String getType(android.net.Uri);
public abstract android.net.Uri insert(android.net.Uri, android.content.ContentValues);
public abstract int delete(android.net.Uri, java.lang.String, java.lang.String[]);
public abstract int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[]);
public abstract void onCustomViewHidden();
public abstract class android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl extends java.lang.Object implements android.view.inputmethod.InputMethodSession{
public abstract class javax.xml.parsers.SAXParserFactory extends java.lang.Object{
public abstract javax.xml.parsers.SAXParser newSAXParser()       throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException;
public abstract void setFeature(java.lang.String, boolean)       throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;
public abstract boolean getFeature(java.lang.String)       throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;
public abstract android.webkit.CacheManager$CacheResult service(java.lang.String, java.util.Map);
public abstract android.webkit.PluginData getPluginData(java.lang.String, java.util.Map);
public abstract void connectionClosed(javax.sql.ConnectionEvent);
public abstract void connectionErrorOccurred(javax.sql.ConnectionEvent);
public abstract boolean onError(android.media.MediaPlayer, int, int);
public abstract void onStatusChanged(int);
public abstract void onDrawerClosed();
public abstract javax.xml.transform.Templates getTemplates();
public abstract void setSystemId(java.lang.String);
public abstract java.lang.String getSystemId();
public abstract class java.lang.Enum extends java.lang.Object implements java.lang.Comparable,java.io.Serializable{
public abstract boolean eofDetected(java.io.InputStream)       throws java.io.IOException;
public abstract boolean streamClosed(java.io.InputStream)       throws java.io.IOException;
public abstract boolean streamAbort(java.io.InputStream)       throws java.io.IOException;
public abstract void initialize(java.security.interfaces.DSAParams, java.security.SecureRandom)       throws java.security.InvalidParameterException;
public abstract void initialize(int, boolean, java.security.SecureRandom)       throws java.security.InvalidParameterException;
public abstract void onDateChanged(android.widget.DatePicker, int, int, int);
public abstract void onInfo(android.media.MediaRecorder, int, int);
public abstract class java.nio.channels.spi.AbstractSelectableChannel extends java.nio.channels.SelectableChannel{
protected abstract void implCloseSelectableChannel()       throws java.io.IOException;
protected abstract void implConfigureBlocking(boolean)       throws java.io.IOException;
public abstract void notationDecl(java.lang.String, java.lang.String, java.lang.String)       throws org.xml.sax.SAXException;
public abstract void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)       throws org.xml.sax.SAXException;
public abstract void handleTag(boolean, java.lang.String, android.text.Editable, org.xml.sax.XMLReader);
public abstract class javax.net.ssl.SSLContextSpi extends java.lang.Object{
protected abstract void engineInit(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)       throws java.security.KeyManagementException;
protected abstract javax.net.ssl.SSLSocketFactory engineGetSocketFactory();
protected abstract javax.net.ssl.SSLServerSocketFactory engineGetServerSocketFactory();
protected abstract javax.net.ssl.SSLEngine engineCreateSSLEngine();
protected abstract javax.net.ssl.SSLEngine engineCreateSSLEngine(java.lang.String, int);
protected abstract javax.net.ssl.SSLSessionContext engineGetServerSessionContext();
protected abstract javax.net.ssl.SSLSessionContext engineGetClientSessionContext();
public abstract class org.apache.http.conn.ssl.AbstractVerifier extends java.lang.Object implements org.apache.http.conn.ssl.X509HostnameVerifier{
public abstract class android.app.Service extends android.content.ContextWrapper implements android.content.ComponentCallbacks{
public abstract android.os.IBinder onBind(android.content.Intent);
public abstract org.apache.http.HttpHost getTargetHost();
public abstract boolean isSecure();
public abstract java.net.Socket getSocket();
public abstract void opening(java.net.Socket, org.apache.http.HttpHost)       throws java.io.IOException;
public abstract void openCompleted(boolean, org.apache.http.params.HttpParams)       throws java.io.IOException;
public abstract void update(java.net.Socket, org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams)       throws java.io.IOException;
public abstract int size();
public abstract boolean isEmpty();
public abstract boolean containsKey(java.lang.Object);
public abstract boolean containsValue(java.lang.Object);
public abstract java.lang.Object get(java.lang.Object);
public abstract java.lang.Object put(java.lang.Object, java.lang.Object);
public abstract java.lang.Object remove(java.lang.Object);
public abstract void putAll(java.util.Map);
public abstract void clear();
public abstract java.util.Set keySet();
public abstract java.util.Collection values();
public abstract java.util.Set entrySet();
public abstract boolean equals(java.lang.Object);
public abstract int hashCode();
public abstract void onParameterChange(android.media.audiofx.Virtualizer, int, int, short);
public abstract class org.apache.http.client.methods.HttpRequestBase extends org.apache.http.message.AbstractHttpMessage implements org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable{
public abstract java.lang.String getMethod();
public abstract java.security.cert.CertPath getCertPath();
public abstract java.lang.Object clone();
public abstract class android.text.style.MetricAffectingSpan extends android.text.style.CharacterStyle implements android.text.style.UpdateLayout{
public abstract void updateMeasureState(android.text.TextPaint);
public abstract long getRequestCount();
public abstract long getResponseCount();
public abstract long getSentBytesCount();
public abstract long getReceivedBytesCount();
public abstract java.lang.Object getMetric(java.lang.String);
public abstract void reset();
public abstract class android.database.ContentObserver extends java.lang.Object{
public abstract void println(java.lang.String);
public abstract void handle(javax.security.auth.callback.Callback[])       throws java.io.IOException, javax.security.auth.callback.UnsupportedCallbackException;
public abstract java.util.concurrent.ConcurrentNavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean);
public abstract java.util.concurrent.ConcurrentNavigableMap headMap(java.lang.Object, boolean);
public abstract java.util.concurrent.ConcurrentNavigableMap tailMap(java.lang.Object, boolean);
public abstract java.util.concurrent.ConcurrentNavigableMap subMap(java.lang.Object, java.lang.Object);
public abstract java.util.concurrent.ConcurrentNavigableMap headMap(java.lang.Object);
public abstract java.util.concurrent.ConcurrentNavigableMap tailMap(java.lang.Object);
public abstract java.util.concurrent.ConcurrentNavigableMap descendingMap();
public abstract java.util.NavigableSet navigableKeySet();
public abstract java.util.NavigableSet keySet();
public abstract java.util.NavigableSet descendingKeySet();
public abstract boolean setViewValue(android.view.View, java.lang.Object, java.lang.String);
public abstract void addResponseInterceptor(org.apache.http.HttpResponseInterceptor);
public abstract void addResponseInterceptor(org.apache.http.HttpResponseInterceptor, int);
public abstract int getResponseInterceptorCount();
public abstract org.apache.http.HttpResponseInterceptor getResponseInterceptor(int);
public abstract void clearResponseInterceptors();
public abstract void removeResponseInterceptorByClass(java.lang.Class);
public abstract void setInterceptors(java.util.List);
public abstract class android.text.style.ClickableSpan extends android.text.style.CharacterStyle implements android.text.style.UpdateAppearance{
public abstract void onClick(android.view.View);
public abstract class java.nio.channels.SelectableChannel extends java.nio.channels.spi.AbstractInterruptibleChannel implements java.nio.channels.Channel{
public abstract java.nio.channels.spi.SelectorProvider provider();
public abstract int validOps();
public abstract boolean isRegistered();
public abstract java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector);
public abstract java.nio.channels.SelectionKey register(java.nio.channels.Selector, int, java.lang.Object)       throws java.nio.channels.ClosedChannelException;
public abstract java.nio.channels.SelectableChannel configureBlocking(boolean)       throws java.io.IOException;
public abstract boolean isBlocking();
public abstract java.lang.Object blockingLock();
public abstract void onError(int, android.hardware.Camera);
public abstract boolean retrieveReturn();
public abstract org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion, int, org.apache.http.protocol.HttpContext);
public abstract org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine, org.apache.http.protocol.HttpContext);
public abstract void onVisibilityChanged(boolean);
public abstract void onZoom(boolean);
public abstract java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[], java.security.ProtectionDomain[]);
public abstract boolean onItemLongClick(android.widget.AdapterView, android.view.View, int, long);
public abstract boolean handleError(org.w3c.dom.DOMError);
public abstract boolean writeData(javax.sql.RowSetInternal)       throws java.sql.SQLException;
public abstract void flush()       throws java.io.IOException;
public abstract class android.test.ActivityTestCase extends android.test.InstrumentationTestCase{
public abstract void warning(org.xml.sax.SAXParseException)       throws org.xml.sax.SAXException;
public abstract void error(org.xml.sax.SAXParseException)       throws org.xml.sax.SAXException;
public abstract void fatalError(org.xml.sax.SAXParseException)       throws org.xml.sax.SAXException;
public abstract class java.security.cert.X509CRL extends java.security.cert.CRL implements java.security.cert.X509Extension{
public abstract byte[] getEncoded()       throws java.security.cert.CRLException;
public abstract void verify(java.security.PublicKey)       throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;
public abstract void verify(java.security.PublicKey, java.lang.String)       throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;
public abstract int getVersion();
public abstract java.security.Principal getIssuerDN();
public abstract java.util.Date getThisUpdate();
public abstract java.util.Date getNextUpdate();
public abstract java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger);
public abstract java.util.Set getRevokedCertificates();
public abstract byte[] getTBSCertList()       throws java.security.cert.CRLException;
public abstract byte[] getSignature();
public abstract java.lang.String getSigAlgName();
public abstract java.lang.String getSigAlgOID();
public abstract byte[] getSigAlgParams();
public abstract void onMovedToScrapHeap(android.view.View);
public abstract void writeObject(java.lang.Object)       throws java.io.IOException;
public abstract void write(int)       throws java.io.IOException;
public abstract void write(byte[])       throws java.io.IOException;
public abstract void write(byte[], int, int)       throws java.io.IOException;
public abstract void flush()       throws java.io.IOException;
public abstract void close()       throws java.io.IOException;
public abstract org.w3c.dom.Node getNamedItem(java.lang.String);
public abstract org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Node removeNamedItem(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Node item(int);
public abstract int getLength();
public abstract org.w3c.dom.Node getNamedItemNS(java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)       throws org.w3c.dom.DOMException;
public abstract org.w3c.dom.Node removeNamedItemNS(java.lang.String, java.lang.String)       throws org.w3c.dom.DOMException;
public abstract boolean add(java.lang.Object);
public abstract boolean offer(java.lang.Object);
public abstract void put(java.lang.Object)       throws java.lang.InterruptedException;
public abstract boolean offer(java.lang.Object, long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract java.lang.Object take()       throws java.lang.InterruptedException;
public abstract java.lang.Object poll(long, java.util.concurrent.TimeUnit)       throws java.lang.InterruptedException;
public abstract int remainingCapacity();
public abstract boolean remove(java.lang.Object);
public abstract boolean contains(java.lang.Object);
public abstract int drainTo(java.util.Collection);
public abstract int drainTo(java.util.Collection, int);
public abstract class android.widget.CompoundButton extends android.widget.Button implements android.widget.Checkable{
public abstract java.security.spec.ECPoint getW();
public abstract class java.security.Provider extends java.util.Properties{
public abstract void onZoomChange(int, boolean, android.hardware.Camera);
public abstract byte[] getId();
public abstract javax.net.ssl.SSLSessionContext getSessionContext();
public abstract long getCreationTime();
public abstract long getLastAccessedTime();
public abstract void invalidate();
public abstract boolean isValid();
public abstract void putValue(java.lang.String, java.lang.Object);
public abstract java.lang.Object getValue(java.lang.String);
public abstract void removeValue(java.lang.String);
public abstract java.lang.String[] getValueNames();
public abstract java.security.cert.Certificate[] getPeerCertificates()       throws javax.net.ssl.SSLPeerUnverifiedException;
public abstract java.security.cert.Certificate[] getLocalCertificates();
public abstract javax.security.cert.X509Certificate[] getPeerCertificateChain()       throws javax.net.ssl.SSLPeerUnverifiedException;
public abstract java.security.Principal getPeerPrincipal()       throws javax.net.ssl.SSLPeerUnverifiedException;
public abstract java.security.Principal getLocalPrincipal();
public abstract java.lang.String getCipherSuite();
public abstract java.lang.String getProtocol();
public abstract java.lang.String getPeerHost();
public abstract int getPeerPort();
public abstract int getPacketBufferSize();
public abstract int getApplicationBufferSize();
public abstract java.lang.CharSequence getTransformation(java.lang.CharSequence, android.view.View);
public abstract void onFocusChanged(android.view.View, java.lang.CharSequence, boolean, int, android.graphics.Rect);
public abstract void onRegistering(java.lang.String);
public abstract void onRegistrationDone(java.lang.String, long);
public abstract void onRegistrationFailed(java.lang.String, int, java.lang.String);
public abstract java.lang.Object getParameter(java.lang.String);
public abstract org.apache.http.params.HttpParams setParameter(java.lang.String, java.lang.Object);
public abstract org.apache.http.params.HttpParams copy();
public abstract boolean removeParameter(java.lang.String);
public abstract long getLongParameter(java.lang.String, long);
public abstract org.apache.http.params.HttpParams setLongParameter(java.lang.String, long);
public abstract int getIntParameter(java.lang.String, int);
public abstract org.apache.http.params.HttpParams setIntParameter(java.lang.String, int);
public abstract double getDoubleParameter(java.lang.String, double);
public abstract org.apache.http.params.HttpParams setDoubleParameter(java.lang.String, double);
public abstract boolean getBooleanParameter(java.lang.String, boolean);
public abstract org.apache.http.params.HttpParams setBooleanParameter(java.lang.String, boolean);
public abstract boolean isParameterTrue(java.lang.String);
public abstract boolean isParameterFalse(java.lang.String);
public abstract void onError(android.media.MediaRecorder, int, int);
public abstract int getLength();
public abstract java.lang.String getURI(int);
public abstract java.lang.String getLocalName(int);
public abstract java.lang.String getQName(int);
public abstract java.lang.String getType(int);
public abstract java.lang.String getValue(int);
public abstract int getIndex(java.lang.String, java.lang.String);
public abstract int getIndex(java.lang.String);
public abstract java.lang.String getType(java.lang.String, java.lang.String);
public abstract java.lang.String getType(java.lang.String);
public abstract java.lang.String getValue(java.lang.String, java.lang.String);
public abstract java.lang.String getValue(java.lang.String);
public abstract void onDismiss(android.content.DialogInterface);
public abstract void run(android.accounts.AccountManagerFuture);
public abstract void setSpan(java.lang.Object, int, int, int);
public abstract void removeSpan(java.lang.Object);
public abstract void onClick(android.view.View);
public abstract class org.apache.http.entity.AbstractHttpEntity extends java.lang.Object implements org.apache.http.HttpEntity{
public abstract class java.util.logging.Handler extends java.lang.Object{
public abstract void publish(java.util.logging.LogRecord);
public abstract void flush();
public abstract void close()       throws java.lang.SecurityException;
public abstract class java.security.cert.CRL extends java.lang.Object{
public abstract java.lang.String toString();
public abstract boolean isRevoked(java.security.cert.Certificate);
public abstract class junit.framework.TestCase extends junit.framework.Assert implements junit.framework.Test{
public abstract class org.apache.http.impl.conn.tsccm.AbstractConnPool extends java.lang.Object implements org.apache.http.impl.conn.tsccm.RefQueueHandler{
public abstract org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute, java.lang.Object);
public abstract void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry, boolean, long, java.util.concurrent.TimeUnit);
protected abstract void handleLostEntry(org.apache.http.conn.routing.HttpRoute);
public abstract void deleteClosedConnections();
public abstract void onSeekComplete(android.media.MediaPlayer);
public abstract class java.security.cert.CertPathValidatorSpi extends java.lang.Object{
public abstract java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters)       throws java.security.cert.CertPathValidatorException, java.security.InvalidAlgorithmParameterException;
public abstract boolean onEditorAction(android.widget.TextView, int, android.view.KeyEvent);
public abstract android.view.View getEmbeddedView(int, android.content.Context);
public abstract android.view.View getFullScreenView(int, android.content.Context);
public abstract int getGroupType(int);
public abstract int getChildType(int, int);
public abstract int getGroupTypeCount();
public abstract int getChildTypeCount();
public abstract java.lang.Object handleResponse(org.apache.http.HttpResponse)       throws org.apache.http.client.ClientProtocolException, java.io.IOException;
public abstract class javax.xml.xpath.XPathFactory extends java.lang.Object{
public abstract boolean isObjectModelSupported(java.lang.String);
public abstract void setFeature(java.lang.String, boolean)       throws javax.xml.xpath.XPathFactoryConfigurationException;
public abstract boolean getFeature(java.lang.String)       throws javax.xml.xpath.XPathFactoryConfigurationException;
public abstract void setXPathVariableResolver(javax.xml.xpath.XPathVariableResolver);
public abstract void setXPathFunctionResolver(javax.xml.xpath.XPathFunctionResolver);
public abstract javax.xml.xpath.XPath newXPath();
public abstract javax.xml.transform.Transformer newTransformer()       throws javax.xml.transform.TransformerConfigurationException;
public abstract java.util.Properties getOutputProperties();
public abstract class android.os.TokenWatcher extends java.lang.Object{
public abstract void acquired();
public abstract void released();
public abstract void readFully(byte[])       throws java.io.IOException;
public abstract void readFully(byte[], int, int)       throws java.io.IOException;
public abstract int skipBytes(int)       throws java.io.IOException;
public abstract boolean readBoolean()       throws java.io.IOException;
public abstract byte readByte()       throws java.io.IOException;
public abstract int readUnsignedByte()       throws java.io.IOException;
public abstract short readShort()       throws java.io.IOException;
public abstract int readUnsignedShort()       throws java.io.IOException;
public abstract char readChar()       throws java.io.IOException;
public abstract int readInt()       throws java.io.IOException;
public abstract long readLong()       throws java.io.IOException;
public abstract float readFloat()       throws java.io.IOException;
public abstract double readDouble()       throws java.io.IOException;
public abstract java.lang.String readLine()       throws java.io.IOException;
public abstract java.lang.String readUTF()       throws java.io.IOException;
public abstract class org.apache.http.impl.conn.AbstractClientConnAdapter extends java.lang.Object implements org.apache.http.conn.ManagedClientConnection{
public abstract boolean onLoadClass(java.lang.Class);
public abstract class org.apache.http.impl.conn.AbstractPoolEntry extends java.lang.Object{
public abstract java.lang.Object unwrap(java.lang.Class)       throws java.sql.SQLException;
public abstract boolean isWrapperFor(java.lang.Class)       throws java.sql.SQLException;
public abstract void update(int);
public abstract void update(byte[], int, int);
public abstract long getValue();
public abstract void reset();
public abstract class java.util.jar.Pack200 extends java.lang.Object{
public abstract boolean isRepeatable();
public abstract boolean isChunked();
public abstract long getContentLength();
public abstract org.apache.http.Header getContentType();
public abstract org.apache.http.Header getContentEncoding();
public abstract java.io.InputStream getContent()       throws java.io.IOException, java.lang.IllegalStateException;
public abstract void writeTo(java.io.OutputStream)       throws java.io.IOException;
public abstract boolean isStreaming();
public abstract void consumeContent()       throws java.io.IOException;
public abstract short startElement(org.w3c.dom.Element);
public abstract short acceptNode(org.w3c.dom.Node);
public abstract int getWhatToShow();
public abstract java.lang.String getPublicId();
public abstract java.lang.String getSystemId();
public abstract int getLineNumber();
public abstract int getColumnNumber();
public abstract void onDismiss();
public abstract class android.text.method.ReplacementTransformationMethod extends java.lang.Object implements android.text.method.TransformationMethod{
protected abstract char[] getOriginal();
protected abstract char[] getReplacement();
public abstract java.lang.Object getKey();
public abstract java.lang.Object getValue();
public abstract java.lang.Object setValue(java.lang.Object);
public abstract boolean equals(java.lang.Object);
public abstract int hashCode();
public abstract class java.util.concurrent.locks.AbstractQueuedLongSynchronizer extends java.util.concurrent.locks.AbstractOwnableSynchronizer implements java.io.Serializable{
public abstract java.lang.annotation.RetentionPolicy value();
public abstract org.apache.http.ProtocolVersion getProtocolVersion();
public abstract int getStatusCode();
public abstract java.lang.String getReasonPhrase();
public abstract boolean isAnnotationPresent(java.lang.Class);
public abstract java.lang.annotation.Annotation getAnnotation(java.lang.Class);
public abstract java.lang.annotation.Annotation[] getAnnotations();
public abstract java.lang.annotation.Annotation[] getDeclaredAnnotations();
public abstract org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)       throws org.apache.http.ParseException;
public abstract org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)       throws org.apache.http.ParseException;
public abstract org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)       throws org.apache.http.ParseException;
public abstract org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)       throws org.apache.http.ParseException;
public abstract void onChronometerTick(android.widget.Chronometer);
public abstract void setParameter(java.lang.String, java.lang.Object)       throws org.w3c.dom.DOMException;
public abstract java.lang.Object getParameter(java.lang.String)       throws org.w3c.dom.DOMException;
public abstract boolean canSetParameter(java.lang.String, java.lang.Object);
public abstract org.w3c.dom.DOMStringList getParameterNames();
public abstract org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams);
public abstract class java.util.concurrent.locks.AbstractOwnableSynchronizer extends java.lang.Object implements java.io.Serializable{
public abstract org.apache.http.conn.OperatedClientConnection createConnection();
public abstract void openConnection(org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)       throws java.io.IOException;
public abstract void updateSecureConnection(org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams)       throws java.io.IOException;
public abstract class android.os.storage.OnObbStateChangeListener extends java.lang.Object{
public abstract void setString(java.lang.String);
public abstract java.lang.String getSQLTypeName()       throws java.sql.SQLException;
public abstract void readSQL(java.sql.SQLInput, java.lang.String)       throws java.sql.SQLException;
public abstract void writeSQL(java.sql.SQLOutput)       throws java.sql.SQLException;
public abstract void initialize(android.widget.TextView, android.text.Spannable);
public abstract boolean onKeyDown(android.widget.TextView, android.text.Spannable, int, android.view.KeyEvent);
public abstract boolean onKeyUp(android.widget.TextView, android.text.Spannable, int, android.view.KeyEvent);
public abstract boolean onKeyOther(android.widget.TextView, android.text.Spannable, android.view.KeyEvent);
public abstract void onTakeFocus(android.widget.TextView, android.text.Spannable, int);
public abstract boolean onTrackballEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent);
public abstract boolean onTouchEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent);
public abstract boolean canSelectArbitrarily();
public abstract java.security.interfaces.DSAParams getParams();
public abstract class java.net.ResponseCache extends java.lang.Object{
public abstract java.net.CacheResponse get(java.net.URI, java.lang.String, java.util.Map)       throws java.io.IOException;
public abstract java.net.CacheRequest put(java.net.URI, java.net.URLConnection)       throws java.io.IOException;
public abstract class java.security.AlgorithmParameterGeneratorSpi extends java.lang.Object{
protected abstract void engineInit(int, java.security.SecureRandom);
protected abstract void engineInit(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)       throws java.security.InvalidAlgorithmParameterException;
protected abstract java.security.AlgorithmParameters engineGenerateParameters();
public abstract java.net.SocketImpl createSocketImpl();
public abstract class javax.microedition.khronos.egl.EGLContext extends java.lang.Object{
public abstract javax.microedition.khronos.opengles.GL getGL();
public abstract void onMarkerReached(android.media.AudioTrack);
public abstract void onPeriodicNotification(android.media.AudioTrack);
public abstract long determineLength(org.apache.http.HttpMessage)       throws org.apache.http.HttpException;
public abstract class java.net.SocketImpl extends java.lang.Object implements java.net.SocketOptions{
protected abstract void create(boolean)       throws java.io.IOException;
protected abstract void connect(java.lang.String, int)       throws java.io.IOException;
protected abstract void connect(java.net.InetAddress, int)       throws java.io.IOException;
protected abstract void connect(java.net.SocketAddress, int)       throws java.io.IOException;
protected abstract void bind(java.net.InetAddress, int)       throws java.io.IOException;
protected abstract void listen(int)       throws java.io.IOException;
protected abstract void accept(java.net.SocketImpl)       throws java.io.IOException;
protected abstract java.io.InputStream getInputStream()       throws java.io.IOException;
protected abstract java.io.OutputStream getOutputStream()       throws java.io.IOException;
protected abstract int available()       throws java.io.IOException;
protected abstract void close()       throws java.io.IOException;
protected abstract void sendUrgentData(int)       throws java.io.IOException;
public abstract int length();
public abstract char charAt(int);
public abstract java.lang.CharSequence subSequence(int, int);
public abstract java.lang.String toString();
public abstract void onGroupCollapse(int);
public abstract android.view.ContextMenu setHeaderTitle(int);
public abstract android.view.ContextMenu setHeaderTitle(java.lang.CharSequence);
public abstract android.view.ContextMenu setHeaderIcon(int);
public abstract android.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable);
public abstract android.view.ContextMenu setHeaderView(android.view.View);
public abstract void clearHeader();
public abstract int getFieldSize();
public abstract class org.apache.http.client.methods.HttpEntityEnclosingRequestBase extends org.apache.http.client.methods.HttpRequestBase implements org.apache.http.HttpEntityEnclosingRequest{
public abstract java.lang.String getPublicId();
public abstract java.lang.String getSystemId();
public abstract int getLineNumber();
public abstract int getColumnNumber();
public abstract void onProgress(int);
public abstract class java.security.Policy extends java.lang.Object{
public abstract java.lang.String sanitize(java.lang.String);
public abstract int getInputType();
public abstract boolean onKeyDown(android.view.View, android.text.Editable, int, android.view.KeyEvent);
public abstract boolean onKeyUp(android.view.View, android.text.Editable, int, android.view.KeyEvent);
public abstract boolean onKeyOther(android.view.View, android.text.Editable, android.view.KeyEvent);
public abstract void clearMetaKeyState(android.view.View, android.text.Editable, int);
public abstract java.util.SortedMap properties();
public abstract void pack(java.util.jar.JarFile, java.io.OutputStream)       throws java.io.IOException;
public abstract void pack(java.util.jar.JarInputStream, java.io.OutputStream)       throws java.io.IOException;
public abstract void addPropertyChangeListener(java.beans.PropertyChangeListener);
public abstract void removePropertyChangeListener(java.beans.PropertyChangeListener);
public abstract class javax.net.ssl.SSLEngine extends java.lang.Object{
public abstract javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer)       throws javax.net.ssl.SSLException;
public abstract javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int)       throws javax.net.ssl.SSLException;
public abstract java.lang.Runnable getDelegatedTask();
public abstract void closeInbound()       throws javax.net.ssl.SSLException;
public abstract boolean isInboundDone();
public abstract void closeOutbound();
public abstract boolean isOutboundDone();
public abstract java.lang.String[] getSupportedCipherSuites();
public abstract java.lang.String[] getEnabledCipherSuites();
public abstract void setEnabledCipherSuites(java.lang.String[]);
public abstract java.lang.String[] getSupportedProtocols();
public abstract java.lang.String[] getEnabledProtocols();
public abstract void setEnabledProtocols(java.lang.String[]);
public abstract javax.net.ssl.SSLSession getSession();
public abstract void beginHandshake()       throws javax.net.ssl.SSLException;
public abstract javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus();
public abstract void setUseClientMode(boolean);
public abstract boolean getUseClientMode();
public abstract void setNeedClientAuth(boolean);
public abstract boolean getNeedClientAuth();
public abstract void setWantClientAuth(boolean);
public abstract boolean getWantClientAuth();
public abstract void setEnableSessionCreation(boolean);
public abstract boolean getEnableSessionCreation();
public abstract java.lang.String getNamespaceURI(java.lang.String);
public abstract java.lang.String getPrefix(java.lang.String);
public abstract java.util.Iterator getPrefixes(java.lang.String);
public abstract void registerDataSetObserver(android.database.DataSetObserver);
public abstract void unregisterDataSetObserver(android.database.DataSetObserver);
public abstract int getGroupCount();
public abstract int getChildrenCount(int);
public abstract java.lang.Object getGroup(int);
public abstract java.lang.Object getChild(int, int);
public abstract long getGroupId(int);
public abstract long getChildId(int, int);
public abstract boolean hasStableIds();
public abstract android.view.View getGroupView(int, boolean, android.view.View, android.view.ViewGroup);
public abstract android.view.View getChildView(int, int, boolean, android.view.View, android.view.ViewGroup);
public abstract boolean isChildSelectable(int, int);
public abstract boolean areAllItemsEnabled();
public abstract boolean isEmpty();
public abstract void onGroupExpanded(int);
public abstract void onGroupCollapsed(int);
public abstract long getCombinedChildId(long, long);
public abstract long getCombinedGroupId(long);
public abstract void beforeTextChanged(java.lang.CharSequence, int, int, int);
public abstract void onTextChanged(java.lang.CharSequence, int, int, int);
public abstract void afterTextChanged(android.text.Editable);
public abstract javax.crypto.spec.DHParameterSpec getParams();
public abstract char[] getPassword();
public abstract byte[] getSalt();
public abstract int getIterationCount();
public abstract class android.widget.AdapterView extends android.view.ViewGroup{
public abstract android.widget.Adapter getAdapter();
public abstract void setAdapter(android.widget.Adapter);
public abstract android.view.View getSelectedView();
public abstract void setSelection(int);
public abstract int glQueryMatrixxOES(int[], int, int[], int);
public abstract int glQueryMatrixxOES(java.nio.IntBuffer, java.nio.IntBuffer);
public abstract java.lang.Object clone();
public abstract class java.lang.Number extends java.lang.Object implements java.io.Serializable{
public abstract int intValue();
public abstract long longValue();
public abstract float floatValue();
public abstract double doubleValue();
public abstract class java.nio.channels.spi.AbstractInterruptibleChannel extends java.lang.Object implements java.nio.channels.Channel,java.nio.channels.InterruptibleChannel{
protected abstract void implCloseChannel()       throws java.io.IOException;
public abstract boolean setPrincipal(java.security.Principal);
public abstract java.security.Principal getPrincipal();
public abstract void setNegativePermissions();
public abstract boolean isNegative();
public abstract boolean addPermission(java.security.acl.Permission);
public abstract boolean removePermission(java.security.acl.Permission);
public abstract boolean checkPermission(java.security.acl.Permission);
public abstract java.util.Enumeration permissions();
public abstract java.lang.String toString();
public abstract java.lang.Object clone();
public abstract java.util.Comparator comparator();
public abstract java.util.SortedMap subMap(java.lang.Object, java.lang.Object);
public abstract java.util.SortedMap headMap(java.lang.Object);
public abstract java.util.SortedMap tailMap(java.lang.Object);
public abstract java.lang.Object firstKey();
public abstract java.lang.Object lastKey();
public abstract java.util.Set keySet();
public abstract java.util.Collection values();
public abstract java.util.Set entrySet();
public abstract void addRequestInterceptor(org.apache.http.HttpRequestInterceptor);
public abstract void addRequestInterceptor(org.apache.http.HttpRequestInterceptor, int);
public abstract int getRequestInterceptorCount();
public abstract org.apache.http.HttpRequestInterceptor getRequestInterceptor(int);
public abstract void clearRequestInterceptors();
public abstract void removeRequestInterceptorByClass(java.lang.Class);
public abstract void setInterceptors(java.util.List);
public abstract org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)       throws org.apache.http.ParseException;
public abstract boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor);
public abstract org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)       throws org.apache.http.ParseException;
public abstract org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer, org.apache.http.message.ParserCursor)       throws org.apache.http.ParseException;
public abstract org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer)       throws org.apache.http.ParseException;
public abstract class java.util.concurrent.TimeUnit extends java.lang.Enum{
abstract int excessNanos(long, long);
public abstract java.lang.Object getAttribute(java.lang.String);
public abstract void setAttribute(java.lang.String, java.lang.Object);
public abstract java.lang.Object removeAttribute(java.lang.String);
public abstract class java.lang.ClassLoader extends java.lang.Object{
public abstract class java.nio.channels.spi.SelectorProvider extends java.lang.Object{
public abstract java.nio.channels.DatagramChannel openDatagramChannel()       throws java.io.IOException;
public abstract java.nio.channels.Pipe openPipe()       throws java.io.IOException;
public abstract java.nio.channels.spi.AbstractSelector openSelector()       throws java.io.IOException;
public abstract java.nio.channels.ServerSocketChannel openServerSocketChannel()       throws java.io.IOException;
public abstract java.nio.channels.SocketChannel openSocketChannel()       throws java.io.IOException;
public abstract class java.nio.channels.Pipe extends java.lang.Object{
public abstract java.nio.channels.Pipe$SourceChannel source();
public abstract java.nio.channels.Pipe$SinkChannel sink();
public abstract void onItemSelected(android.widget.AdapterView, android.view.View, int, long);
public abstract void onNothingSelected(android.widget.AdapterView);
public abstract void setResult(javax.xml.transform.Result)       throws java.lang.IllegalArgumentException;
public abstract void setSystemId(java.lang.String);
public abstract java.lang.String getSystemId();
public abstract javax.xml.transform.Transformer getTransformer();
public abstract void reset();
public abstract void setXPathVariableResolver(javax.xml.xpath.XPathVariableResolver);
public abstract javax.xml.xpath.XPathVariableResolver getXPathVariableResolver();
public abstract void setXPathFunctionResolver(javax.xml.xpath.XPathFunctionResolver);
public abstract javax.xml.xpath.XPathFunctionResolver getXPathFunctionResolver();
public abstract void setNamespaceContext(javax.xml.namespace.NamespaceContext);
public abstract javax.xml.namespace.NamespaceContext getNamespaceContext();
public abstract javax.xml.xpath.XPathExpression compile(java.lang.String)       throws javax.xml.xpath.XPathExpressionException;
public abstract java.lang.Object evaluate(java.lang.String, java.lang.Object, javax.xml.namespace.QName)       throws javax.xml.xpath.XPathExpressionException;
public abstract java.lang.String evaluate(java.lang.String, java.lang.Object)       throws javax.xml.xpath.XPathExpressionException;
public abstract java.lang.Object evaluate(java.lang.String, org.xml.sax.InputSource, javax.xml.namespace.QName)       throws javax.xml.xpath.XPathExpressionException;
public abstract java.lang.String evaluate(java.lang.String, org.xml.sax.InputSource)       throws javax.xml.xpath.XPathExpressionException;
public abstract class java.nio.DoubleBuffer extends java.nio.Buffer implements java.lang.Comparable{
public abstract java.nio.DoubleBuffer slice();
public abstract java.nio.DoubleBuffer duplicate();
public abstract java.nio.DoubleBuffer asReadOnlyBuffer();
public abstract double get();
public abstract java.nio.DoubleBuffer put(double);
public abstract double get(int);
public abstract java.nio.DoubleBuffer put(int, double);
public abstract java.nio.DoubleBuffer compact();
public abstract boolean isDirect();
public abstract java.nio.ByteOrder order();
public abstract java.lang.Class value();
public abstract void onScanCompleted(java.lang.String, android.net.Uri);
public abstract void process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)       throws org.apache.http.HttpException, java.io.IOException;
public abstract class java.util.concurrent.atomic.AtomicReferenceFieldUpdater extends java.lang.Object{
public abstract boolean compareAndSet(java.lang.Object, java.lang.Object, java.lang.Object);
public abstract boolean weakCompareAndSet(java.lang.Object, java.lang.Object, java.lang.Object);
public abstract void set(java.lang.Object, java.lang.Object);
public abstract void lazySet(java.lang.Object, java.lang.Object);
public abstract java.lang.Object get(java.lang.Object);
public abstract void setInternalIterations(int);
public abstract void startTiming(boolean);
public abstract void addIntermediate(java.lang.String);
public abstract void addIntermediate(java.lang.String, long);
public abstract void finishTiming(boolean);
public abstract void handle(short, java.lang.String, java.lang.Object, org.w3c.dom.Node, org.w3c.dom.Node);
public abstract java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
public abstract java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable, long, java.util.concurrent.TimeUnit);
public abstract java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
public abstract java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
public abstract class android.widget.AbsSeekBar extends android.widget.ProgressBar{
public abstract class java.nio.channels.DatagramChannel extends java.nio.channels.spi.AbstractSelectableChannel implements java.nio.channels.ByteChannel,java.nio.channels.ScatteringByteChannel,java.nio.channels.GatheringByteChannel{
public abstract java.net.DatagramSocket socket();
public abstract boolean isConnected();
public abstract java.nio.channels.DatagramChannel connect(java.net.SocketAddress)       throws java.io.IOException;
public abstract java.nio.channels.DatagramChannel disconnect()       throws java.io.IOException;
public abstract java.net.SocketAddress receive(java.nio.ByteBuffer)       throws java.io.IOException;
public abstract int send(java.nio.ByteBuffer, java.net.SocketAddress)       throws java.io.IOException;
public abstract int read(java.nio.ByteBuffer)       throws java.io.IOException;
public abstract long read(java.nio.ByteBuffer[], int, int)       throws java.io.IOException;
public abstract int write(java.nio.ByteBuffer)       throws java.io.IOException;
public abstract long write(java.nio.ByteBuffer[], int, int)       throws java.io.IOException;
public abstract java.sql.Connection getConnection()       throws java.sql.SQLException;
public abstract java.sql.Connection getConnection(java.lang.String, java.lang.String)       throws java.sql.SQLException;
public abstract class android.service.wallpaper.WallpaperService extends android.app.Service{
public abstract android.service.wallpaper.WallpaperService$Engine onCreateEngine();
public abstract class java.text.NumberFormat extends java.text.Format{
public abstract java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.FieldPosition);
public abstract java.lang.StringBuffer format(long, java.lang.StringBuffer, java.text.FieldPosition);
public abstract java.lang.Number parse(java.lang.String, java.text.ParsePosition);
public abstract javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig);
public abstract void destroyContext(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLContext);
public abstract boolean isLoggable(java.util.logging.LogRecord);
public abstract void addFirst(java.lang.Object);
public abstract void addLast(java.lang.Object);
public abstract boolean offerFirst(java.lang.Object);
public abstract boolean offerLast(java.lang.Object);
public abstract java.lang.Object removeFirst();
public abstract java.lang.Object removeLast();
public abstract java.lang.Object pollFirst();
public abstract java.lang.Object pollLast();
public abstract java.lang.Object getFirst();
public abstract java.lang.Object getLast();
public abstract java.lang.Object peekFirst();
public abstract java.lang.Object peekLast();
public abstract boolean removeFirstOccurrence(java.lang.Object);
public abstract boolean removeLastOccurrence(java.lang.Object);
public abstract boolean add(java.lang.Object);
public abstract boolean offer(java.lang.Object);
public abstract java.lang.Object remove();
public abstract java.lang.Object poll();
public abstract java.lang.Object element();
public abstract java.lang.Object peek();
public abstract void push(java.lang.Object);
public abstract java.lang.Object pop();
public abstract boolean remove(java.lang.Object);
public abstract boolean contains(java.lang.Object);
public abstract int size();
public abstract java.util.Iterator iterator();
public abstract java.util.Iterator descendingIterator();
public abstract class javax.xml.parsers.DocumentBuilder extends java.lang.Object{
public abstract org.w3c.dom.Document parse(org.xml.sax.InputSource)       throws org.xml.sax.SAXException, java.io.IOException;
public abstract boolean isNamespaceAware();
public abstract boolean isValidating();
public abstract void setEntityResolver(org.xml.sax.EntityResolver);
public abstract void setErrorHandler(org.xml.sax.ErrorHandler);
public abstract org.w3c.dom.Document newDocument();
public abstract org.w3c.dom.DOMImplementation getDOMImplementation();
public abstract void onVideoSizeChanged(android.media.MediaPlayer, int, int);
public abstract java.lang.Object resolveVariable(javax.xml.namespace.QName);
public abstract class android.text.method.BaseKeyListener extends android.text.method.MetaKeyKeyListener implements android.text.method.KeyListener{
public abstract void onCompletion(android.media.MediaPlayer);
public abstract class android.app.LauncherActivity extends android.app.ListActivity{
public abstract class android.test.ApplicationTestCase extends android.test.AndroidTestCase{
public abstract boolean accept(java.io.File, java.lang.String);
public abstract class android.text.style.CharacterStyle extends java.lang.Object{
public abstract void updateDrawState(android.text.TextPaint);
public abstract long getKeepAliveDuration(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext);
public abstract java.lang.String getName();
public abstract org.w3c.dom.NamedNodeMap getEntities();
public abstract org.w3c.dom.NamedNodeMap getNotations();
public abstract java.lang.String getPublicId();
public abstract java.lang.String getSystemId();
public abstract java.lang.String getInternalSubset();
public abstract int size();
public abstract boolean isEmpty();
public abstract boolean contains(java.lang.Object);
public abstract java.util.Iterator iterator();
public abstract java.lang.Object[] toArray();
public abstract java.lang.Object[] toArray(java.lang.Object[]);
public abstract boolean add(java.lang.Object);
public abstract boolean remove(java.lang.Object);
public abstract boolean containsAll(java.util.Collection);
public abstract boolean addAll(java.util.Collection);
public abstract boolean removeAll(java.util.Collection);
public abstract boolean retainAll(java.util.Collection);
public abstract void clear();
public abstract boolean equals(java.lang.Object);
public abstract int hashCode();
public abstract class android.view.OrientationListener extends java.lang.Object implements android.hardware.SensorListener{
public abstract void onOrientationChanged(int);
public abstract android.content.SharedPreferences$Editor putString(java.lang.String, java.lang.String);
public abstract android.content.SharedPreferences$Editor putInt(java.lang.String, int);
public abstract android.content.SharedPreferences$Editor putLong(java.lang.String, long);
public abstract android.content.SharedPreferences$Editor putFloat(java.lang.String, float);
public abstract android.content.SharedPreferences$Editor putBoolean(java.lang.String, boolean);
public abstract android.content.SharedPreferences$Editor remove(java.lang.String);
public abstract android.content.SharedPreferences$Editor clear();
public abstract boolean commit();
public abstract void apply();
public abstract class java.security.KeyStoreSpi extends java.lang.Object{
public abstract java.security.Key engineGetKey(java.lang.String, char[])       throws java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException;
public abstract java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String);
public abstract java.security.cert.Certificate engineGetCertificate(java.lang.String);
public abstract java.util.Date engineGetCreationDate(java.lang.String);
public abstract void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[])       throws java.security.KeyStoreException;
public abstract void engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[])       throws java.security.KeyStoreException;
public abstract void engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate)       throws java.security.KeyStoreException;
public abstract void engineDeleteEntry(java.lang.String)       throws java.security.KeyStoreException;
public abstract java.util.Enumeration engineAliases();
public abstract boolean engineContainsAlias(java.lang.String);
public abstract int engineSize();
public abstract boolean engineIsKeyEntry(java.lang.String);
public abstract boolean engineIsCertificateEntry(java.lang.String);
public abstract java.lang.String engineGetCertificateAlias(java.security.cert.Certificate);
public abstract void engineStore(java.io.OutputStream, char[])       throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException;
public abstract void engineLoad(java.io.InputStream, char[])       throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException;
public abstract void onGestureStarted(android.gesture.GestureOverlayView, android.view.MotionEvent);
public abstract void onGesture(android.gesture.GestureOverlayView, android.view.MotionEvent);
public abstract void onGestureEnded(android.gesture.GestureOverlayView, android.view.MotionEvent);
public abstract void onGestureCancelled(android.gesture.GestureOverlayView, android.view.MotionEvent);
public abstract class java.util.logging.Formatter extends java.lang.Object{
public abstract java.lang.String format(java.util.logging.LogRecord);
public abstract class android.accounts.AbstractAccountAuthenticator extends java.lang.Object{
public abstract android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse, java.lang.String);
public abstract android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)       throws android.accounts.NetworkErrorException;
public abstract android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle)       throws android.accounts.NetworkErrorException;
public abstract android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle)       throws android.accounts.NetworkErrorException;
public abstract java.lang.String getAuthTokenLabel(java.lang.String);
public abstract android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle)       throws android.accounts.NetworkErrorException;
public abstract android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String[])       throws android.accounts.NetworkErrorException;
public abstract class java.security.Signer extends java.security.Identity{
public abstract class android.graphics.drawable.Drawable extends java.lang.Object{
public abstract void draw(android.graphics.Canvas);
public abstract void setAlpha(int);
public abstract void setColorFilter(android.graphics.ColorFilter);
public abstract int getOpacity();
public abstract void onAnimationStart(android.view.animation.Animation);
public abstract void onAnimationEnd(android.view.animation.Animation);
public abstract void onAnimationRepeat(android.view.animation.Animation);
public abstract void registerDataSetObserver(android.database.DataSetObserver);
public abstract void unregisterDataSetObserver(android.database.DataSetObserver);
public abstract int getCount();
public abstract java.lang.Object getItem(int);
public abstract long getItemId(int);
public abstract boolean hasStableIds();
public abstract android.view.View getView(int, android.view.View, android.view.ViewGroup);
public abstract int getItemViewType(int);
public abstract int getViewTypeCount();
public abstract boolean isEmpty();
public abstract void onFilterComplete(int);
public abstract void rejectedExecution(java.lang.Runnable, java.util.concurrent.ThreadPoolExecutor);
public abstract void validateObject()       throws java.io.InvalidObjectException;
public abstract java.lang.reflect.Type getGenericComponentType();
public abstract boolean hasNext();
public abstract java.lang.Object next();
public abstract boolean hasPrevious();
public abstract java.lang.Object previous();
public abstract int nextIndex();
public abstract int previousIndex();
public abstract void remove();
public abstract void set(java.lang.Object);
public abstract void add(java.lang.Object);
public abstract javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay);
public abstract class java.net.DatagramSocketImpl extends java.lang.Object implements java.net.SocketOptions{
protected abstract void create()       throws java.net.SocketException;
protected abstract void bind(int, java.net.InetAddress)       throws java.net.SocketException;
protected abstract void send(java.net.DatagramPacket)       throws java.io.IOException;
protected abstract int peek(java.net.InetAddress)       throws java.io.IOException;
protected abstract int peekData(java.net.DatagramPacket)       throws java.io.IOException;
protected abstract void receive(java.net.DatagramPacket)       throws java.io.IOException;
protected abstract void setTTL(byte)       throws java.io.IOException;
protected abstract byte getTTL()       throws java.io.IOException;
protected abstract void setTimeToLive(int)       throws java.io.IOException;
protected abstract int getTimeToLive()       throws java.io.IOException;
protected abstract void join(java.net.InetAddress)       throws java.io.IOException;
protected abstract void leave(java.net.InetAddress)       throws java.io.IOException;
protected abstract void joinGroup(java.net.SocketAddress, java.net.NetworkInterface)       throws java.io.IOException;
protected abstract void leaveGroup(java.net.SocketAddress, java.net.NetworkInterface)       throws java.io.IOException;
protected abstract void close();
public abstract long getBytesTransferred();
public abstract void reset();
public abstract void onJetEvent(android.media.JetPlayer, short, byte, byte, byte, byte);
public abstract void onJetUserIdUpdate(android.media.JetPlayer, int, int);
public abstract void onJetNumQueuedSegmentUpdate(android.media.JetPlayer, int);
public abstract void onJetPauseUpdate(android.media.JetPlayer, int);
public abstract java.math.BigInteger getModulus();
public abstract class java.util.prefs.Preferences extends java.lang.Object{
public abstract void put(java.lang.String, java.lang.String);
public abstract java.lang.String get(java.lang.String, java.lang.String);
public abstract void remove(java.lang.String);
public abstract void clear()       throws java.util.prefs.BackingStoreException;
public abstract void putInt(java.lang.String, int);
public abstract int getInt(java.lang.String, int);
public abstract void putLong(java.lang.String, long);
public abstract long getLong(java.lang.String, long);
public abstract void putBoolean(java.lang.String, boolean);
public abstract boolean getBoolean(java.lang.String, boolean);
public abstract void putFloat(java.lang.String, float);
public abstract float getFloat(java.lang.String, float);
public abstract void putDouble(java.lang.String, double);
public abstract double getDouble(java.lang.String, double);
public abstract void putByteArray(java.lang.String, byte[]);
public abstract byte[] getByteArray(java.lang.String, byte[]);
public abstract java.lang.String[] keys()       throws java.util.prefs.BackingStoreException;
public abstract java.lang.String[] childrenNames()       throws java.util.prefs.BackingStoreException;
public abstract java.util.prefs.Preferences parent();
public abstract java.util.prefs.Preferences node(java.lang.String);
public abstract boolean nodeExists(java.lang.String)       throws java.util.prefs.BackingStoreException;
public abstract void removeNode()       throws java.util.prefs.BackingStoreException;
public abstract java.lang.String name();
public abstract java.lang.String absolutePath();
public abstract boolean isUserNode();
public abstract java.lang.String toString();
public abstract void flush()       throws java.util.prefs.BackingStoreException;
public abstract void sync()       throws java.util.prefs.BackingStoreException;
public abstract void addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener);
public abstract void removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener);
public abstract void addNodeChangeListener(java.util.prefs.NodeChangeListener);
public abstract void removeNodeChangeListener(java.util.prefs.NodeChangeListener);
public abstract void exportNode(java.io.OutputStream)       throws java.io.IOException, java.util.prefs.BackingStoreException;
public abstract void exportSubtree(java.io.OutputStream)       throws java.io.IOException, java.util.prefs.BackingStoreException;
public abstract java.lang.String getBaseTypeName()       throws java.sql.SQLException;
public abstract int getBaseType()       throws java.sql.SQLException;
public abstract java.lang.Object getArray()       throws java.sql.SQLException;
public abstract java.lang.Object getArray(java.util.Map)       throws java.sql.SQLException;
public abstract java.lang.Object getArray(long, int)       throws java.sql.SQLException;
public abstract java.lang.Object getArray(long, int, java.util.Map)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getResultSet()       throws java.sql.SQLException;
public abstract java.sql.ResultSet getResultSet(java.util.Map)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getResultSet(long, int)       throws java.sql.SQLException;
public abstract java.sql.ResultSet getResultSet(long, int, java.util.Map)       throws java.sql.SQLException;
public abstract void free()       throws java.sql.SQLException;
public abstract int start();
public abstract int start(int);
public abstract int end();
public abstract int end(int);
public abstract java.lang.String group();
public abstract java.lang.String group(int);
public abstract int groupCount();
public abstract java.lang.String getInterfaceDescriptor()       throws android.os.RemoteException;
public abstract boolean pingBinder();
public abstract boolean isBinderAlive();
public abstract android.os.IInterface queryLocalInterface(java.lang.String);
public abstract void dump(java.io.FileDescriptor, java.lang.String[])       throws android.os.RemoteException;
public abstract boolean transact(int, android.os.Parcel, android.os.Parcel, int)       throws android.os.RemoteException;
public abstract void linkToDeath(android.os.IBinder$DeathRecipient, int)       throws android.os.RemoteException;
public abstract boolean unlinkToDeath(android.os.IBinder$DeathRecipient, int);
public abstract void childAdded(java.util.prefs.NodeChangeEvent);
public abstract void childRemoved(java.util.prefs.NodeChangeEvent);
public abstract long length()       throws java.sql.SQLException;
public abstract byte[] getBytes(long, int)       throws java.sql.SQLException;
public abstract java.io.InputStream getBinaryStream()       throws java.sql.SQLException;
public abstract long position(byte[], long)       throws java.sql.SQLException;
public abstract long position(java.sql.Blob, long)       throws java.sql.SQLException;
public abstract int setBytes(long, byte[])       throws java.sql.SQLException;
public abstract int setBytes(long, byte[], int, int)       throws java.sql.SQLException;
public abstract java.io.OutputStream setBinaryStream(long)       throws java.sql.SQLException;
public abstract void truncate(long)       throws java.sql.SQLException;
public abstract void free()       throws java.sql.SQLException;
public abstract java.io.InputStream getBinaryStream(long, long)       throws java.sql.SQLException;
public abstract void setLocale(java.util.Locale)       throws org.xml.sax.SAXException;
public abstract void setEntityResolver(org.xml.sax.EntityResolver);
public abstract void setDTDHandler(org.xml.sax.DTDHandler);
public abstract void setDocumentHandler(org.xml.sax.DocumentHandler);
public abstract void setErrorHandler(org.xml.sax.ErrorHandler);
public abstract void parse(org.xml.sax.InputSource)       throws org.xml.sax.SAXException, java.io.IOException;
public abstract void parse(java.lang.String)       throws org.xml.sax.SAXException, java.io.IOException;
public abstract org.w3c.dom.DOMConfiguration getDomConfig();
public abstract java.lang.String getNewLine();
public abstract void setNewLine(java.lang.String);
public abstract org.w3c.dom.ls.LSSerializerFilter getFilter();
public abstract void setFilter(org.w3c.dom.ls.LSSerializerFilter);
public abstract boolean write(org.w3c.dom.Node, org.w3c.dom.ls.LSOutput)       throws org.w3c.dom.ls.LSException;
public abstract boolean writeToURI(org.w3c.dom.Node, java.lang.String)       throws org.w3c.dom.ls.LSException;
public abstract java.lang.String writeToString(org.w3c.dom.Node)       throws org.w3c.dom.DOMException, org.w3c.dom.ls.LSException;
public abstract class java.security.MessageDigest extends java.security.MessageDigestSpi{
public abstract class javax.xml.datatype.XMLGregorianCalendar extends java.lang.Object implements java.lang.Cloneable{
public abstract void clear();
public abstract void reset();
public abstract void setYear(java.math.BigInteger);
public abstract void setYear(int);
public abstract void setMonth(int);
public abstract void setDay(int);
public abstract void setTimezone(int);
public abstract void setHour(int);
public abstract void setMinute(int);
public abstract void setSecond(int);
public abstract void setMillisecond(int);
public abstract void setFractionalSecond(java.math.BigDecimal);
public abstract java.math.BigInteger getEon();
public abstract int getYear();
public abstract java.math.BigInteger getEonAndYear();
public abstract int getMonth();
public abstract int getDay();
public abstract int getTimezone();
public abstract int getHour();
public abstract int getMinute();
public abstract int getSecond();
public abstract java.math.BigDecimal getFractionalSecond();
public abstract int compare(javax.xml.datatype.XMLGregorianCalendar);
public abstract javax.xml.datatype.XMLGregorianCalendar normalize();
public abstract java.lang.String toXMLFormat();
public abstract javax.xml.namespace.QName getXMLSchemaType();
public abstract boolean isValid();
public abstract void add(javax.xml.datatype.Duration);
public abstract java.util.GregorianCalendar toGregorianCalendar();
public abstract java.util.GregorianCalendar toGregorianCalendar(java.util.TimeZone, java.util.Locale, javax.xml.datatype.XMLGregorianCalendar);
public abstract java.util.TimeZone getTimeZone(int);
public abstract java.lang.Object clone();
public abstract class java.io.OutputStream extends java.lang.Object implements java.io.Closeable,java.io.Flushable{
public abstract void write(int)       throws java.io.IOException;
public abstract int describeContents();
public abstract void writeToParcel(android.os.Parcel, int);
public abstract char first();
public abstract char last();
public abstract char current();
public abstract char next();
public abstract char previous();
public abstract char setIndex(int);
public abstract int getBeginIndex();
public abstract int getEndIndex();
public abstract int getIndex();
public abstract java.lang.Object clone();
public abstract void write(int)       throws java.io.IOException;
public abstract void write(byte[])       throws java.io.IOException;
public abstract void write(byte[], int, int)       throws java.io.IOException;
public abstract void writeBoolean(boolean)       throws java.io.IOException;
public abstract void writeByte(int)       throws java.io.IOException;
public abstract void writeShort(int)       throws java.io.IOException;
public abstract void writeChar(int)       throws java.io.IOException;
public abstract void writeInt(int)       throws java.io.IOException;
public abstract void writeLong(long)       throws java.io.IOException;
public abstract void writeFloat(float)       throws java.io.IOException;
public abstract void writeDouble(double)       throws java.io.IOException;
public abstract void writeBytes(java.lang.String)       throws java.io.IOException;
public abstract void writeChars(java.lang.String)       throws java.io.IOException;
public abstract void writeUTF(java.lang.String)       throws java.io.IOException;
public abstract java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean)       throws java.io.IOException, java.net.UnknownHostException;
public abstract void onSendFinished(android.app.PendingIntent, android.content.Intent, int, java.lang.String, android.os.Bundle);
public abstract void warning(javax.xml.transform.TransformerException)       throws javax.xml.transform.TransformerException;
public abstract void error(javax.xml.transform.TransformerException)       throws javax.xml.transform.TransformerException;
public abstract void fatalError(javax.xml.transform.TransformerException)       throws javax.xml.transform.TransformerException;
public abstract class java.security.BasicPermission extends java.security.Permission implements java.io.Serializable{
public abstract boolean isRedirectRequested(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext);
public abstract java.net.URI getLocationURI(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)       throws org.apache.http.ProtocolException;
public abstract class android.content.ContentResolver extends java.lang.Object{
public abstract void setFeature(java.lang.String, boolean)       throws org.xmlpull.v1.XmlPullParserException;
public abstract boolean getFeature(java.lang.String);
public abstract void setProperty(java.lang.String, java.lang.Object)       throws org.xmlpull.v1.XmlPullParserException;
public abstract java.lang.Object getProperty(java.lang.String);
public abstract void setInput(java.io.Reader)       throws org.xmlpull.v1.XmlPullParserException;
public abstract void setInput(java.io.InputStream, java.lang.String)       throws org.xmlpull.v1.XmlPullParserException;
public abstract java.lang.String getInputEncoding();
public abstract void defineEntityReplacementText(java.lang.String, java.lang.String)       throws org.xmlpull.v1.XmlPullParserException;
public abstract int getNamespaceCount(int)       throws org.xmlpull.v1.XmlPullParserException;
public abstract java.lang.String getNamespacePrefix(int)       throws org.xmlpull.v1.XmlPullParserException;
public abstract java.lang.String getNamespaceUri(int)       throws org.xmlpull.v1.XmlPullParserException;
public abstract java.lang.String getNamespace(java.lang.String);
public abstract int getDepth();
public abstract java.lang.String getPositionDescription();
public abstract int getLineNumber();
public abstract int getColumnNumber();
public abstract boolean isWhitespace()       throws org.xmlpull.v1.XmlPullParserException;
public abstract java.lang.String getText();
public abstract char[] getTextCharacters(int[]);
public abstract java.lang.String getNamespace();
public abstract java.lang.String getName();
public abstract java.lang.String getPrefix();
public abstract boolean isEmptyElementTag()       throws org.xmlpull.v1.XmlPullParserException;
public abstract int getAttributeCount();
public abstract java.lang.String getAttributeNamespace(int);
public abstract java.lang.String getAttributeName(int);
public abstract java.lang.String getAttributePrefix(int);
public abstract java.lang.String getAttributeType(int);
public abstract boolean isAttributeDefault(int);
public abstract java.lang.String getAttributeValue(int);
public abstract java.lang.String getAttributeValue(java.lang.String, java.lang.String);
public abstract int getEventType()       throws org.xmlpull.v1.XmlPullParserException;
public abstract int next()       throws org.xmlpull.v1.XmlPullParserException, java.io.IOException;
public abstract int nextToken()       throws org.xmlpull.v1.XmlPullParserException, java.io.IOException;
public abstract void require(int, java.lang.String, java.lang.String)       throws org.xmlpull.v1.XmlPullParserException, java.io.IOException;
public abstract java.lang.String nextText()       throws org.xmlpull.v1.XmlPullParserException, java.io.IOException;
public abstract int nextTag()       throws org.xmlpull.v1.XmlPullParserException, java.io.IOException;
public abstract void elementDecl(java.lang.String, java.lang.String)       throws org.xml.sax.SAXException;
public abstract void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)       throws org.xml.sax.SAXException;
public abstract void internalEntityDecl(java.lang.String, java.lang.String)       throws org.xml.sax.SAXException;
public abstract void externalEntityDecl(java.lang.String, java.lang.String, java.lang.String)       throws org.xml.sax.SAXException;
